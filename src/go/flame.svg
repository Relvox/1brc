<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="294" onload="init(evt)" viewBox="0 0 1200 294" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="294.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="277" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="277" > </text>
<g id="frames">
<g >
<title>runtime.(*mheap).initSpan (3 samples, 0.02%)</title><rect x="1096.6" y="181" width="0.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1099.65" y="191.5" ></text>
</g>
<g >
<title>runtime.stdcall0 (17 samples, 0.12%)</title><rect x="1116.5" y="69" width="1.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1119.45" y="79.5" ></text>
</g>
<g >
<title>runtime.lock2 (2 samples, 0.01%)</title><rect x="928.3" y="101" width="0.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="931.28" y="111.5" ></text>
</g>
<g >
<title>runtime.semasleep (221 samples, 1.52%)</title><rect x="1132.4" y="101" width="18.0" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1135.44" y="111.5" ></text>
</g>
<g >
<title>runtime.findRunnable (2 samples, 0.01%)</title><rect x="991.6" y="181" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="994.60" y="191.5" ></text>
</g>
<g >
<title>runtime.lock2 (5 samples, 0.03%)</title><rect x="1113.3" y="181" width="0.4" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1116.29" y="191.5" ></text>
</g>
<g >
<title>runtime.lock2 (3 samples, 0.02%)</title><rect x="1092.9" y="117" width="0.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1095.91" y="127.5" ></text>
</g>
<g >
<title>runtime.unlock (3 samples, 0.02%)</title><rect x="927.5" y="149" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="930.47" y="159.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (146 samples, 1.00%)</title><rect x="833.5" y="165" width="11.9" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="836.55" y="175.5" ></text>
</g>
<g >
<title>runtime.runqgrab.osyield.func1 (2 samples, 0.01%)</title><rect x="991.6" y="117" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="994.60" y="127.5" ></text>
</g>
<g >
<title>runtime.lock2 (35 samples, 0.24%)</title><rect x="1024.0" y="149" width="2.8" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1026.99" y="159.5" ></text>
</g>
<g >
<title>runtime.newstack (2 samples, 0.01%)</title><rect x="825.6" y="165" width="0.2" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="828.59" y="175.5" ></text>
</g>
<g >
<title>main.PrintOutput (24 samples, 0.17%)</title><rect x="989.7" y="197" width="1.9" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="992.65" y="207.5" ></text>
</g>
<g >
<title>runtime.forEachPInternal (65 samples, 0.45%)</title><rect x="1178.9" y="197" width="5.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1181.88" y="207.5" ></text>
</g>
<g >
<title>runtime.stdcall7 (4 samples, 0.03%)</title><rect x="1188.9" y="133" width="0.3" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1191.86" y="143.5" ></text>
</g>
<g >
<title>runtime.stdcall1 (5 samples, 0.03%)</title><rect x="1161.5" y="85" width="0.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1164.51" y="95.5" ></text>
</g>
<g >
<title>runtime.stealWork (2 samples, 0.01%)</title><rect x="991.6" y="165" width="0.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="994.60" y="175.5" ></text>
</g>
<g >
<title>runtime.semasleep (68 samples, 0.47%)</title><rect x="1170.7" y="69" width="5.5" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1173.68" y="79.5" ></text>
</g>
<g >
<title>runtime.lock2 (2 samples, 0.01%)</title><rect x="925.9" y="149" width="0.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="928.93" y="159.5" ></text>
</g>
<g >
<title>runtime.(*fixalloc).alloc (6 samples, 0.04%)</title><rect x="827.9" y="85" width="0.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="830.95" y="95.5" ></text>
</g>
<g >
<title>runtime.(*consistentHeapStats).release (2 samples, 0.01%)</title><rect x="827.1" y="165" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="830.14" y="175.5" ></text>
</g>
<g >
<title>runtime.procyield (10 samples, 0.07%)</title><rect x="931.5" y="85" width="0.8" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="934.53" y="95.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (159 samples, 1.09%)</title><rect x="1116.5" y="197" width="12.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1119.45" y="207.5" ></text>
</g>
<g >
<title>runtime.semawakeup (2 samples, 0.01%)</title><rect x="1022.4" y="133" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1025.45" y="143.5" ></text>
</g>
<g >
<title>runtime.unlock2 (3 samples, 0.02%)</title><rect x="927.5" y="133" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="930.47" y="143.5" ></text>
</g>
<g >
<title>runtime.lock2 (4 samples, 0.03%)</title><rect x="1022.6" y="133" width="0.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1025.61" y="143.5" ></text>
</g>
<g >
<title>runtime.stdcall1 (5 samples, 0.03%)</title><rect x="1184.2" y="133" width="0.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1187.16" y="143.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).scavenge (2 samples, 0.01%)</title><rect x="925.8" y="181" width="0.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="928.77" y="191.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (141 samples, 0.97%)</title><rect x="834.0" y="133" width="11.4" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="836.95" y="143.5" ></text>
</g>
<g >
<title>runtime.gcDrain (610 samples, 4.20%)</title><rect x="1129.4" y="197" width="49.5" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1132.36" y="207.5" >runt..</text>
</g>
<g >
<title>runtime.systemstack (5 samples, 0.03%)</title><rect x="928.0" y="197" width="0.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="931.04" y="207.5" ></text>
</g>
<g >
<title>runtime.deductAssistCredit (147 samples, 1.01%)</title><rect x="833.5" y="181" width="11.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="836.47" y="191.5" ></text>
</g>
<g >
<title>runtime.wakep (9 samples, 0.06%)</title><rect x="1095.6" y="181" width="0.7" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1098.59" y="191.5" ></text>
</g>
<g >
<title>runtime.semawakeup (3 samples, 0.02%)</title><rect x="1113.0" y="165" width="0.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1116.04" y="175.5" ></text>
</g>
<g >
<title>runtime.stdcall2 (2 samples, 0.01%)</title><rect x="1113.9" y="149" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1116.86" y="159.5" ></text>
</g>
<g >
<title>runtime.chansend1 (10 samples, 0.07%)</title><rect x="825.5" y="213" width="0.8" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="828.51" y="223.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).alloc (29 samples, 0.20%)</title><rect x="829.5" y="101" width="2.3" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="832.49" y="111.5" ></text>
</g>
<g >
<title>runtime.gcStart.func1 (45 samples, 0.31%)</title><rect x="1185.7" y="213" width="3.7" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1188.70" y="223.5" ></text>
</g>
<g >
<title>runtime.stdcall1 (7 samples, 0.05%)</title><rect x="1186.2" y="133" width="0.6" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1189.18" y="143.5" ></text>
</g>
<g >
<title>runtime.semasleep (5 samples, 0.03%)</title><rect x="1185.8" y="117" width="0.4" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1188.78" y="127.5" ></text>
</g>
<g >
<title>runtime.(*mspan).init (5 samples, 0.03%)</title><rect x="828.9" y="85" width="0.4" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="831.92" y="95.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush (9 samples, 0.06%)</title><rect x="988.4" y="165" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="991.35" y="175.5" ></text>
</g>
<g >
<title>runtime.(*gcCPULimiterState).update (2 samples, 0.01%)</title><rect x="1092.2" y="133" width="0.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1095.18" y="143.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).enlistWorker (123 samples, 0.85%)</title><rect x="1116.5" y="149" width="9.9" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1119.45" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mheap).initSpan (13 samples, 0.09%)</title><rect x="828.4" y="101" width="1.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="831.43" y="111.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (159 samples, 1.09%)</title><rect x="1116.5" y="213" width="12.9" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1119.45" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mcache).allocLarge (80 samples, 0.55%)</title><rect x="827.0" y="181" width="6.5" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="829.97" y="191.5" ></text>
</g>
<g >
<title>runtime.bgsweep (21 samples, 0.14%)</title><rect x="926.2" y="229" width="1.7" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="929.17" y="239.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).scavengeOne (29 samples, 0.20%)</title><rect x="1113.7" y="197" width="2.3" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1116.69" y="207.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).free (2 samples, 0.01%)</title><rect x="927.2" y="133" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="930.23" y="143.5" ></text>
</g>
<g >
<title>runtime.(*sysMemStat).add (3 samples, 0.02%)</title><rect x="832.1" y="101" width="0.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="835.09" y="111.5" ></text>
</g>
<g >
<title>runtime.stdcall1 (5 samples, 0.03%)</title><rect x="1124.7" y="101" width="0.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1127.73" y="111.5" ></text>
</g>
<g >
<title>runtime.markroot.func1 (104 samples, 0.72%)</title><rect x="1161.9" y="165" width="8.5" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1164.91" y="175.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (140 samples, 0.96%)</title><rect x="834.0" y="101" width="11.4" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="837.04" y="111.5" ></text>
</g>
<g >
<title>runtime.lock2 (102 samples, 0.70%)</title><rect x="1116.5" y="101" width="8.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1119.45" y="111.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker (755 samples, 5.19%)</title><rect x="927.9" y="229" width="61.3" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="930.88" y="239.5" >runtim..</text>
</g>
<g >
<title>runtime.greyobject (137 samples, 0.94%)</title><rect x="972.0" y="149" width="11.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="975.04" y="159.5" ></text>
</g>
<g >
<title>main.main (30 samples, 0.21%)</title><rect x="989.2" y="213" width="2.4" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="992.17" y="223.5" ></text>
</g>
<g >
<title>runtime.chanrecv (9 samples, 0.06%)</title><rect x="393.4" y="197" width="0.7" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="396.40" y="207.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone.forEachP.func5 (5 samples, 0.03%)</title><rect x="928.0" y="181" width="0.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="931.04" y="191.5" ></text>
</g>
<g >
<title>runtime.(*pageCache).alloc (2 samples, 0.01%)</title><rect x="831.9" y="101" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="834.92" y="111.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Write (22 samples, 0.15%)</title><rect x="989.7" y="165" width="1.7" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="992.65" y="175.5" ></text>
</g>
<g >
<title>runtime.scanobject (133 samples, 0.91%)</title><rect x="834.6" y="85" width="10.8" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="837.60" y="95.5" ></text>
</g>
<g >
<title>runtime.wakeNetPoller (2 samples, 0.01%)</title><rect x="925.9" y="181" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="928.93" y="191.5" ></text>
</g>
<g >
<title>runtime.systemstack (186 samples, 1.28%)</title><rect x="909.7" y="165" width="15.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="912.69" y="175.5" ></text>
</g>
<g >
<title>runtime.scanobject (680 samples, 4.68%)</title><rect x="933.2" y="165" width="55.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="936.15" y="175.5" >runti..</text>
</g>
<g >
<title>runtime.semawakeup (2 samples, 0.01%)</title><rect x="1178.7" y="69" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1181.72" y="79.5" ></text>
</g>
<g >
<title>runtime.gcstopm (365 samples, 2.51%)</title><rect x="993.4" y="165" width="29.6" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="996.39" y="175.5" >ru..</text>
</g>
<g >
<title>runtime.schedule (2 samples, 0.01%)</title><rect x="825.6" y="133" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="828.59" y="143.5" ></text>
</g>
<g >
<title>runtime.stdcall0 (20 samples, 0.14%)</title><rect x="993.5" y="117" width="1.6" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="996.47" y="127.5" ></text>
</g>
<g >
<title>runtime.lock2.osyield.func1 (4 samples, 0.03%)</title><rect x="1170.4" y="69" width="0.3" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1173.35" y="79.5" ></text>
</g>
<g >
<title>runtime.semasleep (29 samples, 0.20%)</title><rect x="1041.9" y="133" width="2.3" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1044.85" y="143.5" ></text>
</g>
<g >
<title>runtime.newstack (5 samples, 0.03%)</title><rect x="495.8" y="197" width="0.5" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="498.85" y="207.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).enlistWorker (401 samples, 2.76%)</title><rect x="1129.4" y="165" width="32.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1132.36" y="175.5" >ru..</text>
</g>
<g >
<title>runtime.notewakeup (4 samples, 0.03%)</title><rect x="1044.2" y="133" width="0.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1047.20" y="143.5" ></text>
</g>
<g >
<title>runtime.semasleep (457 samples, 3.14%)</title><rect x="1054.0" y="165" width="37.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1057.03" y="175.5" >run..</text>
</g>
<g >
<title>runtime.semasleep (2 samples, 0.01%)</title><rect x="925.9" y="133" width="0.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="928.93" y="143.5" ></text>
</g>
<g >
<title>runtime.semasleep (11 samples, 0.08%)</title><rect x="991.8" y="165" width="0.9" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="994.76" y="175.5" ></text>
</g>
<g >
<title>main.ParseBlocks.func1.1 (5,279 samples, 36.32%)</title><rect x="496.3" y="229" width="428.5" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="499.25" y="239.5" >main.ParseBlocks.func1.1</text>
</g>
<g >
<title>runtime.lock2.osyield.func1 (17 samples, 0.12%)</title><rect x="1116.5" y="85" width="1.3" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1119.45" y="95.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (159 samples, 1.09%)</title><rect x="1116.5" y="181" width="12.9" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1119.45" y="191.5" ></text>
</g>
<g >
<title>runtime.preemptone (44 samples, 0.30%)</title><rect x="1185.7" y="165" width="3.6" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1188.70" y="175.5" ></text>
</g>
<g >
<title>runtime.stealWork (184 samples, 1.27%)</title><rect x="1026.8" y="165" width="15.0" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1029.83" y="175.5" ></text>
</g>
<g >
<title>runtime.systemstack (6 samples, 0.04%)</title><rect x="927.2" y="181" width="0.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="930.23" y="191.5" ></text>
</g>
<g >
<title>runtime.pidlegetSpinning (2 samples, 0.01%)</title><rect x="1095.6" y="165" width="0.2" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="1098.59" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocMSpanLocked (8 samples, 0.06%)</title><rect x="827.8" y="101" width="0.6" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="830.78" y="111.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep.(*mheap).freeSpan.func4 (5 samples, 0.03%)</title><rect x="1116.0" y="213" width="0.5" height="15.0" fill="rgb(208,13,3)" rx="2" ry="2" />
<text  x="1119.05" y="223.5" ></text>
</g>
<g >
<title>runtime.semacquire1 (2 samples, 0.01%)</title><rect x="845.4" y="165" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="848.40" y="175.5" ></text>
</g>
<g >
<title>runtime.stdcall1 (5 samples, 0.03%)</title><rect x="1176.2" y="85" width="0.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1179.20" y="95.5" ></text>
</g>
<g >
<title>runtime.preemptone (18 samples, 0.12%)</title><rect x="1184.2" y="165" width="1.4" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1187.16" y="175.5" ></text>
</g>
<g >
<title>all (14,536 samples, 100%)</title><rect x="10.0" y="245" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_fast32 (1,258 samples, 8.65%)</title><rect x="394.1" y="213" width="102.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="397.13" y="223.5" >runtime.mapa..</text>
</g>
<g >
<title>runtime.lock2 (574 samples, 3.95%)</title><rect x="1044.5" y="181" width="46.6" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1047.53" y="191.5" >runt..</text>
</g>
<g >
<title>runtime.(*pageAlloc).scavenge.func1 (29 samples, 0.20%)</title><rect x="1113.7" y="213" width="2.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1116.69" y="223.5" ></text>
</g>
<g >
<title>runtime.stdcall2 (26 samples, 0.18%)</title><rect x="1186.8" y="133" width="2.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1189.75" y="143.5" ></text>
</g>
<g >
<title>runtime.stdcall0 (14 samples, 0.10%)</title><rect x="1045.0" y="149" width="1.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1048.02" y="159.5" ></text>
</g>
<g >
<title>runtime.lock2 (3 samples, 0.02%)</title><rect x="1096.6" y="149" width="0.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1099.65" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mspan).heapBitsSmallForAddr (62 samples, 0.43%)</title><rect x="954.7" y="133" width="5.0" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="957.67" y="143.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).findRunnableGCWorker (4 samples, 0.03%)</title><rect x="1092.0" y="149" width="0.3" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="1095.02" y="159.5" ></text>
</g>
<g >
<title>runtime.stopm (3 samples, 0.02%)</title><rect x="1092.9" y="133" width="0.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1095.91" y="143.5" ></text>
</g>
<g >
<title>runtime.(*pallocBits).find (2 samples, 0.01%)</title><rect x="831.6" y="69" width="0.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="834.60" y="79.5" ></text>
</g>
<g >
<title>runtime.stdcall0 (2 samples, 0.01%)</title><rect x="1024.0" y="117" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1026.99" y="127.5" ></text>
</g>
<g >
<title>runtime.preemptone (65 samples, 0.45%)</title><rect x="1178.9" y="165" width="5.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1181.88" y="175.5" ></text>
</g>
<g >
<title>runtime.startm (7 samples, 0.05%)</title><rect x="1095.8" y="165" width="0.5" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1098.75" y="175.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (343 samples, 2.36%)</title><rect x="846.6" y="181" width="27.9" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="849.62" y="191.5" >r..</text>
</g>
<g >
<title>runtime.makeslice (593 samples, 4.08%)</title><rect x="826.3" y="213" width="48.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="829.32" y="223.5" >runt..</text>
</g>
<g >
<title>runtime.stdcall1 (6 samples, 0.04%)</title><rect x="1093.2" y="101" width="0.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1096.15" y="111.5" ></text>
</g>
<g >
<title>main.MergeOutput (6 samples, 0.04%)</title><rect x="989.2" y="197" width="0.5" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="992.17" y="207.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).balance (2 samples, 0.01%)</title><rect x="834.4" y="85" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="837.36" y="95.5" ></text>
</g>
<g >
<title>runtime.resetspinning (34 samples, 0.23%)</title><rect x="1041.8" y="181" width="2.7" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1044.77" y="191.5" ></text>
</g>
<g >
<title>runtime.lock2.osyield.func1 (2 samples, 0.01%)</title><rect x="1113.7" y="165" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1116.69" y="175.5" ></text>
</g>
<g >
<title>runtime.semawakeup (5 samples, 0.03%)</title><rect x="1095.2" y="165" width="0.4" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1098.18" y="175.5" ></text>
</g>
<g >
<title>runtime.suspendG (104 samples, 0.72%)</title><rect x="1161.9" y="149" width="8.5" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1164.91" y="159.5" ></text>
</g>
<g >
<title>runtime.schedule (2 samples, 0.01%)</title><rect x="991.6" y="197" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="994.60" y="207.5" ></text>
</g>
<g >
<title>runtime.stdcall0 (3 samples, 0.02%)</title><rect x="1096.6" y="117" width="0.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1099.65" y="127.5" ></text>
</g>
<g >
<title>runtime.stdcall0 (4 samples, 0.03%)</title><rect x="1170.4" y="53" width="0.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1173.35" y="63.5" ></text>
</g>
<g >
<title>runtime.stdcall2 (29 samples, 0.20%)</title><rect x="1041.9" y="117" width="2.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1044.85" y="127.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (210 samples, 1.44%)</title><rect x="1096.6" y="213" width="17.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1099.65" y="223.5" ></text>
</g>
<g >
<title>runtime.checkTimers (2 samples, 0.01%)</title><rect x="1026.9" y="149" width="0.2" height="15.0" fill="rgb(228,105,25)" rx="2" ry="2" />
<text  x="1029.91" y="159.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (3 samples, 0.02%)</title><rect x="1094.0" y="117" width="0.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1096.97" y="127.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).balance (401 samples, 2.76%)</title><rect x="1129.4" y="181" width="32.5" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1132.36" y="191.5" >ru..</text>
</g>
<g >
<title>runtime.stdcall2 (11 samples, 0.08%)</title><rect x="991.8" y="149" width="0.9" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="994.76" y="159.5" ></text>
</g>
<g >
<title>runtime.unlock2 (2 samples, 0.01%)</title><rect x="1094.4" y="133" width="0.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1097.37" y="143.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).put (105 samples, 0.72%)</title><rect x="1170.4" y="149" width="8.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1173.35" y="159.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).enlistWorker (35 samples, 0.24%)</title><rect x="1126.5" y="117" width="2.9" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1129.52" y="127.5" ></text>
</g>
<g >
<title>runtime.preemptall (3 samples, 0.02%)</title><rect x="928.2" y="149" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="931.20" y="159.5" ></text>
</g>
<g >
<title>runtime.findObject (2 samples, 0.01%)</title><rect x="1094.0" y="101" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1097.05" y="111.5" ></text>
</g>
<g >
<title>runtime.semawakeup (7 samples, 0.05%)</title><rect x="1095.8" y="133" width="0.5" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1098.75" y="143.5" ></text>
</g>
<g >
<title>runtime.gopark (2 samples, 0.01%)</title><rect x="928.4" y="213" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="931.45" y="223.5" ></text>
</g>
<g >
<title>runtime.stdcall0 (7 samples, 0.05%)</title><rect x="1094.5" y="85" width="0.6" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1097.53" y="95.5" ></text>
</g>
<g >
<title>runtime.preemptM (35 samples, 0.24%)</title><rect x="1126.5" y="85" width="2.9" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="1129.52" y="95.5" ></text>
</g>
<g >
<title>syscall.WriteConsole (22 samples, 0.15%)</title><rect x="989.7" y="133" width="1.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="992.65" y="143.5" ></text>
</g>
<g >
<title>runtime.lock2.osyield.func1 (21 samples, 0.14%)</title><rect x="993.4" y="133" width="1.7" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="996.39" y="143.5" ></text>
</g>
<g >
<title>runtime.stopTheWorldWithSema (45 samples, 0.31%)</title><rect x="1185.7" y="197" width="3.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1188.70" y="207.5" ></text>
</g>
<g >
<title>runtime.goexit0 (2 samples, 0.01%)</title><rect x="991.6" y="213" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="994.60" y="223.5" ></text>
</g>
<g >
<title>runtime.preemptone (3 samples, 0.02%)</title><rect x="928.2" y="133" width="0.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="931.20" y="143.5" ></text>
</g>
<g >
<title>runtime.gcStart.func2 (2 samples, 0.01%)</title><rect x="845.6" y="149" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="848.64" y="159.5" ></text>
</g>
<g >
<title>runtime.runqsteal (7 samples, 0.05%)</title><rect x="1094.5" y="133" width="0.6" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1097.53" y="143.5" ></text>
</g>
<g >
<title>runtime.runqsteal (2 samples, 0.01%)</title><rect x="991.6" y="149" width="0.2" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="994.60" y="159.5" ></text>
</g>
<g >
<title>runtime.newstack (638 samples, 4.39%)</title><rect x="1044.5" y="213" width="51.8" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1047.53" y="223.5" >runti..</text>
</g>
<g >
<title>runtime.semasleep (2 samples, 0.01%)</title><rect x="1113.9" y="165" width="0.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1116.86" y="175.5" ></text>
</g>
<g >
<title>runtime.preemptM (2 samples, 0.01%)</title><rect x="834.4" y="37" width="0.1" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="837.36" y="47.5" ></text>
</g>
<g >
<title>runtime.notewakeup (7 samples, 0.05%)</title><rect x="1095.8" y="149" width="0.5" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1098.75" y="159.5" ></text>
</g>
<g >
<title>runtime.stdcall0 (2 samples, 0.01%)</title><rect x="1178.9" y="101" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1181.88" y="111.5" ></text>
</g>
<g >
<title>runtime.startm (4 samples, 0.03%)</title><rect x="1044.2" y="149" width="0.3" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1047.20" y="159.5" ></text>
</g>
<g >
<title>runtime.lock2 (11 samples, 0.08%)</title><rect x="931.4" y="101" width="0.9" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="934.45" y="111.5" ></text>
</g>
<g >
<title>runtime.systemstack (142 samples, 0.98%)</title><rect x="833.9" y="149" width="11.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="836.87" y="159.5" ></text>
</g>
<g >
<title>runtime.handoff (3 samples, 0.02%)</title><rect x="932.3" y="149" width="0.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="935.34" y="159.5" ></text>
</g>
<g >
<title>runtime.chansend (10 samples, 0.07%)</title><rect x="825.5" y="197" width="0.8" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="828.51" y="207.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).update (2 samples, 0.01%)</title><rect x="927.2" y="117" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="930.23" y="127.5" ></text>
</g>
<g >
<title>runtime.unlock2 (5 samples, 0.03%)</title><rect x="1161.5" y="117" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1164.51" y="127.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).writeConsole (22 samples, 0.15%)</title><rect x="989.7" y="149" width="1.7" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="992.65" y="159.5" ></text>
</g>
<g >
<title>runtime.stdcall1 (2 samples, 0.01%)</title><rect x="1178.7" y="53" width="0.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1181.72" y="63.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).enlistWorker (105 samples, 0.72%)</title><rect x="1170.4" y="133" width="8.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1173.35" y="143.5" ></text>
</g>
<g >
<title>runtime.finishsweep_m (2 samples, 0.01%)</title><rect x="845.6" y="133" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="848.64" y="143.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker.func2 (610 samples, 4.20%)</title><rect x="1129.4" y="213" width="49.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1132.36" y="223.5" >runt..</text>
</g>
<g >
<title>runtime.execute (3 samples, 0.02%)</title><rect x="1091.3" y="165" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1094.29" y="175.5" ></text>
</g>
<g >
<title>runtime.lock (5 samples, 0.03%)</title><rect x="1116.0" y="197" width="0.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1119.05" y="207.5" ></text>
</g>
<g >
<title>runtime.stopTheWorldWithSema (18 samples, 0.12%)</title><rect x="1184.2" y="197" width="1.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1187.16" y="207.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone.forEachP.func5 (65 samples, 0.45%)</title><rect x="1178.9" y="213" width="5.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1181.88" y="223.5" ></text>
</g>
<g >
<title>runtime.mallocgc (593 samples, 4.08%)</title><rect x="826.3" y="197" width="48.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="829.32" y="207.5" >runt..</text>
</g>
<g >
<title>runtime.runqsteal (181 samples, 1.25%)</title><rect x="1027.1" y="149" width="14.7" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1030.08" y="159.5" ></text>
</g>
<g >
<title>runtime.procyield (2 samples, 0.01%)</title><rect x="1022.7" y="117" width="0.2" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="1025.69" y="127.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).allocRange (12 samples, 0.08%)</title><rect x="829.7" y="85" width="0.9" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="832.65" y="95.5" ></text>
</g>
<g >
<title>runtime.newMarkBits (3 samples, 0.02%)</title><rect x="1096.6" y="165" width="0.3" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1099.65" y="175.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.01%)</title><rect x="845.6" y="165" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="848.64" y="175.5" ></text>
</g>
<g >
<title>runtime.stdcall2 (13 samples, 0.09%)</title><rect x="1184.6" y="133" width="1.0" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1187.56" y="143.5" ></text>
</g>
<g >
<title>runtime.preemptone (105 samples, 0.72%)</title><rect x="1170.4" y="117" width="8.5" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1173.35" y="127.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.01%)</title><rect x="925.8" y="165" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="928.77" y="175.5" ></text>
</g>
<g >
<title>runtime.notewakeup (2 samples, 0.01%)</title><rect x="1022.4" y="149" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1025.45" y="159.5" ></text>
</g>
<g >
<title>runtime.stdcall2 (7 samples, 0.05%)</title><rect x="1179.0" y="101" width="0.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1182.04" y="111.5" ></text>
</g>
<g >
<title>runtime.ready (5 samples, 0.03%)</title><rect x="1189.5" y="197" width="0.4" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1192.51" y="207.5" ></text>
</g>
<g >
<title>internal/bytealg.IndexByte (81 samples, 0.56%)</title><rect x="818.6" y="197" width="6.6" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="821.61" y="207.5" ></text>
</g>
<g >
<title>runtime.runqgrab (2 samples, 0.01%)</title><rect x="991.6" y="133" width="0.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="994.60" y="143.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).update (2 samples, 0.01%)</title><rect x="827.3" y="165" width="0.2" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="830.30" y="175.5" ></text>
</g>
<g >
<title>runtime.preemptM (123 samples, 0.85%)</title><rect x="1116.5" y="117" width="9.9" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="1119.45" y="127.5" ></text>
</g>
<g >
<title>runtime.asyncPreempt (14 samples, 0.10%)</title><rect x="392.2" y="213" width="1.1" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="395.18" y="223.5" ></text>
</g>
<g >
<title>runtime.preemptone (14 samples, 0.10%)</title><rect x="931.2" y="133" width="1.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="934.21" y="143.5" ></text>
</g>
<g >
<title>runtime.semasleep (7 samples, 0.05%)</title><rect x="1179.0" y="117" width="0.6" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1182.04" y="127.5" ></text>
</g>
<g >
<title>runtime.preemptM (3 samples, 0.02%)</title><rect x="928.2" y="117" width="0.2" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="931.20" y="127.5" ></text>
</g>
<g >
<title>runtime.stdcall0 (2 samples, 0.01%)</title><rect x="991.6" y="101" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="994.60" y="111.5" ></text>
</g>
<g >
<title>runtime.stdcall1 (7 samples, 0.05%)</title><rect x="1095.8" y="117" width="0.5" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1098.75" y="127.5" ></text>
</g>
<g >
<title>runtime.findObject (108 samples, 0.74%)</title><rect x="916.0" y="117" width="8.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="919.03" y="127.5" ></text>
</g>
<g >
<title>runtime.gcFlushBgCredit (3 samples, 0.02%)</title><rect x="932.8" y="165" width="0.3" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="935.83" y="175.5" ></text>
</g>
<g >
<title>runtime.preemptall (44 samples, 0.30%)</title><rect x="1185.7" y="181" width="3.6" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1188.70" y="191.5" ></text>
</g>
<g >
<title>syscall.SyscallN (22 samples, 0.15%)</title><rect x="989.7" y="101" width="1.7" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="992.65" y="111.5" ></text>
</g>
<g >
<title>runtime.stdcall2 (102 samples, 0.70%)</title><rect x="1152.0" y="117" width="8.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1155.01" y="127.5" ></text>
</g>
<g >
<title>runtime.stdcall2 (221 samples, 1.52%)</title><rect x="1132.4" y="85" width="18.0" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1135.44" y="95.5" ></text>
</g>
<g >
<title>runtime.semasleep (40 samples, 0.28%)</title><rect x="1106.3" y="165" width="3.3" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1109.31" y="175.5" ></text>
</g>
<g >
<title>runtime.lock2 (156 samples, 1.07%)</title><rect x="1096.9" y="181" width="12.7" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1099.89" y="191.5" ></text>
</g>
<g >
<title>runtime.lock2 (9 samples, 0.06%)</title><rect x="1178.9" y="133" width="0.7" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1181.88" y="143.5" ></text>
</g>
<g >
<title>runtime.goschedImpl (11 samples, 0.08%)</title><rect x="991.8" y="197" width="0.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="994.76" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mspan).typePointersOfUnchecked (16 samples, 0.11%)</title><rect x="839.0" y="69" width="1.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="841.99" y="79.5" ></text>
</g>
<g >
<title>runtime.stdcall2 (26 samples, 0.18%)</title><rect x="1176.6" y="85" width="2.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1179.61" y="95.5" ></text>
</g>
<g >
<title>runtime.preemptone (401 samples, 2.76%)</title><rect x="1129.4" y="149" width="32.5" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1132.36" y="159.5" >ru..</text>
</g>
<g >
<title>runtime.systemstack (66 samples, 0.45%)</title><rect x="827.5" y="149" width="5.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="830.46" y="159.5" ></text>
</g>
<g >
<title>runtime.releaseSudog (3 samples, 0.02%)</title><rect x="393.7" y="181" width="0.3" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="396.73" y="191.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep.(*mheap).freeSpan.func4 (6 samples, 0.04%)</title><rect x="927.2" y="165" width="0.5" height="15.0" fill="rgb(208,13,3)" rx="2" ry="2" />
<text  x="930.23" y="175.5" ></text>
</g>
<g >
<title>runtime.runqgrab.osyield.func1 (7 samples, 0.05%)</title><rect x="1094.5" y="101" width="0.6" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1097.53" y="111.5" ></text>
</g>
<g >
<title>runtime.lock2 (259 samples, 1.78%)</title><rect x="1129.4" y="117" width="21.0" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1132.36" y="127.5" ></text>
</g>
<g >
<title>runtime.lock2 (5 samples, 0.03%)</title><rect x="1189.5" y="165" width="0.4" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1192.51" y="175.5" ></text>
</g>
<g >
<title>runtime.lock2.osyield.func1 (38 samples, 0.26%)</title><rect x="1129.4" y="101" width="3.0" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1132.36" y="111.5" ></text>
</g>
<g >
<title>runtime.stdcall0 (38 samples, 0.26%)</title><rect x="1129.4" y="85" width="3.0" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1132.36" y="95.5" ></text>
</g>
<g >
<title>runtime.gcStart (5 samples, 0.03%)</title><rect x="845.4" y="181" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="848.40" y="191.5" ></text>
</g>
<g >
<title>os.(*File).Write (22 samples, 0.15%)</title><rect x="989.7" y="181" width="1.7" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="992.65" y="191.5" ></text>
</g>
<g >
<title>runtime.unlock2 (3 samples, 0.02%)</title><rect x="1113.0" y="181" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1116.04" y="191.5" ></text>
</g>
<g >
<title>runtime.getempty (2 samples, 0.01%)</title><rect x="983.0" y="117" width="0.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="986.00" y="127.5" ></text>
</g>
<g >
<title>runtime.lock2.osyield.func1 (14 samples, 0.10%)</title><rect x="1045.0" y="165" width="1.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1048.02" y="175.5" ></text>
</g>
<g >
<title>runtime.(*pallocBits).summarize (3 samples, 0.02%)</title><rect x="829.9" y="53" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="832.90" y="63.5" ></text>
</g>
<g >
<title>runtime.markroot (104 samples, 0.72%)</title><rect x="1161.9" y="181" width="8.5" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1164.91" y="191.5" ></text>
</g>
<g >
<title>main.MapData.func1.1 (5,987 samples, 41.19%)</title><rect x="10.2" y="229" width="486.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="13.24" y="239.5" >main.MapData.func1.1</text>
</g>
<g >
<title>runtime.stdcall2 (85 samples, 0.58%)</title><rect x="1117.8" y="69" width="6.9" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1120.83" y="79.5" ></text>
</g>
<g >
<title>runtime.preemptM (401 samples, 2.76%)</title><rect x="1129.4" y="133" width="32.5" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="1132.36" y="143.5" >ru..</text>
</g>
<g >
<title>runtime.newMarkBits (2 samples, 0.01%)</title><rect x="927.1" y="181" width="0.1" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="930.07" y="191.5" ></text>
</g>
<g >
<title>runtime.semasleep (331 samples, 2.28%)</title><rect x="995.6" y="133" width="26.8" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="998.58" y="143.5" >r..</text>
</g>
<g >
<title>runtime.greyobject (28 samples, 0.19%)</title><rect x="842.6" y="69" width="2.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="845.56" y="79.5" ></text>
</g>
<g >
<title>runtime.lock2 (2 samples, 0.01%)</title><rect x="1093.8" y="149" width="0.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1096.80" y="159.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).find (14 samples, 0.10%)</title><rect x="830.6" y="85" width="1.2" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="833.63" y="95.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).balance (123 samples, 0.85%)</title><rect x="1116.5" y="165" width="9.9" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1119.45" y="175.5" ></text>
</g>
<g >
<title>runtime.lock2 (6 samples, 0.04%)</title><rect x="1185.7" y="133" width="0.5" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1188.70" y="143.5" ></text>
</g>
<g >
<title>runtime.lock2 (2 samples, 0.01%)</title><rect x="925.8" y="117" width="0.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="928.77" y="127.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (9 samples, 0.06%)</title><rect x="988.4" y="149" width="0.7" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="991.35" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mheap).nextSpanForSweep (3 samples, 0.02%)</title><rect x="926.7" y="197" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="929.66" y="207.5" ></text>
</g>
<g >
<title>runtime.semasleep (27 samples, 0.19%)</title><rect x="1126.5" y="53" width="2.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1129.52" y="63.5" ></text>
</g>
<g >
<title>runtime.stdcall2 (10 samples, 0.07%)</title><rect x="1023.2" y="133" width="0.8" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1026.18" y="143.5" ></text>
</g>
<g >
<title>runtime.semasleep (5 samples, 0.03%)</title><rect x="1113.3" y="165" width="0.4" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1116.29" y="175.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (141 samples, 0.97%)</title><rect x="834.0" y="117" width="11.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="836.95" y="127.5" ></text>
</g>
<g >
<title>runtime.morestack (638 samples, 4.39%)</title><rect x="1044.5" y="229" width="51.8" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1047.53" y="239.5" >runti..</text>
</g>
<g >
<title>runtime.stdcall2 (331 samples, 2.28%)</title><rect x="995.6" y="117" width="26.8" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="998.58" y="127.5" >r..</text>
</g>
<g >
<title>runtime.systemstack (1,153 samples, 7.93%)</title><rect x="1096.3" y="229" width="93.6" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1099.32" y="239.5" >runtime.sys..</text>
</g>
<g >
<title>runtime.lock2 (30 samples, 0.21%)</title><rect x="1041.8" y="149" width="2.4" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1044.77" y="159.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone.func2 (18 samples, 0.12%)</title><rect x="1184.2" y="213" width="1.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1187.16" y="223.5" ></text>
</g>
<g >
<title>runtime.lock2 (358 samples, 2.46%)</title><rect x="993.4" y="149" width="29.0" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="996.39" y="159.5" >ru..</text>
</g>
<g >
<title>runtime.lock2 (72 samples, 0.50%)</title><rect x="1170.4" y="85" width="5.8" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1173.35" y="95.5" ></text>
</g>
<g >
<title>runtime.notewakeup (3 samples, 0.02%)</title><rect x="1092.7" y="133" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1095.67" y="143.5" ></text>
</g>
<g >
<title>runtime.wakep (2 samples, 0.01%)</title><rect x="925.9" y="165" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="928.93" y="175.5" ></text>
</g>
<g >
<title>runtime.cgocall (22 samples, 0.15%)</title><rect x="989.7" y="85" width="1.7" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="992.65" y="95.5" ></text>
</g>
<g >
<title>runtime.modtimer (2 samples, 0.01%)</title><rect x="925.9" y="197" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="928.93" y="207.5" ></text>
</g>
<g >
<title>runtime.stdcall2 (5 samples, 0.03%)</title><rect x="1189.5" y="133" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1192.51" y="143.5" ></text>
</g>
<g >
<title>runtime.semasleep (10 samples, 0.07%)</title><rect x="1023.2" y="149" width="0.8" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1026.18" y="159.5" ></text>
</g>
<g >
<title>runtime.gopreempt_m (11 samples, 0.08%)</title><rect x="991.8" y="213" width="0.9" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="994.76" y="223.5" ></text>
</g>
<g >
<title>runtime.wakep (5 samples, 0.03%)</title><rect x="1189.5" y="181" width="0.4" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1192.51" y="191.5" ></text>
</g>
<g >
<title>runtime.(*scavengerState).init.func2 (2 samples, 0.01%)</title><rect x="925.8" y="197" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="928.77" y="207.5" ></text>
</g>
<g >
<title>runtime.sysUsedOS (43 samples, 0.30%)</title><rect x="1109.6" y="181" width="3.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1112.55" y="191.5" ></text>
</g>
<g >
<title>runtime.procyield (2 samples, 0.01%)</title><rect x="1092.9" y="101" width="0.2" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="1095.91" y="111.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).update (8 samples, 0.06%)</title><rect x="829.7" y="69" width="0.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="832.65" y="79.5" ></text>
</g>
<g >
<title>runtime.runqgrab (7 samples, 0.05%)</title><rect x="1094.5" y="117" width="0.6" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1097.53" y="127.5" ></text>
</g>
<g >
<title>runtime.semasleep (85 samples, 0.58%)</title><rect x="1117.8" y="85" width="6.9" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1120.83" y="95.5" ></text>
</g>
<g >
<title>runtime.runqgrab (180 samples, 1.24%)</title><rect x="1027.2" y="133" width="14.6" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1030.16" y="143.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (205 samples, 1.41%)</title><rect x="1096.6" y="197" width="16.7" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1099.65" y="207.5" ></text>
</g>
<g >
<title>runtime.wbMove (620 samples, 4.27%)</title><rect x="874.5" y="213" width="50.3" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="877.46" y="223.5" >runti..</text>
</g>
<g >
<title>runtime.(*mspan).typePointersOfUnchecked (71 samples, 0.49%)</title><rect x="953.9" y="149" width="5.8" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="956.94" y="159.5" ></text>
</g>
<g >
<title>runtime.unlock2 (6 samples, 0.04%)</title><rect x="1093.2" y="133" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1096.15" y="143.5" ></text>
</g>
<g >
<title>runtime.(*scavengeIndex).alloc (3 samples, 0.02%)</title><rect x="830.4" y="69" width="0.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="833.38" y="79.5" ></text>
</g>
<g >
<title>runtime.semasleep (2 samples, 0.01%)</title><rect x="1092.5" y="117" width="0.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1095.51" y="127.5" ></text>
</g>
<g >
<title>runtime.stdcall3 (24 samples, 0.17%)</title><rect x="1114.0" y="165" width="2.0" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1117.02" y="175.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).scavenge.func1 (2 samples, 0.01%)</title><rect x="925.8" y="149" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="928.77" y="159.5" ></text>
</g>
<g >
<title>runtime.systemstack (745 samples, 5.13%)</title><rect x="928.7" y="213" width="60.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="931.69" y="223.5" >runtim..</text>
</g>
<g >
<title>runtime.stdcall2 (27 samples, 0.19%)</title><rect x="1126.5" y="37" width="2.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1129.52" y="47.5" ></text>
</g>
<g >
<title>runtime.memhash32 (65 samples, 0.45%)</title><rect x="490.6" y="197" width="5.2" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="493.57" y="207.5" ></text>
</g>
<g >
<title>runtime.stdcall1 (9 samples, 0.06%)</title><rect x="1168.4" y="117" width="0.7" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1171.41" y="127.5" ></text>
</g>
<g >
<title>runtime.typePointers.next (7 samples, 0.05%)</title><rect x="844.8" y="69" width="0.6" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="847.83" y="79.5" ></text>
</g>
<g >
<title>runtime.lock2 (5 samples, 0.03%)</title><rect x="1116.0" y="181" width="0.5" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1119.05" y="191.5" ></text>
</g>
<g >
<title>runtime.stdcall1 (2 samples, 0.01%)</title><rect x="1126.3" y="69" width="0.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1129.28" y="79.5" ></text>
</g>
<g >
<title>indexbytebody (816 samples, 5.61%)</title><rect x="564.5" y="213" width="66.3" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="567.53" y="223.5" >indexby..</text>
</g>
<g >
<title>runtime.typedmemmove (2 samples, 0.01%)</title><rect x="394.0" y="181" width="0.1" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="396.97" y="191.5" ></text>
</g>
<g >
<title>runtime.stdcall0 (4 samples, 0.03%)</title><rect x="1116.0" y="149" width="0.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1119.05" y="159.5" ></text>
</g>
<g >
<title>runtime.stdcall1 (13 samples, 0.09%)</title><rect x="1179.6" y="133" width="1.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1182.61" y="143.5" ></text>
</g>
<g >
<title>runtime.main (30 samples, 0.21%)</title><rect x="989.2" y="229" width="2.4" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="992.17" y="239.5" ></text>
</g>
<g >
<title>runtime.runSafePointFn (7 samples, 0.05%)</title><rect x="1094.0" y="149" width="0.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1096.97" y="159.5" ></text>
</g>
<g >
<title>runtime.stdcall1 (2 samples, 0.01%)</title><rect x="1022.4" y="117" width="0.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1025.45" y="127.5" ></text>
</g>
<g >
<title>runtime.preemptM (18 samples, 0.12%)</title><rect x="1184.2" y="149" width="1.4" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="1187.16" y="159.5" ></text>
</g>
<g >
<title>runtime.lock2 (27 samples, 0.19%)</title><rect x="1126.5" y="69" width="2.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1129.52" y="79.5" ></text>
</g>
<g >
<title>runtime.(*gcCPULimiterState).updateLocked (2 samples, 0.01%)</title><rect x="1092.2" y="117" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1095.18" y="127.5" ></text>
</g>
<g >
<title>runtime.execute (2 samples, 0.01%)</title><rect x="825.6" y="117" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="828.59" y="127.5" ></text>
</g>
<g >
<title>runtime.gcTrigger.test (2 samples, 0.01%)</title><rect x="845.8" y="181" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="848.81" y="191.5" ></text>
</g>
<g >
<title>runtime.stdcall2 (42 samples, 0.29%)</title><rect x="1180.7" y="133" width="3.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1183.66" y="143.5" ></text>
</g>
<g >
<title>runtime.lock2.osyield.func1 (2 samples, 0.01%)</title><rect x="1024.0" y="133" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1026.99" y="143.5" ></text>
</g>
<g >
<title>runtime.unlock2 (2 samples, 0.01%)</title><rect x="1178.7" y="85" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1181.72" y="95.5" ></text>
</g>
<g >
<title>runtime.park_m (638 samples, 4.39%)</title><rect x="992.7" y="213" width="51.8" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="995.74" y="223.5" >runti..</text>
</g>
<g >
<title>runtime.preemptone (2 samples, 0.01%)</title><rect x="834.4" y="53" width="0.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="837.36" y="63.5" ></text>
</g>
<g >
<title>internal/bytealg.IndexByte (36 samples, 0.25%)</title><rect x="630.8" y="213" width="2.9" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="633.77" y="223.5" ></text>
</g>
<g >
<title>runtime.gopark (2 samples, 0.01%)</title><rect x="825.6" y="181" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="828.59" y="191.5" ></text>
</g>
<g >
<title>runtime.lock2.osyield.func1 (2 samples, 0.01%)</title><rect x="1178.9" y="117" width="0.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1181.88" y="127.5" ></text>
</g>
<g >
<title>runtime.stopm (5 samples, 0.03%)</title><rect x="1022.6" y="149" width="0.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1025.61" y="159.5" ></text>
</g>
<g >
<title>runtime.preemptM (44 samples, 0.30%)</title><rect x="1185.7" y="149" width="3.6" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="1188.70" y="159.5" ></text>
</g>
<g >
<title>runtime.preemptM (104 samples, 0.72%)</title><rect x="1161.9" y="133" width="8.5" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="1164.91" y="143.5" ></text>
</g>
<g >
<title>runtime.goschedImpl (2 samples, 0.01%)</title><rect x="825.6" y="149" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="828.59" y="159.5" ></text>
</g>
<g >
<title>runtime.goschedImpl (2 samples, 0.01%)</title><rect x="825.3" y="181" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="828.35" y="191.5" ></text>
</g>
<g >
<title>runtime.preemptM (105 samples, 0.72%)</title><rect x="1170.4" y="101" width="8.5" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="1173.35" y="111.5" ></text>
</g>
<g >
<title>runtime.stdcall0 (176 samples, 1.21%)</title><rect x="1027.5" y="101" width="14.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1030.48" y="111.5" ></text>
</g>
<g >
<title>runtime.send.goready.func1 (5 samples, 0.03%)</title><rect x="1189.5" y="213" width="0.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1192.51" y="223.5" ></text>
</g>
<g >
<title>runtime.semasleep (5 samples, 0.03%)</title><rect x="1189.5" y="149" width="0.4" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1192.51" y="159.5" ></text>
</g>
<g >
<title>runtime.stdcall2 (76 samples, 0.52%)</title><rect x="1162.2" y="85" width="6.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1165.24" y="95.5" ></text>
</g>
<g >
<title>runtime.sweepone (20 samples, 0.14%)</title><rect x="926.3" y="213" width="1.6" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="929.25" y="223.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).enlistWorker (16 samples, 0.11%)</title><rect x="931.0" y="149" width="1.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="934.04" y="159.5" ></text>
</g>
<g >
<title>runtime.preemptM (14 samples, 0.10%)</title><rect x="931.2" y="117" width="1.1" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="934.21" y="127.5" ></text>
</g>
<g >
<title>main.ReadFile.func1 (10 samples, 0.07%)</title><rect x="924.8" y="229" width="0.8" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="927.79" y="239.5" ></text>
</g>
<g >
<title>runtime.semawakeup (3 samples, 0.02%)</title><rect x="1092.7" y="117" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1095.67" y="127.5" ></text>
</g>
<g >
<title>runtime.gcstopm (16 samples, 0.11%)</title><rect x="1092.3" y="149" width="1.3" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1095.34" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mheap).reclaim (5 samples, 0.03%)</title><rect x="1113.3" y="197" width="0.4" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="1116.29" y="207.5" ></text>
</g>
<g >
<title>runtime.findObject (8 samples, 0.06%)</title><rect x="988.4" y="117" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="991.44" y="127.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).scavengeOne (2 samples, 0.01%)</title><rect x="925.8" y="133" width="0.1" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="928.77" y="143.5" ></text>
</g>
<g >
<title>runtime.execute (2 samples, 0.01%)</title><rect x="496.1" y="149" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="499.09" y="159.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).tryGet (3 samples, 0.02%)</title><rect x="932.6" y="165" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="935.59" y="175.5" ></text>
</g>
<g >
<title>runtime.findObject (152 samples, 1.05%)</title><rect x="959.7" y="149" width="12.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="962.70" y="159.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).enlistWorker (2 samples, 0.01%)</title><rect x="834.4" y="69" width="0.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="837.36" y="79.5" ></text>
</g>
<g >
<title>runtime.(*pallocBits).findSmallN (2 samples, 0.01%)</title><rect x="831.6" y="53" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="834.60" y="63.5" ></text>
</g>
<g >
<title>runtime.lock2.osyield.func1 (3 samples, 0.02%)</title><rect x="1096.6" y="133" width="0.3" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1099.65" y="143.5" ></text>
</g>
<g >
<title>runtime.stdcall0 (4 samples, 0.03%)</title><rect x="1161.9" y="85" width="0.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1164.91" y="95.5" ></text>
</g>
<g >
<title>runtime.bgscavenge (7 samples, 0.05%)</title><rect x="925.6" y="229" width="0.6" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="928.60" y="239.5" ></text>
</g>
<g >
<title>runtime.wakep (34 samples, 0.23%)</title><rect x="1041.8" y="165" width="2.7" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1044.77" y="175.5" ></text>
</g>
<g >
<title>runtime.forEachPInternal (5 samples, 0.03%)</title><rect x="928.0" y="165" width="0.4" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="931.04" y="175.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone.func1 (3 samples, 0.02%)</title><rect x="1094.0" y="133" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1096.97" y="143.5" ></text>
</g>
<g >
<title>runtime.stdcall2 (5 samples, 0.03%)</title><rect x="1113.3" y="149" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1116.29" y="159.5" ></text>
</g>
<g >
<title>runtime.typePointers.next (63 samples, 0.43%)</title><rect x="904.3" y="181" width="5.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="907.34" y="191.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (184 samples, 1.27%)</title><rect x="909.9" y="133" width="14.9" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="912.86" y="143.5" ></text>
</g>
<g >
<title>runtime.typePointers.next (64 samples, 0.44%)</title><rect x="983.2" y="149" width="5.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="986.16" y="159.5" ></text>
</g>
<g >
<title>runtime.lock2 (12 samples, 0.08%)</title><rect x="1023.0" y="165" width="1.0" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1026.02" y="175.5" ></text>
</g>
<g >
<title>runtime.sysUnusedOS (24 samples, 0.17%)</title><rect x="1114.0" y="181" width="2.0" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1117.02" y="191.5" ></text>
</g>
<g >
<title>gcWriteBarrier (3 samples, 0.02%)</title><rect x="846.4" y="165" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="849.37" y="175.5" ></text>
</g>
<g >
<title>runtime.semawakeup (4 samples, 0.03%)</title><rect x="1044.2" y="117" width="0.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1047.20" y="127.5" ></text>
</g>
<g >
<title>runtime.stdcall1 (3 samples, 0.02%)</title><rect x="1092.7" y="101" width="0.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1095.67" y="111.5" ></text>
</g>
<g >
<title>runtime.procyield (5 samples, 0.03%)</title><rect x="832.3" y="85" width="0.4" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="835.33" y="95.5" ></text>
</g>
<g >
<title>runtime.stdcall0 (2 samples, 0.01%)</title><rect x="1113.7" y="149" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1116.69" y="159.5" ></text>
</g>
<g >
<title>runtime.preemptone (35 samples, 0.24%)</title><rect x="1126.5" y="101" width="2.9" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1129.52" y="111.5" ></text>
</g>
<g >
<title>runtime.lock2.osyield.func1 (116 samples, 0.80%)</title><rect x="1096.9" y="165" width="9.4" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1099.89" y="175.5" ></text>
</g>
<g >
<title>runtime.procyield (6 samples, 0.04%)</title><rect x="995.1" y="133" width="0.5" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="998.09" y="143.5" ></text>
</g>
<g >
<title>main.Hash (923 samples, 6.35%)</title><rect x="633.7" y="213" width="74.9" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="636.69" y="223.5" >main.Hash</text>
</g>
<g >
<title>runtime.stdcall2 (7 samples, 0.05%)</title><rect x="1128.8" y="69" width="0.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1131.79" y="79.5" ></text>
</g>
<g >
<title>runtime.stdcall2 (14 samples, 0.10%)</title><rect x="1125.1" y="101" width="1.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1128.14" y="111.5" ></text>
</g>
<g >
<title>runtime.lock2 (11 samples, 0.08%)</title><rect x="991.8" y="181" width="0.9" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="994.76" y="191.5" ></text>
</g>
<g >
<title>runtime.asyncPreempt (2 samples, 0.01%)</title><rect x="825.2" y="197" width="0.1" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="828.19" y="207.5" ></text>
</g>
<g >
<title>runtime.semasleep (32 samples, 0.22%)</title><rect x="1024.2" y="133" width="2.6" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1027.24" y="143.5" ></text>
</g>
<g >
<title>runtime.goschedImpl (3 samples, 0.02%)</title><rect x="496.0" y="181" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="499.01" y="191.5" ></text>
</g>
<g >
<title>runtime.stdcall2 (5 samples, 0.03%)</title><rect x="1185.8" y="101" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1188.78" y="111.5" ></text>
</g>
<g >
<title>runtime.stdcall1 (5 samples, 0.03%)</title><rect x="1095.2" y="149" width="0.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1098.18" y="159.5" ></text>
</g>
<g >
<title>runtime.procyield (2 samples, 0.01%)</title><rect x="1023.0" y="149" width="0.2" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="1026.02" y="159.5" ></text>
</g>
<g >
<title>runtime.lock2 (4 samples, 0.03%)</title><rect x="825.8" y="181" width="0.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="828.76" y="191.5" ></text>
</g>
<g >
<title>runtime.stdcall2 (68 samples, 0.47%)</title><rect x="1170.7" y="53" width="5.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1173.68" y="63.5" ></text>
</g>
<g >
<title>runtime.stdcall2 (2 samples, 0.01%)</title><rect x="1092.5" y="101" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1095.51" y="111.5" ></text>
</g>
<g >
<title>runtime.semawakeup (5 samples, 0.03%)</title><rect x="1161.5" y="101" width="0.4" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1164.51" y="111.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).reset (2 samples, 0.01%)</title><rect x="845.6" y="117" width="0.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="848.64" y="127.5" ></text>
</g>
<g >
<title>runtime.semawakeup (6 samples, 0.04%)</title><rect x="1093.2" y="117" width="0.4" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1096.15" y="127.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (66 samples, 0.45%)</title><rect x="827.5" y="165" width="5.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="830.46" y="175.5" ></text>
</g>
<g >
<title>runtime.schedule (50 samples, 0.34%)</title><rect x="1091.1" y="181" width="4.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1094.13" y="191.5" ></text>
</g>
<g >
<title>runtime.procyield (2 samples, 0.01%)</title><rect x="1092.3" y="117" width="0.2" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="1095.34" y="127.5" ></text>
</g>
<g >
<title>indexbytebody (614 samples, 4.22%)</title><rect x="768.8" y="197" width="49.8" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="771.77" y="207.5" >index..</text>
</g>
<g >
<title>runtime.newstack (2 samples, 0.01%)</title><rect x="825.3" y="197" width="0.2" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="828.35" y="207.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker.func2 (744 samples, 5.12%)</title><rect x="928.8" y="197" width="60.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="931.77" y="207.5" >runtim..</text>
</g>
<g >
<title>runtime.(*pageCache).allocN (2 samples, 0.01%)</title><rect x="831.9" y="85" width="0.2" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="834.92" y="95.5" ></text>
</g>
<g >
<title>runtime.scanobject (35 samples, 0.24%)</title><rect x="1126.5" y="165" width="2.9" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1129.52" y="175.5" ></text>
</g>
<g >
<title>syscall.Syscall6 (22 samples, 0.15%)</title><rect x="989.7" y="117" width="1.7" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="992.65" y="127.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush (189 samples, 1.30%)</title><rect x="909.4" y="181" width="15.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="912.45" y="191.5" ></text>
</g>
<g >
<title>runtime.semasleep (76 samples, 0.52%)</title><rect x="1162.2" y="101" width="6.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1165.24" y="111.5" ></text>
</g>
<g >
<title>runtime.lock2 (4 samples, 0.03%)</title><rect x="1113.7" y="181" width="0.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1116.69" y="191.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone (6 samples, 0.04%)</title><rect x="928.0" y="213" width="0.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="930.96" y="223.5" ></text>
</g>
<g >
<title>runtime.procyield (2 samples, 0.01%)</title><rect x="928.3" y="85" width="0.1" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="931.28" y="95.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep (10 samples, 0.07%)</title><rect x="926.9" y="197" width="0.8" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="929.90" y="207.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (184 samples, 1.27%)</title><rect x="909.9" y="149" width="14.9" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="912.86" y="159.5" ></text>
</g>
<g >
<title>runtime.unlock2 (5 samples, 0.03%)</title><rect x="1095.2" y="181" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1098.18" y="191.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).put (3 samples, 0.02%)</title><rect x="982.9" y="133" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="985.92" y="143.5" ></text>
</g>
<g >
<title>runtime.bulkBarrierPreWrite (583 samples, 4.01%)</title><rect x="877.5" y="197" width="47.3" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="880.47" y="207.5" >runt..</text>
</g>
<g >
<title>runtime.preemptM (65 samples, 0.45%)</title><rect x="1178.9" y="149" width="5.3" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="1181.88" y="159.5" ></text>
</g>
<g >
<title>runtime.stdcall2 (32 samples, 0.22%)</title><rect x="1024.2" y="117" width="2.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1027.24" y="127.5" ></text>
</g>
<g >
<title>runtime.mcall (652 samples, 4.49%)</title><rect x="991.6" y="229" width="52.9" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="994.60" y="239.5" >runti..</text>
</g>
<g >
<title>runtime.(*scavengerState).run (2 samples, 0.01%)</title><rect x="925.8" y="213" width="0.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="928.77" y="223.5" ></text>
</g>
<g >
<title>runtime.runqgrab.osyield.func1 (177 samples, 1.22%)</title><rect x="1027.4" y="117" width="14.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1030.40" y="127.5" ></text>
</g>
<g >
<title>runtime.preemptall (18 samples, 0.12%)</title><rect x="1184.2" y="181" width="1.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1187.16" y="191.5" ></text>
</g>
<g >
<title>runtime.semawakeup (2 samples, 0.01%)</title><rect x="1094.4" y="117" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1097.37" y="127.5" ></text>
</g>
<g >
<title>runtime.greyobject (105 samples, 0.72%)</title><rect x="1170.4" y="165" width="8.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1173.35" y="175.5" ></text>
</g>
<g >
<title>main.SplitParse (1,440 samples, 9.91%)</title><rect x="708.6" y="213" width="116.9" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="711.62" y="223.5" >main.SplitParse</text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (66 samples, 0.45%)</title><rect x="827.5" y="133" width="5.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="830.46" y="143.5" ></text>
</g>
<g >
<title>runtime.schedule (2 samples, 0.01%)</title><rect x="496.1" y="165" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="499.09" y="175.5" ></text>
</g>
<g >
<title>runtime.lock2 (4 samples, 0.03%)</title><rect x="1092.3" y="133" width="0.4" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1095.34" y="143.5" ></text>
</g>
<g >
<title>runtime.scanobject (105 samples, 0.72%)</title><rect x="1170.4" y="181" width="8.5" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1173.35" y="191.5" ></text>
</g>
<g >
<title>runtime.stdcall7 (15 samples, 0.10%)</title><rect x="1160.3" y="117" width="1.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1163.29" y="127.5" ></text>
</g>
<g >
<title>runtime.(*mspan).heapBitsSmallForAddr (16 samples, 0.11%)</title><rect x="839.0" y="53" width="1.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="841.99" y="63.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpanLocked (2 samples, 0.01%)</title><rect x="927.2" y="149" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="930.23" y="159.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocker).tryAcquire (2 samples, 0.01%)</title><rect x="927.7" y="197" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="930.71" y="207.5" ></text>
</g>
<g >
<title>runtime.stdcall1 (3 samples, 0.02%)</title><rect x="1113.0" y="149" width="0.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1116.04" y="159.5" ></text>
</g>
<g >
<title>runtime.bulkBarrierPreWrite (2 samples, 0.01%)</title><rect x="394.0" y="165" width="0.1" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="396.97" y="175.5" ></text>
</g>
<g >
<title>runtime.heapSetType (7 samples, 0.05%)</title><rect x="846.0" y="181" width="0.6" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="849.05" y="191.5" ></text>
</g>
<g >
<title>runtime.goschedImpl (638 samples, 4.39%)</title><rect x="1044.5" y="197" width="51.8" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1047.53" y="207.5" >runti..</text>
</g>
<g >
<title>runtime.runSafePointFn (35 samples, 0.24%)</title><rect x="1024.0" y="165" width="2.8" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1026.99" y="175.5" ></text>
</g>
<g >
<title>runtime.chanrecv2 (10 samples, 0.07%)</title><rect x="393.3" y="213" width="0.8" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="396.32" y="223.5" ></text>
</g>
<g >
<title>runtime.globrunqget (2 samples, 0.01%)</title><rect x="1093.6" y="149" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1096.64" y="159.5" ></text>
</g>
<g >
<title>runtime.mergeSummaries (2 samples, 0.01%)</title><rect x="830.1" y="53" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="833.14" y="63.5" ></text>
</g>
<g >
<title>runtime.stdcall2 (457 samples, 3.14%)</title><rect x="1054.0" y="149" width="37.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1057.03" y="159.5" >run..</text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (65 samples, 0.45%)</title><rect x="827.5" y="117" width="5.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="830.54" y="127.5" ></text>
</g>
<g >
<title>runtime.semawakeup (2 samples, 0.01%)</title><rect x="1126.3" y="85" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1129.28" y="95.5" ></text>
</g>
<g >
<title>runtime.stdcall1 (2 samples, 0.01%)</title><rect x="1094.4" y="101" width="0.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1097.37" y="111.5" ></text>
</g>
<g >
<title>runtime.preemptone (123 samples, 0.85%)</title><rect x="1116.5" y="133" width="9.9" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1119.45" y="143.5" ></text>
</g>
<g >
<title>runtime.newMarkBits (2 samples, 0.01%)</title><rect x="829.3" y="85" width="0.2" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="832.33" y="95.5" ></text>
</g>
<g >
<title>runtime.greyobject (35 samples, 0.24%)</title><rect x="1126.5" y="149" width="2.9" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1129.52" y="159.5" ></text>
</g>
<g >
<title>runtime.stdcall1 (20 samples, 0.14%)</title><rect x="1150.4" y="117" width="1.6" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1153.39" y="127.5" ></text>
</g>
<g >
<title>runtime.findRunnable (600 samples, 4.13%)</title><rect x="993.1" y="181" width="48.7" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="996.06" y="191.5" >runt..</text>
</g>
<g >
<title>runtime.(*gcWork).put (35 samples, 0.24%)</title><rect x="1126.5" y="133" width="2.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1129.52" y="143.5" ></text>
</g>
<g >
<title>runtime.schedule (636 samples, 4.38%)</title><rect x="992.9" y="197" width="51.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="995.90" y="207.5" >runti..</text>
</g>
<g >
<title>runtime.findRunnable (44 samples, 0.30%)</title><rect x="1091.5" y="165" width="3.6" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1094.53" y="175.5" ></text>
</g>
<g >
<title>runtime.(*scavengerState).sleep (3 samples, 0.02%)</title><rect x="925.9" y="213" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="928.93" y="223.5" ></text>
</g>
<g >
<title>runtime.gcDrain (743 samples, 5.11%)</title><rect x="928.8" y="181" width="60.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="931.77" y="191.5" >runtim..</text>
</g>
<g >
<title>runtime.wbBufFlush1 (9 samples, 0.06%)</title><rect x="988.4" y="133" width="0.7" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="991.35" y="143.5" ></text>
</g>
<g >
<title>runtime.stdcall1 (4 samples, 0.03%)</title><rect x="1044.2" y="101" width="0.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1047.20" y="111.5" ></text>
</g>
<g >
<title>runtime.stdcall4 (43 samples, 0.30%)</title><rect x="1109.6" y="165" width="3.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1112.55" y="175.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).push (7 samples, 0.05%)</title><rect x="832.8" y="165" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="835.82" y="175.5" ></text>
</g>
<g >
<title>runtime.findObject (28 samples, 0.19%)</title><rect x="840.3" y="69" width="2.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="843.29" y="79.5" ></text>
</g>
<g >
<title>runtime.lock2.osyield.func1 (4 samples, 0.03%)</title><rect x="1116.0" y="165" width="0.4" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1119.05" y="175.5" ></text>
</g>
<g >
<title>runtime.unlock2 (2 samples, 0.01%)</title><rect x="1126.3" y="101" width="0.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1129.28" y="111.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).balance (19 samples, 0.13%)</title><rect x="931.0" y="165" width="1.6" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="934.04" y="175.5" ></text>
</g>
<g >
<title>runtime.stdcall2 (40 samples, 0.28%)</title><rect x="1106.3" y="149" width="3.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1109.31" y="159.5" ></text>
</g>
<g >
<title>runtime.stdcall0 (116 samples, 0.80%)</title><rect x="1096.9" y="149" width="9.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1099.89" y="159.5" ></text>
</g>
<g >
<title>runtime.lock2.osyield.func1 (4 samples, 0.03%)</title><rect x="1161.9" y="101" width="0.3" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1164.91" y="111.5" ></text>
</g>
<g >
<title>runtime.preemptall (65 samples, 0.45%)</title><rect x="1178.9" y="181" width="5.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1181.88" y="191.5" ></text>
</g>
<g >
<title>runtime.lock2 (5 samples, 0.03%)</title><rect x="832.3" y="101" width="0.4" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="835.33" y="111.5" ></text>
</g>
<g >
<title>runtime.lock2 (80 samples, 0.55%)</title><rect x="1161.9" y="117" width="6.5" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1164.91" y="127.5" ></text>
</g>
<g >
<title>runtime.stdcall2 (15 samples, 0.10%)</title><rect x="1169.1" y="117" width="1.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1172.14" y="127.5" ></text>
</g>
<g >
<title>runtime.procyield (96 samples, 0.66%)</title><rect x="1046.2" y="165" width="7.7" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="1049.15" y="175.5" ></text>
</g>
<g >
<title>runtime.stealWork (7 samples, 0.05%)</title><rect x="1094.5" y="149" width="0.6" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1097.53" y="159.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).pop (3 samples, 0.02%)</title><rect x="926.7" y="181" width="0.2" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="929.66" y="191.5" ></text>
</g>
<g >
<title>gogo (3 samples, 0.02%)</title><rect x="10.0" y="229" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="13.00" y="239.5" ></text>
</g>
<g >
<title>runtime.stdcall2 (2 samples, 0.01%)</title><rect x="925.9" y="117" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="928.93" y="127.5" ></text>
</g>
</g>
</svg>
