<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="326" onload="init(evt)" viewBox="0 0 1200 326" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="326.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="309" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="309" > </text>
<g id="frames">
<g >
<title>main.Station.NaiveValue (624 samples, 1.21%)</title><rect x="683.6" y="245" width="14.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="686.59" y="255.5" ></text>
</g>
<g >
<title>runtime.systemstack (10 samples, 0.02%)</title><rect x="893.2" y="101" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="896.16" y="111.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (21 samples, 0.04%)</title><rect x="1057.1" y="165" width="0.5" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1060.11" y="175.5" ></text>
</g>
<g >
<title>runtime.arenaIdx.l1 (5 samples, 0.01%)</title><rect x="579.0" y="181" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="582.04" y="191.5" ></text>
</g>
<g >
<title>fmt.(*fmt).padString (131 samples, 0.25%)</title><rect x="964.1" y="149" width="3.0" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="967.10" y="159.5" ></text>
</g>
<g >
<title>runtime.findObject (462 samples, 0.89%)</title><rect x="580.7" y="181" width="10.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="583.73" y="191.5" ></text>
</g>
<g >
<title>aeshashbody (383 samples, 0.74%)</title><rect x="1148.2" y="213" width="8.7" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1151.15" y="223.5" ></text>
</g>
<g >
<title>runtime.gcDrain (7,065 samples, 13.66%)</title><rect x="17.3" y="213" width="161.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="20.30" y="223.5" >runtime.gcDrain</text>
</g>
<g >
<title>runtime.deductAssistCredit (12 samples, 0.02%)</title><rect x="894.1" y="181" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="897.07" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (20 samples, 0.04%)</title><rect x="660.2" y="181" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="663.23" y="191.5" ></text>
</g>
<g >
<title>runtime.greyobject (72 samples, 0.14%)</title><rect x="168.1" y="181" width="1.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="171.13" y="191.5" ></text>
</g>
<g >
<title>runtime.readUintptr (47 samples, 0.09%)</title><rect x="1115.2" y="181" width="1.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1118.25" y="191.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (39 samples, 0.08%)</title><rect x="896.0" y="197" width="0.9" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="898.96" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mheap).initSpan (5 samples, 0.01%)</title><rect x="893.2" y="53" width="0.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="896.20" y="63.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (6 samples, 0.01%)</title><rect x="660.7" y="181" width="0.2" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="663.73" y="191.5" ></text>
</g>
<g >
<title>runtime.systemstack (92 samples, 0.18%)</title><rect x="1085.6" y="117" width="2.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1088.56" y="127.5" ></text>
</g>
<g >
<title>fmt.(*fmt).padString (130 samples, 0.25%)</title><rect x="824.1" y="133" width="2.9" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="827.06" y="143.5" ></text>
</g>
<g >
<title>runtime.pageIndexOf (59 samples, 0.11%)</title><rect x="170.0" y="181" width="1.3" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="172.98" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mspan).initHeapBits (23 samples, 0.04%)</title><rect x="893.4" y="117" width="0.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="896.39" y="127.5" ></text>
</g>
<g >
<title>runtime.lock2 (5 samples, 0.01%)</title><rect x="1189.5" y="149" width="0.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1192.50" y="159.5" ></text>
</g>
<g >
<title>runtime.cgocall (7 samples, 0.01%)</title><rect x="1157.0" y="133" width="0.1" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="1159.96" y="143.5" ></text>
</g>
<g >
<title>sync.(*Pool).Get (221 samples, 0.43%)</title><rect x="847.8" y="181" width="5.1" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="850.84" y="191.5" ></text>
</g>
<g >
<title>runtime.publicationBarrier (19 samples, 0.04%)</title><rect x="1027.3" y="181" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1030.28" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (33 samples, 0.06%)</title><rect x="893.2" y="133" width="0.7" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="896.16" y="143.5" ></text>
</g>
<g >
<title>math/rand.(*Rand).Int63 (166 samples, 0.32%)</title><rect x="694.0" y="213" width="3.8" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="697.02" y="223.5" ></text>
</g>
<g >
<title>runtime.readUintptr (10 samples, 0.02%)</title><rect x="600.9" y="181" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="603.88" y="191.5" ></text>
</g>
<g >
<title>runtime.releasem (28 samples, 0.05%)</title><rect x="886.7" y="181" width="0.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="889.70" y="191.5" ></text>
</g>
<g >
<title>runtime.deductAssistCredit (102 samples, 0.20%)</title><rect x="1099.7" y="197" width="2.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1102.69" y="207.5" ></text>
</g>
<g >
<title>runtime.preemptone (7 samples, 0.01%)</title><rect x="1189.5" y="181" width="0.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1192.50" y="191.5" ></text>
</g>
<g >
<title>runtime.bgsweep (304 samples, 0.59%)</title><rect x="10.3" y="261" width="6.9" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="13.25" y="271.5" ></text>
</g>
<g >
<title>runtime.findObject (9 samples, 0.02%)</title><rect x="971.9" y="117" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="974.93" y="127.5" ></text>
</g>
<g >
<title>runtime.(*pallocBits).summarize (8 samples, 0.02%)</title><rect x="13.2" y="133" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="16.22" y="143.5" ></text>
</g>
<g >
<title>runtime.(*mspan).nextFreeIndex (41 samples, 0.08%)</title><rect x="1098.5" y="181" width="0.9" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1101.50" y="191.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (5 samples, 0.01%)</title><rect x="801.1" y="69" width="0.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="804.09" y="79.5" ></text>
</g>
<g >
<title>runtime.gcDrain (12 samples, 0.02%)</title><rect x="1189.2" y="229" width="0.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1192.22" y="239.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker (26,399 samples, 51.05%)</title><rect x="17.2" y="261" width="602.4" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="20.19" y="271.5" >runtime.gcBgMarkWorker</text>
</g>
<g >
<title>gcWriteBarrier (21 samples, 0.04%)</title><rect x="971.7" y="197" width="0.5" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="974.72" y="207.5" ></text>
</g>
<g >
<title>fmt.(*fmt).pad (161 samples, 0.31%)</title><rect x="805.8" y="133" width="3.6" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="808.76" y="143.5" ></text>
</g>
<g >
<title>runtime.semasleep (6 samples, 0.01%)</title><rect x="1161.3" y="165" width="0.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1164.34" y="175.5" ></text>
</g>
<g >
<title>runtime.mallocgc (196 samples, 0.38%)</title><rect x="891.5" y="197" width="4.5" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="894.49" y="207.5" ></text>
</g>
<g >
<title>runtime.systemstack (7 samples, 0.01%)</title><rect x="820.7" y="85" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="823.73" y="95.5" ></text>
</g>
<g >
<title>fmt.newPrinter (333 samples, 0.64%)</title><rect x="845.3" y="197" width="7.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="848.28" y="207.5" ></text>
</g>
<g >
<title>sync.runtime_procPin (21 samples, 0.04%)</title><rect x="851.8" y="149" width="0.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="854.81" y="159.5" ></text>
</g>
<g >
<title>runtime.procPin (14 samples, 0.03%)</title><rect x="992.7" y="165" width="0.3" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="995.69" y="175.5" ></text>
</g>
<g >
<title>runtime.divRoundUp (12 samples, 0.02%)</title><rect x="1059.0" y="213" width="0.3" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="1061.98" y="223.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (19 samples, 0.04%)</title><rect x="971.8" y="149" width="0.4" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="974.77" y="159.5" ></text>
</g>
<g >
<title>reflect.toType (170 samples, 0.33%)</title><rect x="853.6" y="197" width="3.9" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="856.59" y="207.5" ></text>
</g>
<g >
<title>runtime.typePointers.nextFast (39 samples, 0.08%)</title><rect x="618.7" y="197" width="0.9" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="621.68" y="207.5" ></text>
</g>
<g >
<title>runtime.systemstack (21 samples, 0.04%)</title><rect x="1057.1" y="181" width="0.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1060.11" y="191.5" ></text>
</g>
<g >
<title>fmt.(*pp).fmtString (779 samples, 1.51%)</title><rect x="809.4" y="165" width="17.8" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="812.44" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mspan).divideByElemSize (25 samples, 0.05%)</title><rect x="163.1" y="181" width="0.6" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="166.09" y="191.5" ></text>
</g>
<g >
<title>runtime.runqget (33 samples, 0.06%)</title><rect x="1161.6" y="197" width="0.7" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1164.57" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (47 samples, 0.09%)</title><rect x="1023.2" y="133" width="1.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1026.24" y="143.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (6 samples, 0.01%)</title><rect x="1161.3" y="197" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1164.34" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (10 samples, 0.02%)</title><rect x="878.6" y="117" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="881.55" y="127.5" ></text>
</g>
<g >
<title>fmt.(*buffer).write (565 samples, 1.09%)</title><rect x="792.9" y="133" width="12.9" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="795.87" y="143.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (7 samples, 0.01%)</title><rect x="820.7" y="69" width="0.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="823.73" y="79.5" ></text>
</g>
<g >
<title>runtime.convT64 (91 samples, 0.18%)</title><rect x="887.3" y="213" width="2.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="890.34" y="223.5" ></text>
</g>
<g >
<title>runtime.newArenaMayUnlock (5 samples, 0.01%)</title><rect x="1174.9" y="181" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1177.87" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (44 samples, 0.09%)</title><rect x="1023.3" y="85" width="1.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1026.31" y="95.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (6 samples, 0.01%)</title><rect x="914.0" y="149" width="0.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="916.99" y="159.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Write (7 samples, 0.01%)</title><rect x="1157.0" y="213" width="0.1" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="1159.96" y="223.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).enlistWorker (7 samples, 0.01%)</title><rect x="1189.5" y="197" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1192.50" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mheap).initSpan (51 samples, 0.10%)</title><rect x="1086.1" y="69" width="1.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1089.13" y="79.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (5 samples, 0.01%)</title><rect x="15.7" y="213" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="18.70" y="223.5" ></text>
</g>
<g >
<title>runtime.gcDrain (9 samples, 0.02%)</title><rect x="1189.5" y="229" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1192.50" y="239.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (6 samples, 0.01%)</title><rect x="1189.5" y="165" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1192.50" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (10 samples, 0.02%)</title><rect x="878.6" y="53" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="881.55" y="63.5" ></text>
</g>
<g >
<title>runtime.markBits.setMarked (7 samples, 0.01%)</title><rect x="169.8" y="181" width="0.2" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="172.82" y="191.5" ></text>
</g>
<g >
<title>main.main.func1 (72 samples, 0.14%)</title><rect x="1043.6" y="229" width="1.6" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="1046.55" y="239.5" ></text>
</g>
<g >
<title>runtime.systemstack (6 samples, 0.01%)</title><rect x="914.0" y="165" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="916.99" y="175.5" ></text>
</g>
<g >
<title>runtime.memmove (139 samples, 0.27%)</title><rect x="820.9" y="117" width="3.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="823.89" y="127.5" ></text>
</g>
<g >
<title>fmt.(*pp).printArg (3,631 samples, 7.02%)</title><rect x="745.4" y="181" width="82.8" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="748.39" y="191.5" >fmt.(*pp)..</text>
</g>
<g >
<title>runtime.(*gcBits).bytep (87 samples, 0.17%)</title><rect x="11.0" y="229" width="2.0" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="14.05" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (88 samples, 0.17%)</title><rect x="1085.7" y="101" width="2.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1088.65" y="111.5" ></text>
</g>
<g >
<title>fmt.(*fmt).truncateString (7 samples, 0.01%)</title><rect x="827.0" y="149" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="830.03" y="159.5" ></text>
</g>
<g >
<title>runtime.systemstack (10 samples, 0.02%)</title><rect x="878.6" y="85" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="881.55" y="95.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (270 samples, 0.52%)</title><rect x="660.9" y="213" width="6.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="663.89" y="223.5" ></text>
</g>
<g >
<title>runtime.goschedImpl (6 samples, 0.01%)</title><rect x="1157.1" y="229" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1160.14" y="239.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1,235 samples, 2.39%)</title><rect x="999.5" y="197" width="28.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1002.54" y="207.5" >r..</text>
</g>
<g >
<title>runtime.wbBufFlush (16 samples, 0.03%)</title><rect x="967.2" y="165" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="970.20" y="175.5" ></text>
</g>
<g >
<title>runtime.schedule (27 samples, 0.05%)</title><rect x="1157.3" y="229" width="0.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1160.30" y="239.5" ></text>
</g>
<g >
<title>runtime.systemstack (46 samples, 0.09%)</title><rect x="1023.3" y="101" width="1.0" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1026.27" y="111.5" ></text>
</g>
<g >
<title>runtime.gcDrainMarkWorkerIdle (9 samples, 0.02%)</title><rect x="1189.5" y="245" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1192.50" y="255.5" ></text>
</g>
<g >
<title>runtime.newArenaMayUnlock (19 samples, 0.04%)</title><rect x="15.8" y="197" width="0.5" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="18.82" y="207.5" ></text>
</g>
<g >
<title>runtime.memmove (199 samples, 0.38%)</title><rect x="801.2" y="117" width="4.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="804.22" y="127.5" ></text>
</g>
<g >
<title>runtime.semasleep (7 samples, 0.01%)</title><rect x="1174.7" y="165" width="0.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1177.67" y="175.5" ></text>
</g>
<g >
<title>runtime.findRunnable (90 samples, 0.17%)</title><rect x="1159.3" y="197" width="2.0" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1162.29" y="207.5" ></text>
</g>
<g >
<title>sync.(*Pool).pin (201 samples, 0.39%)</title><rect x="840.1" y="165" width="4.5" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="843.06" y="175.5" ></text>
</g>
<g >
<title>runtime.spanOf (106 samples, 0.20%)</title><rect x="601.2" y="181" width="2.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="604.18" y="191.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep.(*mheap).freeSpan.func4 (24 samples, 0.05%)</title><rect x="13.9" y="197" width="0.5" height="15.0" fill="rgb(208,13,3)" rx="2" ry="2" />
<text  x="16.90" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mheap).grow (6 samples, 0.01%)</title><rect x="1174.5" y="213" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1177.53" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).uncacheSpan (11 samples, 0.02%)</title><rect x="1024.9" y="149" width="0.3" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1027.91" y="159.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (6 samples, 0.01%)</title><rect x="1189.3" y="133" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1192.32" y="143.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpan (62 samples, 0.12%)</title><rect x="13.0" y="229" width="1.4" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="16.03" y="239.5" ></text>
</g>
<g >
<title>fmt.(*fmt).init (24 samples, 0.05%)</title><rect x="913.6" y="213" width="0.5" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="916.58" y="223.5" ></text>
</g>
<g >
<title>sync.(*Pool).pin (139 samples, 0.27%)</title><rect x="990.7" y="181" width="3.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="993.71" y="191.5" ></text>
</g>
<g >
<title>runtime.scanobject (19,271 samples, 37.27%)</title><rect x="178.8" y="197" width="439.8" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="181.83" y="207.5" >runtime.scanobject</text>
</g>
<g >
<title>runtime.heapBitsSlice (38 samples, 0.07%)</title><rect x="1114.4" y="165" width="0.8" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="1117.38" y="175.5" ></text>
</g>
<g >
<title>runtime.systemstack (30 samples, 0.06%)</title><rect x="827.4" y="133" width="0.7" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="830.42" y="143.5" ></text>
</g>
<g >
<title>runtime.execute (34 samples, 0.07%)</title><rect x="1158.5" y="197" width="0.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1161.51" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mheap).initSpan (5 samples, 0.01%)</title><rect x="878.6" y="37" width="0.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="881.60" y="47.5" ></text>
</g>
<g >
<title>runtime.deductAssistCredit (59 samples, 0.11%)</title><rect x="1025.8" y="181" width="1.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1028.75" y="191.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep (68 samples, 0.13%)</title><rect x="14.8" y="229" width="1.6" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="17.84" y="239.5" ></text>
</g>
<g >
<title>runtime.systemstack (5 samples, 0.01%)</title><rect x="801.1" y="85" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="804.09" y="95.5" ></text>
</g>
<g >
<title>fmt.(*fmt).clearflags (11 samples, 0.02%)</title><rect x="726.1" y="197" width="0.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="729.11" y="207.5" ></text>
</g>
<g >
<title>fmt.newPrinter (422 samples, 0.82%)</title><rect x="984.8" y="213" width="9.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="987.77" y="223.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).push (18 samples, 0.03%)</title><rect x="1097.9" y="149" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1100.91" y="159.5" ></text>
</g>
<g >
<title>fmt.(*fmt).init (20 samples, 0.04%)</title><rect x="726.4" y="197" width="0.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="729.36" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (33 samples, 0.06%)</title><rect x="893.2" y="149" width="0.7" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="896.16" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mspan).writeHeapBitsSmall (36 samples, 0.07%)</title><rect x="894.6" y="165" width="0.8" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="897.57" y="175.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (6 samples, 0.01%)</title><rect x="978.3" y="133" width="0.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="981.27" y="143.5" ></text>
</g>
<g >
<title>runtime.(*mspan).objIndex (6 samples, 0.01%)</title><rect x="163.7" y="181" width="0.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="166.70" y="191.5" ></text>
</g>
<g >
<title>runtime.scanobject (7,043 samples, 13.62%)</title><rect x="17.4" y="197" width="160.7" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="20.37" y="207.5" >runtime.scanobject</text>
</g>
<g >
<title>runtime.(*mspan).init (39 samples, 0.08%)</title><rect x="1086.4" y="53" width="0.9" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1089.38" y="63.5" ></text>
</g>
<g >
<title>runtime.(*mheap).initSpan (24 samples, 0.05%)</title><rect x="1023.6" y="53" width="0.5" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1026.59" y="63.5" ></text>
</g>
<g >
<title>runtime.newMarkBits (5 samples, 0.01%)</title><rect x="1174.9" y="197" width="0.1" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1177.87" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (150 samples, 0.29%)</title><rect x="1022.2" y="181" width="3.5" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1025.24" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (123 samples, 0.24%)</title><rect x="1022.4" y="165" width="2.8" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1025.42" y="175.5" ></text>
</g>
<g >
<title>reflect.(*rtype).Kind (92 samples, 0.18%)</title><rect x="828.6" y="181" width="2.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="831.63" y="191.5" ></text>
</g>
<g >
<title>runtime.findObject (5 samples, 0.01%)</title><rect x="914.0" y="117" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="917.01" y="127.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (5 samples, 0.01%)</title><rect x="801.1" y="53" width="0.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="804.09" y="63.5" ></text>
</g>
<g >
<title>runtime.makeSpanClass (33 samples, 0.06%)</title><rect x="1060.3" y="213" width="0.8" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1063.32" y="223.5" ></text>
</g>
<g >
<title>runtime.semasleep (5 samples, 0.01%)</title><rect x="15.7" y="181" width="0.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="18.70" y="191.5" ></text>
</g>
<g >
<title>fmt.(*fmt).fmtInteger (1,803 samples, 3.49%)</title><rect x="768.3" y="149" width="41.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="771.30" y="159.5" >fmt..</text>
</g>
<g >
<title>runtime.sysUsed (624 samples, 1.21%)</title><rect x="1175.0" y="229" width="14.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1177.99" y="239.5" ></text>
</g>
<g >
<title>runtime.mallocgc (30 samples, 0.06%)</title><rect x="660.2" y="213" width="0.7" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="663.21" y="223.5" ></text>
</g>
<g >
<title>runtime.memmove (226 samples, 0.44%)</title><rect x="958.9" y="133" width="5.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="961.94" y="143.5" ></text>
</g>
<g >
<title>runtime.gosched_m (6 samples, 0.01%)</title><rect x="1157.1" y="245" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1160.14" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mspan).nextFreeIndex (19 samples, 0.04%)</title><rect x="1025.2" y="165" width="0.5" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1028.23" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mspan).heapBits (9 samples, 0.02%)</title><rect x="895.1" y="149" width="0.2" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="898.10" y="159.5" ></text>
</g>
<g >
<title>runtime.schedule (9 samples, 0.02%)</title><rect x="834.1" y="149" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="837.06" y="159.5" ></text>
</g>
<g >
<title>runtime.pidlegetSpinning (17 samples, 0.03%)</title><rect x="1162.7" y="197" width="0.4" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="1165.66" y="207.5" ></text>
</g>
<g >
<title>runtime.stdcall4 (624 samples, 1.21%)</title><rect x="1175.0" y="197" width="14.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1177.99" y="207.5" ></text>
</g>
<g >
<title>fmt.(*pp).doPrint (4,556 samples, 8.81%)</title><rect x="726.8" y="197" width="104.0" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="729.81" y="207.5" >fmt.(*pp).do..</text>
</g>
<g >
<title>runtime.(*pageAlloc).update (11 samples, 0.02%)</title><rect x="13.2" y="149" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="16.22" y="159.5" ></text>
</g>
<g >
<title>runtime.checkTimers (21 samples, 0.04%)</title><rect x="1160.5" y="181" width="0.5" height="15.0" fill="rgb(228,105,25)" rx="2" ry="2" />
<text  x="1163.47" y="191.5" ></text>
</g>
<g >
<title>runtime.findObject (5 samples, 0.01%)</title><rect x="801.1" y="37" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="804.09" y="47.5" ></text>
</g>
<g >
<title>fmt.(*pp).printArg (1,340 samples, 2.59%)</title><rect x="937.0" y="197" width="30.6" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="940.04" y="207.5" >fm..</text>
</g>
<g >
<title>runtime.memmove (97 samples, 0.19%)</title><rect x="881.0" y="181" width="2.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="884.00" y="191.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint8).Load (10 samples, 0.02%)</title><rect x="177.9" y="181" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="180.85" y="191.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (5 samples, 0.01%)</title><rect x="978.3" y="117" width="0.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="981.29" y="127.5" ></text>
</g>
<g >
<title>runtime.(*gcBits).bytep (156 samples, 0.30%)</title><rect x="153.3" y="181" width="3.5" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="156.25" y="191.5" ></text>
</g>
<g >
<title>runtime.gcDrainMarkWorkerIdle (19,329 samples, 37.38%)</title><rect x="178.5" y="229" width="441.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="181.51" y="239.5" >runtime.gcDrainMarkWorkerIdle</text>
</g>
<g >
<title>math/rand.(*Rand).Int63 (33 samples, 0.06%)</title><rect x="1046.2" y="213" width="0.7" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1049.18" y="223.5" ></text>
</g>
<g >
<title>internal/abi.(*Type).Kind (17 samples, 0.03%)</title><rect x="828.2" y="181" width="0.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="831.24" y="191.5" ></text>
</g>
<g >
<title>runtime.systemstack (26,398 samples, 51.05%)</title><rect x="17.2" y="245" width="602.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="20.21" y="255.5" >runtime.systemstack</text>
</g>
<g >
<title>runtime.wbBufFlush1 (7 samples, 0.01%)</title><rect x="820.7" y="53" width="0.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="823.73" y="63.5" ></text>
</g>
<g >
<title>runtime.scanobject (8 samples, 0.02%)</title><rect x="1189.3" y="213" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1192.32" y="223.5" ></text>
</g>
<g >
<title>sync.runtime_procUnpin (26 samples, 0.05%)</title><rect x="852.3" y="165" width="0.6" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="855.29" y="175.5" ></text>
</g>
<g >
<title>runtime.stdcall2 (5 samples, 0.01%)</title><rect x="1189.5" y="117" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1192.50" y="127.5" ></text>
</g>
<g >
<title>runtime.lock2 (7 samples, 0.01%)</title><rect x="1174.7" y="181" width="0.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1177.67" y="191.5" ></text>
</g>
<g >
<title>gcWriteBarrier (19 samples, 0.04%)</title><rect x="967.1" y="181" width="0.5" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="970.13" y="191.5" ></text>
</g>
<g >
<title>runtime.gcTrigger.test (9 samples, 0.02%)</title><rect x="1102.0" y="197" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1105.01" y="207.5" ></text>
</g>
<g >
<title>runtime.slicebytetostring (1,309 samples, 2.53%)</title><rect x="857.5" y="197" width="29.8" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="860.47" y="207.5" >ru..</text>
</g>
<g >
<title>runtime.lock2 (6 samples, 0.01%)</title><rect x="1189.3" y="117" width="0.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1192.32" y="127.5" ></text>
</g>
<g >
<title>math/rand.(*Rand).Intn (613 samples, 1.19%)</title><rect x="683.8" y="229" width="14.0" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="686.85" y="239.5" ></text>
</g>
<g >
<title>sync.(*Pool).pin (99 samples, 0.19%)</title><rect x="850.0" y="165" width="2.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="853.03" y="175.5" ></text>
</g>
<g >
<title>runtime.wakep (5 samples, 0.01%)</title><rect x="1157.8" y="197" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1160.80" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mheap).nextSpanForSweep (13 samples, 0.03%)</title><rect x="14.4" y="229" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="17.45" y="239.5" ></text>
</g>
<g >
<title>runtime.gcDrainMarkWorkerDedicated (12 samples, 0.02%)</title><rect x="1189.2" y="245" width="0.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1192.22" y="255.5" ></text>
</g>
<g >
<title>runtime.publicationBarrier (5 samples, 0.01%)</title><rect x="880.9" y="165" width="0.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="883.88" y="175.5" ></text>
</g>
<g >
<title>math/rand.(*rngSource).Uint64 (128 samples, 0.25%)</title><rect x="694.9" y="197" width="2.9" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="697.89" y="207.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).balance (7 samples, 0.01%)</title><rect x="1189.5" y="213" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1192.50" y="223.5" ></text>
</g>
<g >
<title>runtime.systemstack (62 samples, 0.12%)</title><rect x="13.0" y="213" width="1.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="16.03" y="223.5" ></text>
</g>
<g >
<title>runtime.arenaIndex (53 samples, 0.10%)</title><rect x="579.5" y="181" width="1.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="582.52" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (33 samples, 0.06%)</title><rect x="878.4" y="149" width="0.7" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="881.37" y="159.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint32).Add (6 samples, 0.01%)</title><rect x="16.3" y="213" width="0.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="19.25" y="223.5" ></text>
</g>
<g >
<title>main.AddValue (2,800 samples, 5.41%)</title><rect x="619.6" y="245" width="63.9" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="622.61" y="255.5" >main.Ad..</text>
</g>
<g >
<title>os.(*File).write (7 samples, 0.01%)</title><rect x="1157.0" y="229" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1159.96" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mspan).base (10 samples, 0.02%)</title><rect x="1099.4" y="197" width="0.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1102.43" y="207.5" ></text>
</g>
<g >
<title>fmt.Sprint (7,318 samples, 14.15%)</title><rect x="720.4" y="213" width="166.9" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="723.35" y="223.5" >fmt.Sprint</text>
</g>
<g >
<title>runtime.preemptone (8 samples, 0.02%)</title><rect x="1189.3" y="149" width="0.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1192.32" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (10 samples, 0.02%)</title><rect x="878.6" y="101" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="881.55" y="111.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (16 samples, 0.03%)</title><rect x="967.2" y="133" width="0.4" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="970.20" y="143.5" ></text>
</g>
<g >
<title>runtime.gopreempt_m (721 samples, 1.39%)</title><rect x="1157.9" y="245" width="16.5" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1160.94" y="255.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush (21 samples, 0.04%)</title><rect x="1057.1" y="197" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1060.11" y="207.5" ></text>
</g>
<g >
<title>runtime.systemstack (671 samples, 1.30%)</title><rect x="1174.4" y="261" width="15.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1177.39" y="271.5" ></text>
</g>
<g >
<title>runtime.newMarkBits (19 samples, 0.04%)</title><rect x="15.8" y="213" width="0.5" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="18.82" y="223.5" ></text>
</g>
<g >
<title>sync.(*Pool).Put (547 samples, 1.06%)</title><rect x="972.3" y="197" width="12.5" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="975.29" y="207.5" ></text>
</g>
<g >
<title>runtime.greyobject (243 samples, 0.47%)</title><rect x="591.3" y="181" width="5.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="594.27" y="191.5" ></text>
</g>
<g >
<title>main.main (20,121 samples, 38.91%)</title><rect x="697.8" y="245" width="459.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="700.83" y="255.5" >main.main</text>
</g>
<g >
<title>runtime.nextFreeFast (153 samples, 0.30%)</title><rect x="883.2" y="181" width="3.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="886.21" y="191.5" ></text>
</g>
<g >
<title>runtime.main (23,559 samples, 45.56%)</title><rect x="619.6" y="261" width="537.5" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="622.57" y="271.5" >runtime.main</text>
</g>
<g >
<title>fmt.(*pp).free (636 samples, 1.23%)</title><rect x="830.8" y="197" width="14.5" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="833.77" y="207.5" ></text>
</g>
<g >
<title>runtime.heapSetType (49 samples, 0.09%)</title><rect x="894.3" y="181" width="1.2" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="897.34" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocMSpanLocked (10 samples, 0.02%)</title><rect x="1085.9" y="69" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1088.88" y="79.5" ></text>
</g>
<g >
<title>runtime.addb (10 samples, 0.02%)</title><rect x="578.8" y="181" width="0.2" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="581.81" y="191.5" ></text>
</g>
<g >
<title>runtime.lock2 (6 samples, 0.01%)</title><rect x="1161.3" y="181" width="0.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1164.34" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mheap).initSpan (9 samples, 0.02%)</title><rect x="1174.7" y="213" width="0.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1177.67" y="223.5" ></text>
</g>
<g >
<title>runtime.goschedImpl (715 samples, 1.38%)</title><rect x="1158.0" y="229" width="16.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1160.96" y="239.5" ></text>
</g>
<g >
<title>runtime.findObject (160 samples, 0.31%)</title><rect x="164.5" y="181" width="3.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="167.48" y="191.5" ></text>
</g>
<g >
<title>runtime/pprof.profileWriter (13 samples, 0.03%)</title><rect x="1189.7" y="261" width="0.3" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1192.70" y="271.5" ></text>
</g>
<g >
<title>runtime.mcall (34 samples, 0.07%)</title><rect x="1157.1" y="261" width="0.8" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1160.14" y="271.5" ></text>
</g>
<g >
<title>runtime.mallocgc (818 samples, 1.58%)</title><rect x="862.3" y="181" width="18.7" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="865.33" y="191.5" ></text>
</g>
<g >
<title>runtime.stdcall2 (5 samples, 0.01%)</title><rect x="15.7" y="165" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="18.70" y="175.5" ></text>
</g>
<g >
<title>runtime.typePointers.next (221 samples, 0.43%)</title><rect x="172.3" y="181" width="5.0" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="175.26" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mspan).base (820 samples, 1.59%)</title><rect x="558.5" y="181" width="18.7" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="561.46" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (10 samples, 0.02%)</title><rect x="893.2" y="117" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="896.16" y="127.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).put (8 samples, 0.02%)</title><rect x="1189.3" y="181" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1192.32" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (8 samples, 0.02%)</title><rect x="893.2" y="69" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="896.18" y="79.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep.(*mheap).freeSpan.func3 (38 samples, 0.07%)</title><rect x="13.0" y="197" width="0.9" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="16.03" y="207.5" ></text>
</g>
<g >
<title>runtime.getMCache (45 samples, 0.09%)</title><rect x="998.4" y="197" width="1.0" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1001.40" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).uncacheSpan (5 samples, 0.01%)</title><rect x="879.0" y="133" width="0.1" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="881.99" y="143.5" ></text>
</g>
<g >
<title>runtime.releasem (39 samples, 0.08%)</title><rect x="1136.7" y="213" width="0.8" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1139.65" y="223.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush (6 samples, 0.01%)</title><rect x="978.3" y="165" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="981.27" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (46 samples, 0.09%)</title><rect x="1023.3" y="117" width="1.0" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1026.27" y="127.5" ></text>
</g>
<g >
<title>sync.runtime_procPin (38 samples, 0.07%)</title><rect x="993.0" y="165" width="0.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="996.01" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpanLocked (28 samples, 0.05%)</title><rect x="13.1" y="181" width="0.6" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="16.10" y="191.5" ></text>
</g>
<g >
<title>runtime.findObject (9 samples, 0.02%)</title><rect x="967.3" y="101" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="970.34" y="111.5" ></text>
</g>
<g >
<title>runtime.(*mspan).initHeapBits (437 samples, 0.85%)</title><rect x="1087.7" y="133" width="9.9" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1090.66" y="143.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (437 samples, 0.85%)</title><rect x="1087.7" y="117" width="9.9" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1090.66" y="127.5" ></text>
</g>
<g >
<title>runtime.memmove (159 samples, 0.31%)</title><rect x="909.1" y="197" width="3.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="912.06" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (20 samples, 0.04%)</title><rect x="1174.5" y="229" width="0.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1177.53" y="239.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).free (15 samples, 0.03%)</title><rect x="13.2" y="165" width="0.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="16.22" y="175.5" ></text>
</g>
<g >
<title>runtime.deductAssistCredit (71 samples, 0.14%)</title><rect x="879.2" y="165" width="1.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="882.24" y="175.5" ></text>
</g>
<g >
<title>fmt.(*buffer).writeString (462 samples, 0.89%)</title><rect x="953.6" y="149" width="10.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="956.56" y="159.5" ></text>
</g>
<g >
<title>runtime.systemstack (7 samples, 0.01%)</title><rect x="908.9" y="165" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="911.90" y="175.5" ></text>
</g>
<g >
<title>all (51,713 samples, 100%)</title><rect x="10.0" y="277" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (9 samples, 0.02%)</title><rect x="683.3" y="213" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="686.28" y="223.5" ></text>
</g>
<g >
<title>sync.(*Pool).Get (331 samples, 0.64%)</title><rect x="986.8" y="197" width="7.6" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="989.85" y="207.5" ></text>
</g>
<g >
<title>runtime.(*gcBits).bytep (6 samples, 0.01%)</title><rect x="1023.1" y="133" width="0.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1026.11" y="143.5" ></text>
</g>
<g >
<title>gogo (11 samples, 0.02%)</title><rect x="10.0" y="261" width="0.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (18 samples, 0.03%)</title><rect x="660.3" y="133" width="0.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="663.25" y="143.5" ></text>
</g>
<g >
<title>runtime.(*mspan).markBitsForIndex (8 samples, 0.02%)</title><rect x="578.1" y="181" width="0.2" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="581.11" y="191.5" ></text>
</g>
<g >
<title>runtime.arenaIdx.l2 (16 samples, 0.03%)</title><rect x="579.2" y="181" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="582.16" y="191.5" ></text>
</g>
<g >
<title>runtime.greyobject (8 samples, 0.02%)</title><rect x="1189.3" y="197" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1192.32" y="207.5" ></text>
</g>
<g >
<title>runtime.typePointers.nextFast (47 samples, 0.09%)</title><rect x="616.8" y="181" width="1.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="619.83" y="191.5" ></text>
</g>
<g >
<title>runtime.execute (8 samples, 0.02%)</title><rect x="834.1" y="133" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="837.06" y="143.5" ></text>
</g>
<g >
<title>runtime.sysAllocOS (5 samples, 0.01%)</title><rect x="1174.9" y="165" width="0.1" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="1177.87" y="175.5" ></text>
</g>
<g >
<title>runtime.unlock2 (6 samples, 0.01%)</title><rect x="1162.3" y="181" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1165.34" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (36 samples, 0.07%)</title><rect x="893.2" y="165" width="0.8" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="896.16" y="175.5" ></text>
</g>
<g >
<title>runtime.stealWork (7 samples, 0.01%)</title><rect x="1157.6" y="197" width="0.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1160.55" y="207.5" ></text>
</g>
<g >
<title>runtime.systemstack (6 samples, 0.01%)</title><rect x="978.3" y="149" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="981.27" y="159.5" ></text>
</g>
<g >
<title>runtime.(*fixalloc).alloc (9 samples, 0.02%)</title><rect x="1085.9" y="53" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1088.90" y="63.5" ></text>
</g>
<g >
<title>runtime.stdcall2 (7 samples, 0.01%)</title><rect x="1174.7" y="149" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1177.67" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (652 samples, 1.26%)</title><rect x="1084.6" y="197" width="14.8" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1087.56" y="207.5" ></text>
</g>
<g >
<title>runtime.startm (489 samples, 0.95%)</title><rect x="1163.1" y="197" width="11.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1166.10" y="207.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush (30 samples, 0.06%)</title><rect x="827.4" y="149" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="830.42" y="159.5" ></text>
</g>
<g >
<title>runtime.pidleget (10 samples, 0.02%)</title><rect x="1162.8" y="181" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1165.82" y="191.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).push (5 samples, 0.01%)</title><rect x="879.0" y="117" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="881.99" y="127.5" ></text>
</g>
<g >
<title>fmt.(*pp).fmtInteger (1,938 samples, 3.75%)</title><rect x="765.2" y="165" width="44.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="768.22" y="175.5" >fmt...</text>
</g>
<g >
<title>sync.runtime_procPin (58 samples, 0.11%)</title><rect x="982.9" y="165" width="1.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="985.92" y="175.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (594 samples, 1.15%)</title><rect x="1123.1" y="213" width="13.6" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1126.10" y="223.5" ></text>
</g>
<g >
<title>runtime.globrunqget (10 samples, 0.02%)</title><rect x="1161.0" y="181" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1163.95" y="191.5" ></text>
</g>
<g >
<title>runtime.(*gcBits).bitp (95 samples, 0.18%)</title><rect x="553.2" y="181" width="2.1" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="556.17" y="191.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (15 samples, 0.03%)</title><rect x="971.9" y="133" width="0.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="974.86" y="143.5" ></text>
</g>
<g >
<title>sync.runtime_procPin (52 samples, 0.10%)</title><rect x="843.5" y="149" width="1.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="846.46" y="159.5" ></text>
</g>
<g >
<title>runtime.acquirem (8 samples, 0.02%)</title><rect x="891.1" y="197" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="894.10" y="207.5" ></text>
</g>
<g >
<title>runtime.notewakeup (486 samples, 0.94%)</title><rect x="1163.2" y="181" width="11.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1166.17" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocMSpanLocked (8 samples, 0.02%)</title><rect x="1023.4" y="53" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1026.40" y="63.5" ></text>
</g>
<g >
<title>syscall.SyscallN (7 samples, 0.01%)</title><rect x="1157.0" y="149" width="0.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1159.96" y="159.5" ></text>
</g>
<g >
<title>runtime.(*gcBitsArena).tryAlloc (8 samples, 0.02%)</title><rect x="15.5" y="213" width="0.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="18.45" y="223.5" ></text>
</g>
<g >
<title>runtime.slicebytetostring (2,150 samples, 4.16%)</title><rect x="994.4" y="213" width="49.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="997.45" y="223.5" >runt..</text>
</g>
<g >
<title>runtime.(*gcBits).bitp (37 samples, 0.07%)</title><rect x="152.4" y="181" width="0.9" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="155.41" y="191.5" ></text>
</g>
<g >
<title>runtime.systemstack (16 samples, 0.03%)</title><rect x="967.2" y="149" width="0.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="970.20" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mspan).refillAllocCache (7 samples, 0.01%)</title><rect x="1025.5" y="149" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1028.50" y="159.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush (7 samples, 0.01%)</title><rect x="820.7" y="101" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="823.73" y="111.5" ></text>
</g>
<g >
<title>runtime.procPin (81 samples, 0.16%)</title><rect x="981.1" y="165" width="1.8" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="984.08" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (9 samples, 0.02%)</title><rect x="893.2" y="85" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="896.18" y="95.5" ></text>
</g>
<g >
<title>runtime.goschedImpl (11 samples, 0.02%)</title><rect x="834.0" y="165" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="837.01" y="175.5" ></text>
</g>
<g >
<title>reflect.TypeOf (31 samples, 0.06%)</title><rect x="852.9" y="197" width="0.7" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="855.88" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (38 samples, 0.07%)</title><rect x="893.1" y="181" width="0.9" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="896.13" y="191.5" ></text>
</g>
<g >
<title>sync.runtime_procUnpin (20 samples, 0.04%)</title><rect x="993.9" y="181" width="0.5" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="996.95" y="191.5" ></text>
</g>
<g >
<title>runtime.findObject (8 samples, 0.02%)</title><rect x="1057.3" y="133" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1060.31" y="143.5" ></text>
</g>
<g >
<title>runtime.memmove (342 samples, 0.66%)</title><rect x="1027.7" y="197" width="7.8" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1030.72" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).uncacheSpan (21 samples, 0.04%)</title><rect x="1097.8" y="165" width="0.5" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1100.84" y="175.5" ></text>
</g>
<g >
<title>runtime.schedule (199 samples, 0.38%)</title><rect x="1158.0" y="213" width="4.5" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1160.96" y="223.5" ></text>
</g>
<g >
<title>runtime.memmove (711 samples, 1.37%)</title><rect x="667.1" y="213" width="16.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="670.05" y="223.5" ></text>
</g>
<g >
<title>runtime.unlock2 (5 samples, 0.01%)</title><rect x="13.8" y="165" width="0.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="16.79" y="175.5" ></text>
</g>
<g >
<title>runtime.arenaIdx.l2 (5 samples, 0.01%)</title><rect x="163.9" y="181" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="166.91" y="191.5" ></text>
</g>
<g >
<title>runtime.typePointers.nextFast (16 samples, 0.03%)</title><rect x="178.1" y="197" width="0.4" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="181.15" y="207.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush (20 samples, 0.04%)</title><rect x="971.7" y="181" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="974.74" y="191.5" ></text>
</g>
<g >
<title>runtime.(*fixalloc).alloc (8 samples, 0.02%)</title><rect x="1023.4" y="37" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1026.40" y="47.5" ></text>
</g>
<g >
<title>gcWriteBarrier (10 samples, 0.02%)</title><rect x="801.0" y="117" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="803.97" y="127.5" ></text>
</g>
<g >
<title>runtime.lock2 (5 samples, 0.01%)</title><rect x="15.7" y="197" width="0.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="18.70" y="207.5" ></text>
</g>
<g >
<title>fmt.(*fmt).fmtS (664 samples, 1.28%)</title><rect x="951.9" y="165" width="15.2" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="954.94" y="175.5" ></text>
</g>
<g >
<title>runtime.spanOfUnchecked (5 samples, 0.01%)</title><rect x="618.6" y="197" width="0.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="621.56" y="207.5" ></text>
</g>
<g >
<title>runtime.acquirem (49 samples, 0.09%)</title><rect x="997.2" y="197" width="1.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1000.23" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mcache).allocLarge (22 samples, 0.04%)</title><rect x="660.2" y="197" width="0.5" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="663.21" y="207.5" ></text>
</g>
<g >
<title>gcWriteBarrier (12 samples, 0.02%)</title><rect x="908.8" y="197" width="0.3" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="911.79" y="207.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).trigger (6 samples, 0.01%)</title><rect x="1102.1" y="181" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1105.06" y="191.5" ></text>
</g>
<g >
<title>runtime.gopreempt_m (12 samples, 0.02%)</title><rect x="834.0" y="181" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="836.99" y="191.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint8).Load (29 samples, 0.06%)</title><rect x="617.9" y="181" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="620.90" y="191.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (23 samples, 0.04%)</title><rect x="893.4" y="101" width="0.5" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="896.39" y="111.5" ></text>
</g>
<g >
<title>math/rand.(*Rand).Int31n (39 samples, 0.08%)</title><rect x="1045.3" y="213" width="0.9" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1048.29" y="223.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).enlistWorker (8 samples, 0.02%)</title><rect x="1189.3" y="165" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1192.32" y="175.5" ></text>
</g>
<g >
<title>runtime.asyncPreempt (12 samples, 0.02%)</title><rect x="659.9" y="229" width="0.3" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="662.93" y="239.5" ></text>
</g>
<g >
<title>os.(*File).WriteString (7 samples, 0.01%)</title><rect x="1157.0" y="245" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1159.96" y="255.5" ></text>
</g>
<g >
<title>runtime.gcDrain (19,329 samples, 37.38%)</title><rect x="178.5" y="213" width="441.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="181.51" y="223.5" >runtime.gcDrain</text>
</g>
<g >
<title>runtime.wbBufFlush1 (15 samples, 0.03%)</title><rect x="967.2" y="117" width="0.4" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="970.23" y="127.5" ></text>
</g>
<g >
<title>gcWriteBarrier (22 samples, 0.04%)</title><rect x="1057.1" y="213" width="0.5" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1060.08" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mspan).writeHeapBitsSmall (427 samples, 0.83%)</title><rect x="1105.5" y="181" width="9.7" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1108.50" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (43 samples, 0.08%)</title><rect x="1023.3" y="69" width="1.0" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1026.31" y="79.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (77 samples, 0.15%)</title><rect x="1085.8" y="85" width="1.7" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1088.79" y="95.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint8).Load (17 samples, 0.03%)</title><rect x="16.8" y="245" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="19.80" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (607 samples, 1.17%)</title><rect x="1084.6" y="181" width="13.9" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1087.65" y="191.5" ></text>
</g>
<g >
<title>fmt.(*buffer).writeString (484 samples, 0.94%)</title><rect x="901.6" y="213" width="11.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="904.65" y="223.5" ></text>
</g>
<g >
<title>runtime.stdcall4 (5 samples, 0.01%)</title><rect x="1174.9" y="149" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1177.87" y="159.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (328 samples, 0.63%)</title><rect x="1035.5" y="197" width="7.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1038.52" y="207.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).find (5 samples, 0.01%)</title><rect x="660.5" y="101" width="0.1" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="663.46" y="111.5" ></text>
</g>
<g >
<title>runtime.publicationBarrier (42 samples, 0.08%)</title><rect x="1122.1" y="197" width="1.0" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1125.14" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mspan).base (273 samples, 0.53%)</title><rect x="156.9" y="181" width="6.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="159.86" y="191.5" ></text>
</g>
<g >
<title>fmt.(*pp).doPrintf (2,345 samples, 4.53%)</title><rect x="914.1" y="213" width="53.5" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="917.13" y="223.5" >fmt.(..</text>
</g>
<g >
<title>runtime.stdcall2 (6 samples, 0.01%)</title><rect x="1161.3" y="149" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1164.34" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mspan).init (14 samples, 0.03%)</title><rect x="1023.8" y="37" width="0.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1026.81" y="47.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).alloc (9 samples, 0.02%)</title><rect x="660.4" y="117" width="0.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="663.37" y="127.5" ></text>
</g>
<g >
<title>runtime.heapSetType (617 samples, 1.19%)</title><rect x="1102.2" y="197" width="14.1" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="1105.24" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (7 samples, 0.01%)</title><rect x="660.7" y="197" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="663.71" y="207.5" ></text>
</g>
<g >
<title>runtime.getMCache (24 samples, 0.05%)</title><rect x="861.8" y="181" width="0.5" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="864.78" y="191.5" ></text>
</g>
<g >
<title>runtime.sysReserveOS (6 samples, 0.01%)</title><rect x="1174.5" y="181" width="0.2" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="1177.53" y="191.5" ></text>
</g>
<g >
<title>gcWriteBarrier (39 samples, 0.08%)</title><rect x="827.2" y="165" width="0.9" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="830.21" y="175.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).push (10 samples, 0.02%)</title><rect x="1024.9" y="133" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1027.93" y="143.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (7 samples, 0.01%)</title><rect x="1174.7" y="197" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1177.67" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (10 samples, 0.02%)</title><rect x="878.6" y="69" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="881.55" y="79.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (30 samples, 0.06%)</title><rect x="827.4" y="117" width="0.7" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="830.42" y="127.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (7 samples, 0.01%)</title><rect x="908.9" y="149" width="0.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="911.90" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (22 samples, 0.04%)</title><rect x="878.5" y="133" width="0.5" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="881.49" y="143.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep (13 samples, 0.03%)</title><rect x="1024.5" y="133" width="0.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1027.48" y="143.5" ></text>
</g>
<g >
<title>runtime.acquirem (72 samples, 0.14%)</title><rect x="860.1" y="181" width="1.7" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="863.14" y="191.5" ></text>
</g>
<g >
<title>runtime.sysReserve (6 samples, 0.01%)</title><rect x="1174.5" y="197" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1177.53" y="207.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (6 samples, 0.01%)</title><rect x="1162.3" y="197" width="0.2" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1165.34" y="207.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2,718 samples, 5.26%)</title><rect x="1061.1" y="213" width="62.0" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1064.08" y="223.5" >runtim..</text>
</g>
<g >
<title>runtime.semasleep (5 samples, 0.01%)</title><rect x="1189.5" y="133" width="0.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1192.50" y="143.5" ></text>
</g>
<g >
<title>runtime.semasleep (6 samples, 0.01%)</title><rect x="1189.3" y="101" width="0.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1192.32" y="111.5" ></text>
</g>
<g >
<title>brc/pkg.PrintIndec (7,995 samples, 15.46%)</title><rect x="714.6" y="229" width="182.4" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="717.60" y="239.5" >brc/pkg.PrintIndec</text>
</g>
<g >
<title>sync.runtime_procUnpin (24 samples, 0.05%)</title><rect x="844.7" y="165" width="0.6" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="847.74" y="175.5" ></text>
</g>
<g >
<title>runtime.resetspinning (7 samples, 0.01%)</title><rect x="1157.8" y="213" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1160.76" y="223.5" ></text>
</g>
<g >
<title>runtime.semawakeup (485 samples, 0.94%)</title><rect x="1163.2" y="165" width="11.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1166.19" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mspan).refillAllocCache (26 samples, 0.05%)</title><rect x="1098.8" y="165" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1101.84" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (551 samples, 1.07%)</title><rect x="1085.2" y="165" width="12.6" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="1088.24" y="175.5" ></text>
</g>
<g >
<title>runtime.gcDrainMarkWorkerDedicated (7,065 samples, 13.66%)</title><rect x="17.3" y="229" width="161.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="20.30" y="239.5" >runtime.gcDrainMarkW..</text>
</g>
<g >
<title>runtime.(*mspan).heapBits (96 samples, 0.19%)</title><rect x="1112.2" y="165" width="2.2" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="1115.19" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mspan).divideByElemSize (41 samples, 0.08%)</title><rect x="577.2" y="181" width="0.9" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="580.17" y="191.5" ></text>
</g>
<g >
<title>runtime.acquirem (56 samples, 0.11%)</title><rect x="1057.6" y="213" width="1.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1060.59" y="223.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint32).Add (7 samples, 0.01%)</title><rect x="13.6" y="165" width="0.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="16.58" y="175.5" ></text>
</g>
<g >
<title>fmt.(*fmt).fmtS (621 samples, 1.20%)</title><rect x="812.9" y="149" width="14.1" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="815.86" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (531 samples, 1.03%)</title><rect x="1085.5" y="149" width="12.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1088.52" y="159.5" ></text>
</g>
<g >
<title>runtime.systemstack (20 samples, 0.04%)</title><rect x="660.2" y="165" width="0.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="663.23" y="175.5" ></text>
</g>
<g >
<title>math/rand.(*rngSource).Int63 (9 samples, 0.02%)</title><rect x="1046.2" y="197" width="0.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1049.25" y="207.5" ></text>
</g>
<g >
<title>runtime.wakep (516 samples, 1.00%)</title><rect x="1162.5" y="213" width="11.8" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1165.50" y="223.5" ></text>
</g>
<g >
<title>runtime.convTstring (3,959 samples, 7.66%)</title><rect x="1047.2" y="229" width="90.3" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1050.20" y="239.5" >runtime.co..</text>
</g>
<g >
<title>runtime.wbBufFlush1 (6 samples, 0.01%)</title><rect x="914.0" y="133" width="0.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="916.99" y="143.5" ></text>
</g>
<g >
<title>gcWriteBarrier (8 samples, 0.02%)</title><rect x="978.2" y="181" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="981.22" y="191.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (254 samples, 0.49%)</title><rect x="1116.3" y="197" width="5.8" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1119.32" y="207.5" ></text>
</g>
<g >
<title>runtime.newAllocBits (5 samples, 0.01%)</title><rect x="1174.9" y="213" width="0.1" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1177.87" y="223.5" ></text>
</g>
<g >
<title>runtime.makeSpanClass (5 samples, 0.01%)</title><rect x="999.4" y="197" width="0.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1002.42" y="207.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (5 samples, 0.01%)</title><rect x="13.8" y="181" width="0.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="16.79" y="191.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush (7 samples, 0.01%)</title><rect x="908.9" y="181" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="911.90" y="191.5" ></text>
</g>
<g >
<title>runtime.releasem (22 samples, 0.04%)</title><rect x="1043.0" y="197" width="0.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1046.00" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpanLocked (24 samples, 0.05%)</title><rect x="13.9" y="181" width="0.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="16.90" y="191.5" ></text>
</g>
<g >
<title>runtime.add (8 samples, 0.02%)</title><rect x="1047.0" y="229" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1049.98" y="239.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (18 samples, 0.03%)</title><rect x="1057.2" y="149" width="0.4" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1060.17" y="159.5" ></text>
</g>
<g >
<title>syscall.WriteFile (7 samples, 0.01%)</title><rect x="1157.0" y="197" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1159.96" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mspan).objIndex (22 samples, 0.04%)</title><rect x="578.3" y="181" width="0.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="581.29" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (644 samples, 1.25%)</title><rect x="1174.5" y="245" width="14.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1177.53" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (93 samples, 0.18%)</title><rect x="1085.5" y="133" width="2.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1088.54" y="143.5" ></text>
</g>
<g >
<title>runtime.findObject (16 samples, 0.03%)</title><rect x="827.7" y="85" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="830.69" y="95.5" ></text>
</g>
<g >
<title>gcWriteBarrier (7 samples, 0.01%)</title><rect x="914.0" y="197" width="0.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="916.97" y="207.5" ></text>
</g>
<g >
<title>runtime/pprof.(*profileBuilder).addCPUData (11 samples, 0.02%)</title><rect x="1189.7" y="245" width="0.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1192.70" y="255.5" ></text>
</g>
<g >
<title>syscall.writeFile (7 samples, 0.01%)</title><rect x="1157.0" y="181" width="0.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1159.96" y="191.5" ></text>
</g>
<g >
<title>runtime.park_m (28 samples, 0.05%)</title><rect x="1157.3" y="245" width="0.6" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1160.28" y="255.5" ></text>
</g>
<g >
<title>runtime.(*gcBits).bytep (9 samples, 0.02%)</title><rect x="1085.3" y="149" width="0.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1088.31" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (91 samples, 0.18%)</title><rect x="1022.8" y="149" width="2.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="1025.83" y="159.5" ></text>
</g>
<g >
<title>runtime.pageIndexOf (143 samples, 0.28%)</title><rect x="597.6" y="181" width="3.3" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="600.62" y="191.5" ></text>
</g>
<g >
<title>runtime.findRunnable (16 samples, 0.03%)</title><rect x="1157.4" y="213" width="0.3" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1160.37" y="223.5" ></text>
</g>
<g >
<title>runtime.stdcall4 (6 samples, 0.01%)</title><rect x="1174.5" y="165" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1177.53" y="175.5" ></text>
</g>
<g >
<title>runtime.stdcall1 (478 samples, 0.92%)</title><rect x="1163.3" y="149" width="11.0" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1166.35" y="159.5" ></text>
</g>
<g >
<title>runtime.systemstack (20 samples, 0.04%)</title><rect x="971.7" y="165" width="0.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="974.74" y="175.5" ></text>
</g>
<g >
<title>math/rand.(*rngSource).Uint64 (21 samples, 0.04%)</title><rect x="1046.5" y="197" width="0.4" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1049.45" y="207.5" ></text>
</g>
<g >
<title>runtime.markBits.setMarked (18 samples, 0.03%)</title><rect x="597.2" y="181" width="0.4" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="600.20" y="191.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush (5 samples, 0.01%)</title><rect x="801.1" y="101" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="804.09" y="111.5" ></text>
</g>
<g >
<title>syscall.Syscall6 (7 samples, 0.01%)</title><rect x="1157.0" y="165" width="0.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1159.96" y="175.5" ></text>
</g>
<g >
<title>runtime.sweepone (280 samples, 0.54%)</title><rect x="10.3" y="245" width="6.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="13.34" y="255.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint32).Add (5 samples, 0.01%)</title><rect x="14.5" y="213" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="17.54" y="223.5" ></text>
</g>
<g >
<title>runtime.sysUsedOS (624 samples, 1.21%)</title><rect x="1175.0" y="213" width="14.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1177.99" y="223.5" ></text>
</g>
<g >
<title>runtime/pprof.(*profMap).lookup (9 samples, 0.02%)</title><rect x="1189.7" y="229" width="0.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1192.75" y="239.5" ></text>
</g>
<g >
<title>runtime.procPin (13 samples, 0.03%)</title><rect x="851.5" y="149" width="0.3" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="854.51" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (19 samples, 0.04%)</title><rect x="660.3" y="149" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="663.25" y="159.5" ></text>
</g>
<g >
<title>runtime.typePointers.next (580 samples, 1.12%)</title><rect x="603.6" y="181" width="13.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="606.59" y="191.5" ></text>
</g>
<g >
<title>math/rand.(*Rand).Intn (76 samples, 0.15%)</title><rect x="1045.2" y="229" width="1.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1048.20" y="239.5" ></text>
</g>
<g >
<title>sync.(*Pool).Put (483 samples, 0.93%)</title><rect x="834.3" y="181" width="11.0" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="837.26" y="191.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocker).tryAcquire (7 samples, 0.01%)</title><rect x="16.4" y="229" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="19.39" y="239.5" ></text>
</g>
<g >
<title>runtime.getMCache (42 samples, 0.08%)</title><rect x="1059.3" y="213" width="0.9" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1062.27" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (38 samples, 0.07%)</title><rect x="878.3" y="165" width="0.9" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="881.35" y="175.5" ></text>
</g>
<g >
<title>runtime.arenaIndex (9 samples, 0.02%)</title><rect x="178.6" y="197" width="0.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="181.58" y="207.5" ></text>
</g>
<g >
<title>fmt.(*fmt).clearflags (39 samples, 0.08%)</title><rect x="912.7" y="213" width="0.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="915.69" y="223.5" ></text>
</g>
<g >
<title>runtime.typePointers.nextFast (24 samples, 0.05%)</title><rect x="177.3" y="181" width="0.6" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="180.30" y="191.5" ></text>
</g>
<g >
<title>runtime.convTstring (330 samples, 0.64%)</title><rect x="889.4" y="213" width="7.5" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="892.42" y="223.5" ></text>
</g>
<g >
<title>runtime.growslice (1,020 samples, 1.97%)</title><rect x="660.2" y="229" width="23.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="663.21" y="239.5" >r..</text>
</g>
<g >
<title>fmt.(*pp).fmtString (791 samples, 1.53%)</title><rect x="949.1" y="181" width="18.0" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="952.08" y="191.5" ></text>
</g>
<g >
<title>runtime.(*gcBits).bytep (133 samples, 0.26%)</title><rect x="555.3" y="181" width="3.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="558.33" y="191.5" ></text>
</g>
<g >
<title>fmt.(*buffer).writeString (421 samples, 0.81%)</title><rect x="814.5" y="133" width="9.6" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="817.46" y="143.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush (6 samples, 0.01%)</title><rect x="914.0" y="181" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="916.99" y="191.5" ></text>
</g>
<g >
<title>runtime.morestack (722 samples, 1.40%)</title><rect x="1157.9" y="261" width="16.5" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1160.92" y="271.5" ></text>
</g>
<g >
<title>runtime.arenaIndex (20 samples, 0.04%)</title><rect x="164.0" y="181" width="0.5" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="167.02" y="191.5" ></text>
</g>
<g >
<title>sync.indexLocal (6 samples, 0.01%)</title><rect x="984.2" y="181" width="0.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="987.25" y="191.5" ></text>
</g>
<g >
<title>runtime.procPin (55 samples, 0.11%)</title><rect x="842.2" y="149" width="1.3" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="845.20" y="159.5" ></text>
</g>
<g >
<title>runtime.stdcall2 (6 samples, 0.01%)</title><rect x="1189.3" y="85" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1192.32" y="95.5" ></text>
</g>
<g >
<title>runtime.markBits.isMarked (17 samples, 0.03%)</title><rect x="596.8" y="181" width="0.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="599.82" y="191.5" ></text>
</g>
<g >
<title>fmt.(*pp).free (751 samples, 1.45%)</title><rect x="967.6" y="213" width="17.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="970.64" y="223.5" ></text>
</g>
<g >
<title>sync.runtime_procUnpin (17 samples, 0.03%)</title><rect x="984.4" y="181" width="0.4" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="987.38" y="191.5" ></text>
</g>
<g >
<title>runtime.spanOf (37 samples, 0.07%)</title><rect x="171.4" y="181" width="0.9" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="174.42" y="191.5" ></text>
</g>
<g >
<title>runtime.mapaccess1_faststr (849 samples, 1.64%)</title><rect x="1137.6" y="229" width="19.3" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1140.56" y="239.5" ></text>
</g>
<g >
<title>fmt.Sprintf (6,419 samples, 12.41%)</title><rect x="897.0" y="229" width="146.5" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="900.04" y="239.5" >fmt.Sprintf</text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (20 samples, 0.04%)</title><rect x="895.5" y="181" width="0.4" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="898.46" y="191.5" ></text>
</g>
<g >
<title>gcWriteBarrier (6 samples, 0.01%)</title><rect x="833.8" y="181" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="836.83" y="191.5" ></text>
</g>
<g >
<title>math/rand.(*rngSource).Int63 (20 samples, 0.04%)</title><rect x="694.4" y="197" width="0.5" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="697.43" y="207.5" ></text>
</g>
<g >
<title>math/rand.(*Rand).Int31n (407 samples, 0.79%)</title><rect x="684.7" y="213" width="9.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="687.74" y="223.5" ></text>
</g>
<g >
<title>gcWriteBarrier (10 samples, 0.02%)</title><rect x="820.7" y="117" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="823.66" y="127.5" ></text>
</g>
<g >
<title>sync.(*Pool).pin (256 samples, 0.50%)</title><rect x="978.4" y="181" width="5.8" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="981.41" y="191.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (25 samples, 0.05%)</title><rect x="827.5" y="101" width="0.6" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="830.53" y="111.5" ></text>
</g>
</g>
</svg>
