<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="294" onload="init(evt)" viewBox="0 0 1200 294" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="294.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="277" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="277" > </text>
<g id="frames">
<g >
<title>runtime.markroot.func1 (129 samples, 0.89%)</title><rect x="1156.6" y="165" width="10.4" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1159.55" y="175.5" ></text>
</g>
<g >
<title>runtime.lock2 (2 samples, 0.01%)</title><rect x="1085.5" y="149" width="0.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1088.45" y="159.5" ></text>
</g>
<g >
<title>runtime.semawakeup (6 samples, 0.04%)</title><rect x="1156.1" y="101" width="0.5" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1159.07" y="111.5" ></text>
</g>
<g >
<title>runtime.checkTimers (5 samples, 0.03%)</title><rect x="1038.9" y="149" width="0.4" height="15.0" fill="rgb(228,105,25)" rx="2" ry="2" />
<text  x="1041.89" y="159.5" ></text>
</g>
<g >
<title>runtime.bgscavenge (13 samples, 0.09%)</title><rect x="932.8" y="229" width="1.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="935.80" y="239.5" ></text>
</g>
<g >
<title>runtime.gcDrainMarkWorkerIdle (14 samples, 0.10%)</title><rect x="1177.2" y="213" width="1.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1180.20" y="223.5" ></text>
</g>
<g >
<title>runtime.stdcall2 (13 samples, 0.09%)</title><rect x="989.0" y="149" width="1.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="992.00" y="159.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).pop (2 samples, 0.01%)</title><rect x="940.8" y="149" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="943.82" y="159.5" ></text>
</g>
<g >
<title>runtime.stdcall2 (2 samples, 0.01%)</title><rect x="1108.7" y="149" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1111.69" y="159.5" ></text>
</g>
<g >
<title>runtime.preemptone (3 samples, 0.02%)</title><rect x="1178.1" y="117" width="0.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1181.10" y="127.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Float64).Store (3 samples, 0.02%)</title><rect x="838.9" y="149" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="841.86" y="159.5" ></text>
</g>
<g >
<title>runtime.lock2 (8 samples, 0.05%)</title><rect x="939.9" y="101" width="0.7" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="942.93" y="111.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (9 samples, 0.06%)</title><rect x="986.8" y="149" width="0.7" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="989.81" y="159.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (2 samples, 0.01%)</title><rect x="1041.3" y="181" width="0.2" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1044.32" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mspan).typePointersOfType (14 samples, 0.10%)</title><rect x="887.9" y="197" width="1.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="890.85" y="207.5" ></text>
</g>
<g >
<title>runtime.preemptM (34 samples, 0.23%)</title><rect x="1174.5" y="101" width="2.7" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="1177.45" y="111.5" ></text>
</g>
<g >
<title>runtime.chunkIdx.l2 (2 samples, 0.01%)</title><rect x="844.0" y="85" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="847.04" y="95.5" ></text>
</g>
<g >
<title>runtime.preemptM (27 samples, 0.19%)</title><rect x="1120.3" y="117" width="2.2" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="1123.27" y="127.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (273 samples, 1.87%)</title><rect x="1124.6" y="133" width="22.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1127.57" y="143.5" >r..</text>
</g>
<g >
<title>runtime.wbMove (616 samples, 4.23%)</title><rect x="882.4" y="213" width="49.9" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="885.43" y="223.5" >runti..</text>
</g>
<g >
<title>brc/pkg.(*CityData).Merge (5 samples, 0.03%)</title><rect x="987.9" y="213" width="0.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="990.95" y="223.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint32).Add (3 samples, 0.02%)</title><rect x="935.6" y="181" width="0.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="938.63" y="191.5" ></text>
</g>
<g >
<title>runtime/pprof.(*profileBuilder).addCPUData (2 samples, 0.01%)</title><rect x="1189.8" y="213" width="0.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1192.76" y="223.5" ></text>
</g>
<g >
<title>bytes.IndexByte (546 samples, 3.75%)</title><rect x="742.0" y="213" width="44.2" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="745.00" y="223.5" >byte..</text>
</g>
<g >
<title>runtime.(*mspan).heapBitsSmallForAddr (57 samples, 0.39%)</title><rect x="964.9" y="133" width="4.6" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="967.87" y="143.5" ></text>
</g>
<g >
<title>runtime.greyobject (126 samples, 0.86%)</title><rect x="1167.0" y="165" width="10.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1170.00" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (66 samples, 0.45%)</title><rect x="839.3" y="117" width="5.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="842.26" y="127.5" ></text>
</g>
<g >
<title>runtime.(*gcCPULimiterState).update (3 samples, 0.02%)</title><rect x="1038.5" y="133" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1041.48" y="143.5" ></text>
</g>
<g >
<title>runtime.findObject (46 samples, 0.32%)</title><rect x="896.6" y="117" width="3.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="899.60" y="127.5" ></text>
</g>
<g >
<title>runtime.readUintptr (6 samples, 0.04%)</title><rect x="978.1" y="149" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="981.07" y="159.5" ></text>
</g>
<g >
<title>runtime.semasleep (14 samples, 0.10%)</title><rect x="1122.7" y="53" width="1.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1125.70" y="63.5" ></text>
</g>
<g >
<title>runtime.arenaIndex (2 samples, 0.01%)</title><rect x="847.8" y="85" width="0.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="850.77" y="95.5" ></text>
</g>
<g >
<title>runtime.sysUsed (40 samples, 0.27%)</title><rect x="1105.4" y="197" width="3.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1108.37" y="207.5" ></text>
</g>
<g >
<title>runtime.wakeNetPoller (6 samples, 0.04%)</title><rect x="933.4" y="181" width="0.5" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="936.37" y="191.5" ></text>
</g>
<g >
<title>runtime.lock2.osyield.func1 (3 samples, 0.02%)</title><rect x="1164.3" y="101" width="0.3" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1167.33" y="111.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (5 samples, 0.03%)</title><rect x="935.1" y="149" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="938.07" y="159.5" ></text>
</g>
<g >
<title>runtime.greyobject (2 samples, 0.01%)</title><rect x="855.1" y="69" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="858.06" y="79.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint32).CompareAndSwap (4 samples, 0.03%)</title><rect x="936.6" y="213" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="939.60" y="223.5" ></text>
</g>
<g >
<title>runtime.preemptone (71 samples, 0.49%)</title><rect x="1178.3" y="165" width="5.8" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1181.34" y="175.5" ></text>
</g>
<g >
<title>runtime.preemptone (11 samples, 0.08%)</title><rect x="939.8" y="133" width="0.9" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="942.84" y="143.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush (155 samples, 1.06%)</title><rect x="890.6" y="181" width="12.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="893.61" y="191.5" ></text>
</g>
<g >
<title>runtime.preemptM (2 samples, 0.01%)</title><rect x="976.9" y="85" width="0.2" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="979.93" y="95.5" ></text>
</g>
<g >
<title>runtime.unpackScavChunkData (4 samples, 0.03%)</title><rect x="842.4" y="69" width="0.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="845.42" y="79.5" ></text>
</g>
<g >
<title>runtime.semawakeup (3 samples, 0.02%)</title><rect x="1040.9" y="117" width="0.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1043.91" y="127.5" ></text>
</g>
<g >
<title>runtime.procyield (8 samples, 0.05%)</title><rect x="939.9" y="85" width="0.7" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="942.93" y="95.5" ></text>
</g>
<g >
<title>runtime.stopTheWorldWithSema (2 samples, 0.01%)</title><rect x="856.9" y="133" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="859.92" y="143.5" ></text>
</g>
<g >
<title>runtime.(*mheap).nextSpanForSweep (5 samples, 0.03%)</title><rect x="935.5" y="197" width="0.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="938.47" y="207.5" ></text>
</g>
<g >
<title>main.MapData.func1.1 (1,475 samples, 10.12%)</title><rect x="476.7" y="229" width="119.5" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="479.70" y="239.5" >main.MapData.f..</text>
</g>
<g >
<title>runtime.wakep (11 samples, 0.08%)</title><rect x="1041.5" y="181" width="0.9" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1044.48" y="191.5" ></text>
</g>
<g >
<title>runtime.systemstack (1,292 samples, 8.87%)</title><rect x="1085.0" y="229" width="104.7" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1088.05" y="239.5" >runtime.syst..</text>
</g>
<g >
<title>runtime.typePointers.next (5 samples, 0.03%)</title><rect x="856.0" y="69" width="0.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="859.03" y="79.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).allocRange (12 samples, 0.08%)</title><rect x="841.8" y="85" width="0.9" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="844.77" y="95.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (118 samples, 0.81%)</title><rect x="847.4" y="165" width="9.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="850.36" y="175.5" ></text>
</g>
<g >
<title>runtime.unlock2 (2 samples, 0.01%)</title><rect x="936.4" y="197" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="939.44" y="207.5" ></text>
</g>
<g >
<title>runtime.typePointers.nextFast (5 samples, 0.03%)</title><rect x="856.5" y="85" width="0.4" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="859.51" y="95.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep (7 samples, 0.05%)</title><rect x="935.9" y="197" width="0.5" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="938.88" y="207.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone.forEachP.func5 (71 samples, 0.49%)</title><rect x="1178.3" y="213" width="5.8" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1181.34" y="223.5" ></text>
</g>
<g >
<title>runtime.gopark (3 samples, 0.02%)</title><rect x="937.4" y="213" width="0.3" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="940.41" y="223.5" ></text>
</g>
<g >
<title>runtime.memhash32 (73 samples, 0.50%)</title><rect x="589.8" y="197" width="5.9" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="592.84" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mspan).base (2 samples, 0.01%)</title><rect x="847.1" y="181" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="850.12" y="191.5" ></text>
</g>
<g >
<title>runtime.gcStart.func1 (39 samples, 0.27%)</title><rect x="1186.0" y="213" width="3.1" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1188.95" y="223.5" ></text>
</g>
<g >
<title>runtime.gcFlushBgCredit (2 samples, 0.01%)</title><rect x="941.5" y="165" width="0.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="944.54" y="175.5" ></text>
</g>
<g >
<title>runtime.asyncPreempt (3 samples, 0.02%)</title><rect x="836.7" y="197" width="0.2" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="839.67" y="207.5" ></text>
</g>
<g >
<title>runtime.stdcall0 (18 samples, 0.12%)</title><rect x="1083.2" y="149" width="1.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1086.18" y="159.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).free (5 samples, 0.03%)</title><rect x="934.7" y="133" width="0.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="937.66" y="143.5" ></text>
</g>
<g >
<title>runtime.semasleep (8 samples, 0.05%)</title><rect x="1034.8" y="149" width="0.6" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1037.76" y="159.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).findRunnableGCWorker (3 samples, 0.02%)</title><rect x="1038.5" y="149" width="0.2" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="1041.48" y="159.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (3 samples, 0.02%)</title><rect x="845.8" y="117" width="0.3" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="848.82" y="127.5" ></text>
</g>
<g >
<title>runtime.ready (2 samples, 0.01%)</title><rect x="1189.2" y="197" width="0.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1192.19" y="207.5" ></text>
</g>
<g >
<title>runtime.stdcall0 (3 samples, 0.02%)</title><rect x="1108.9" y="149" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1111.86" y="159.5" ></text>
</g>
<g >
<title>runtime.lock2.osyield.func1 (9 samples, 0.06%)</title><rect x="1119.5" y="85" width="0.8" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1122.54" y="95.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).update (3 samples, 0.02%)</title><rect x="841.8" y="69" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="844.77" y="79.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (10 samples, 0.07%)</title><rect x="1110.8" y="197" width="0.8" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1113.80" y="207.5" ></text>
</g>
<g >
<title>main.ReadFile.func1 (6 samples, 0.04%)</title><rect x="932.3" y="229" width="0.5" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="935.31" y="239.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (2 samples, 0.01%)</title><rect x="1039.4" y="133" width="0.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1042.37" y="143.5" ></text>
</g>
<g >
<title>runtime.mcall (608 samples, 4.17%)</title><rect x="988.8" y="229" width="49.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="991.84" y="239.5" >runt..</text>
</g>
<g >
<title>runtime.(*pageAlloc).scavenge (3 samples, 0.02%)</title><rect x="932.8" y="181" width="0.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="935.80" y="191.5" ></text>
</g>
<g >
<title>runtime.systemstack (617 samples, 4.23%)</title><rect x="937.7" y="213" width="49.9" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="940.66" y="223.5" >runti..</text>
</g>
<g >
<title>runtime.(*gcWork).put (5 samples, 0.03%)</title><rect x="976.9" y="133" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="979.85" y="143.5" ></text>
</g>
<g >
<title>runtime.semawakeup (4 samples, 0.03%)</title><rect x="1084.7" y="165" width="0.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1087.72" y="175.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).tryGetFast (2 samples, 0.01%)</title><rect x="938.0" y="181" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="940.98" y="191.5" ></text>
</g>
<g >
<title>runtime.preemptM (4 samples, 0.03%)</title><rect x="1124.2" y="85" width="0.4" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="1127.24" y="95.5" ></text>
</g>
<g >
<title>runtime.wakep (2 samples, 0.01%)</title><rect x="1037.9" y="165" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1040.91" y="175.5" ></text>
</g>
<g >
<title>runtime.(*pallocBits).find (5 samples, 0.03%)</title><rect x="843.6" y="69" width="0.4" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="846.64" y="79.5" ></text>
</g>
<g >
<title>runtime.stdcall0 (42 samples, 0.29%)</title><rect x="1143.3" y="85" width="3.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1146.27" y="95.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep.(*mheap).freeSpan.func4 (10 samples, 0.07%)</title><rect x="1110.8" y="213" width="0.8" height="15.0" fill="rgb(208,13,3)" rx="2" ry="2" />
<text  x="1113.80" y="223.5" ></text>
</g>
<g >
<title>runtime.notewakeup (2 samples, 0.01%)</title><rect x="1037.9" y="133" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1040.91" y="143.5" ></text>
</g>
<g >
<title>runtime.stdcall2 (3 samples, 0.02%)</title><rect x="1177.9" y="117" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1180.85" y="127.5" ></text>
</g>
<g >
<title>runtime.preemptM (116 samples, 0.80%)</title><rect x="1146.7" y="133" width="9.4" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="1149.67" y="143.5" ></text>
</g>
<g >
<title>bytes.IndexByte (371 samples, 2.55%)</title><rect x="711.9" y="197" width="30.0" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="714.88" y="207.5" >by..</text>
</g>
<g >
<title>runtime.(*mheap).reclaim (3 samples, 0.02%)</title><rect x="1085.7" y="197" width="0.2" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="1088.69" y="207.5" ></text>
</g>
<g >
<title>runtime.chanrecv2 (7 samples, 0.05%)</title><rect x="492.7" y="213" width="0.5" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="495.66" y="223.5" ></text>
</g>
<g >
<title>brc/pkg.Hash (147 samples, 1.01%)</title><rect x="657.5" y="213" width="11.9" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="660.54" y="223.5" ></text>
</g>
<g >
<title>runtime.semasleep (2 samples, 0.01%)</title><rect x="1108.7" y="165" width="0.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1111.69" y="175.5" ></text>
</g>
<g >
<title>runtime.mapassign_fast32 (3 samples, 0.02%)</title><rect x="595.7" y="213" width="0.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="598.75" y="223.5" ></text>
</g>
<g >
<title>runtime.(*scavengerState).init.func2 (3 samples, 0.02%)</title><rect x="932.8" y="197" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="935.80" y="207.5" ></text>
</g>
<g >
<title>runtime.resettimer (6 samples, 0.04%)</title><rect x="933.4" y="213" width="0.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="936.37" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mspan).base (44 samples, 0.30%)</title><rect x="961.1" y="149" width="3.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="964.06" y="159.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).push (7 samples, 0.05%)</title><rect x="846.1" y="165" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="849.15" y="175.5" ></text>
</g>
<g >
<title>runtime.systemstack (87 samples, 0.60%)</title><rect x="839.1" y="149" width="7.0" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="842.10" y="159.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).enlistWorker (14 samples, 0.10%)</title><rect x="939.6" y="149" width="1.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="942.60" y="159.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).scavenge.func1 (2 samples, 0.01%)</title><rect x="932.9" y="149" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="935.88" y="159.5" ></text>
</g>
<g >
<title>runtime.stdcall7 (3 samples, 0.02%)</title><rect x="1188.8" y="133" width="0.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1191.79" y="143.5" ></text>
</g>
<g >
<title>runtime.procyield (3 samples, 0.02%)</title><rect x="990.9" y="133" width="0.2" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="993.86" y="143.5" ></text>
</g>
<g >
<title>runtime.gcDrain (14 samples, 0.10%)</title><rect x="1177.2" y="197" width="1.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1180.20" y="207.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination.forEachP.func6 (11 samples, 0.08%)</title><rect x="1185.1" y="213" width="0.9" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1188.06" y="223.5" ></text>
</g>
<g >
<title>runtime.spanOf (36 samples, 0.25%)</title><rect x="978.6" y="149" width="2.9" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="981.55" y="159.5" ></text>
</g>
<g >
<title>runtime.preemptM (3 samples, 0.02%)</title><rect x="1177.9" y="133" width="0.2" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="1180.85" y="143.5" ></text>
</g>
<g >
<title>runtime.lock2.osyield.func1 (2 samples, 0.01%)</title><rect x="1179.3" y="117" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1182.31" y="127.5" ></text>
</g>
<g >
<title>runtime.preemptone (3 samples, 0.02%)</title><rect x="976.9" y="101" width="0.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="979.85" y="111.5" ></text>
</g>
<g >
<title>runtime.preemptM (57 samples, 0.39%)</title><rect x="1179.5" y="149" width="4.6" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="1182.47" y="159.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (4 samples, 0.03%)</title><rect x="987.6" y="229" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="990.62" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mspan).heapBitsSmallForAddr (16 samples, 0.11%)</title><rect x="852.7" y="53" width="1.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="855.71" y="63.5" ></text>
</g>
<g >
<title>runtime.lock2.osyield.func1 (42 samples, 0.29%)</title><rect x="1143.3" y="101" width="3.4" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1146.27" y="111.5" ></text>
</g>
<g >
<title>runtime.greyobject (23 samples, 0.16%)</title><rect x="1122.7" y="149" width="1.9" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1125.70" y="159.5" ></text>
</g>
<g >
<title>runtime.semawakeup (3 samples, 0.02%)</title><rect x="990.5" y="133" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="993.46" y="143.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (274 samples, 1.88%)</title><rect x="990.9" y="165" width="22.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="993.86" y="175.5" >r..</text>
</g>
<g >
<title>runtime.sysUsedOS (40 samples, 0.27%)</title><rect x="1105.4" y="181" width="3.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1108.37" y="191.5" ></text>
</g>
<g >
<title>main.PrintOutput (3 samples, 0.02%)</title><rect x="988.4" y="197" width="0.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="991.43" y="207.5" ></text>
</g>
<g >
<title>runtime.stdcall2 (251 samples, 1.72%)</title><rect x="991.1" y="117" width="20.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="994.11" y="127.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (3 samples, 0.02%)</title><rect x="1189.4" y="181" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1192.35" y="191.5" ></text>
</g>
<g >
<title>runtime.lock2.osyield.func1 (5 samples, 0.03%)</title><rect x="1123.8" y="53" width="0.4" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1126.84" y="63.5" ></text>
</g>
<g >
<title>runtime.cheaprand (2 samples, 0.01%)</title><rect x="1042.6" y="165" width="0.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1045.61" y="175.5" ></text>
</g>
<g >
<title>runtime.lock2 (502 samples, 3.45%)</title><rect x="1042.4" y="181" width="40.6" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1045.37" y="191.5" >run..</text>
</g>
<g >
<title>runtime.(*mheap).freeSpan (11 samples, 0.08%)</title><rect x="934.6" y="197" width="0.9" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="937.58" y="207.5" ></text>
</g>
<g >
<title>runtime.park_m (593 samples, 4.07%)</title><rect x="990.1" y="213" width="48.0" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="993.05" y="223.5" >runt..</text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (117 samples, 0.80%)</title><rect x="847.4" y="117" width="9.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="850.44" y="127.5" ></text>
</g>
<g >
<title>runtime/pprof.(*profMap).lookup (2 samples, 0.01%)</title><rect x="1189.8" y="197" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1192.76" y="207.5" ></text>
</g>
<g >
<title>runtime.(*gcCPULimiterState).updateLocked (3 samples, 0.02%)</title><rect x="1038.5" y="117" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1041.48" y="127.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (3 samples, 0.02%)</title><rect x="837.6" y="197" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="840.56" y="207.5" ></text>
</g>
<g >
<title>runtime.arenaIndex (4 samples, 0.03%)</title><rect x="903.2" y="197" width="0.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="906.16" y="207.5" ></text>
</g>
<g >
<title>runtime.addb (2 samples, 0.01%)</title><rect x="854.0" y="53" width="0.2" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="857.00" y="63.5" ></text>
</g>
<g >
<title>runtime.lock2 (2 samples, 0.01%)</title><rect x="1185.1" y="133" width="0.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1188.06" y="143.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush (9 samples, 0.06%)</title><rect x="986.8" y="165" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="989.81" y="175.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker.func2 (4 samples, 0.03%)</title><rect x="937.7" y="197" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="940.66" y="207.5" ></text>
</g>
<g >
<title>runtime.stdcall1 (2 samples, 0.01%)</title><rect x="1124.2" y="69" width="0.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1127.24" y="79.5" ></text>
</g>
<g >
<title>runtime.heapSetType (2 samples, 0.01%)</title><rect x="857.2" y="181" width="0.2" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="860.24" y="191.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).update (6 samples, 0.04%)</title><rect x="838.6" y="165" width="0.5" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="841.62" y="175.5" ></text>
</g>
<g >
<title>runtime.scanobject (541 samples, 3.71%)</title><rect x="941.7" y="165" width="43.8" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="944.71" y="175.5" >runt..</text>
</g>
<g >
<title>runtime.lock2 (7 samples, 0.05%)</title><rect x="1177.2" y="117" width="0.6" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1180.20" y="127.5" ></text>
</g>
<g >
<title>runtime.(*mheap).reclaimChunk (2 samples, 0.01%)</title><rect x="1085.7" y="181" width="0.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1088.69" y="191.5" ></text>
</g>
<g >
<title>runtime.stdcall1 (7 samples, 0.05%)</title><rect x="1164.6" y="117" width="0.5" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1167.57" y="127.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (19 samples, 0.13%)</title><rect x="1122.7" y="85" width="1.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1125.70" y="95.5" ></text>
</g>
<g >
<title>runtime.(*mspan).init (9 samples, 0.06%)</title><rect x="841.0" y="85" width="0.7" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="843.96" y="95.5" ></text>
</g>
<g >
<title>runtime.lock2.osyield.func1 (8 samples, 0.05%)</title><rect x="1111.0" y="165" width="0.6" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1113.96" y="175.5" ></text>
</g>
<g >
<title>runtime.semasleep (411 samples, 2.82%)</title><rect x="1049.7" y="165" width="33.3" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1052.74" y="175.5" >ru..</text>
</g>
<g >
<title>indexbytebody (417 samples, 2.86%)</title><rect x="748.8" y="197" width="33.8" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="751.81" y="207.5" >in..</text>
</g>
<g >
<title>runtime.stopTheWorldWithSema (12 samples, 0.08%)</title><rect x="1184.1" y="197" width="1.0" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1187.09" y="207.5" ></text>
</g>
<g >
<title>runtime.semasleep (2 samples, 0.01%)</title><rect x="1189.2" y="149" width="0.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1192.19" y="159.5" ></text>
</g>
<g >
<title>runtime.typePointers.next (75 samples, 0.51%)</title><rect x="922.0" y="181" width="6.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="925.03" y="191.5" ></text>
</g>
<g >
<title>runtime.notewakeup (11 samples, 0.08%)</title><rect x="1041.5" y="149" width="0.9" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1044.48" y="159.5" ></text>
</g>
<g >
<title>runtime.stdcall2 (2 samples, 0.01%)</title><rect x="1110.8" y="149" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1113.80" y="159.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).put (3 samples, 0.02%)</title><rect x="1178.1" y="149" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1181.10" y="159.5" ></text>
</g>
<g >
<title>runtime.gopreempt_m (3 samples, 0.02%)</title><rect x="589.6" y="197" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="592.59" y="207.5" ></text>
</g>
<g >
<title>runtime.preemptone (12 samples, 0.08%)</title><rect x="1184.1" y="165" width="1.0" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1187.09" y="175.5" ></text>
</g>
<g >
<title>runtime.osyield (9 samples, 0.06%)</title><rect x="1119.5" y="101" width="0.8" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1122.54" y="111.5" ></text>
</g>
<g >
<title>runtime.growWork_fast32 (2 samples, 0.01%)</title><rect x="595.7" y="197" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="598.75" y="207.5" ></text>
</g>
<g >
<title>runtime.stdcall0 (8 samples, 0.05%)</title><rect x="1111.0" y="149" width="0.6" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1113.96" y="159.5" ></text>
</g>
<g >
<title>runtime.semasleep (6 samples, 0.04%)</title><rect x="933.4" y="133" width="0.5" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="936.37" y="143.5" ></text>
</g>
<g >
<title>indexbytebody (871 samples, 5.98%)</title><rect x="401.1" y="213" width="70.6" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="404.15" y="223.5" >indexby..</text>
</g>
<g >
<title>runtime.stdcall2 (24 samples, 0.16%)</title><rect x="1186.8" y="133" width="2.0" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1189.84" y="143.5" ></text>
</g>
<g >
<title>runtime.semasleep (98 samples, 0.67%)</title><rect x="1111.6" y="85" width="7.9" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1114.61" y="95.5" ></text>
</g>
<g >
<title>runtime.runOneTimer (2 samples, 0.01%)</title><rect x="1039.1" y="117" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1042.13" y="127.5" ></text>
</g>
<g >
<title>runtime.stdcall1 (3 samples, 0.02%)</title><rect x="1184.2" y="133" width="0.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1187.17" y="143.5" ></text>
</g>
<g >
<title>runtime.lock2.osyield.func1 (3 samples, 0.02%)</title><rect x="1108.9" y="165" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1111.86" y="175.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_fast32 (1,266 samples, 8.69%)</title><rect x="493.2" y="213" width="102.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="496.22" y="223.5" >runtime.mapa..</text>
</g>
<g >
<title>runtime.spanClass.noscan (3 samples, 0.02%)</title><rect x="928.7" y="197" width="0.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="931.67" y="207.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).enlistWorker (3 samples, 0.02%)</title><rect x="1178.1" y="133" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1181.10" y="143.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (3 samples, 0.02%)</title><rect x="1085.5" y="165" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1088.45" y="175.5" ></text>
</g>
<g >
<title>runtime.semawakeup (2 samples, 0.01%)</title><rect x="1037.9" y="117" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1040.91" y="127.5" ></text>
</g>
<g >
<title>runtime.bucketMask (20 samples, 0.14%)</title><rect x="490.9" y="213" width="1.6" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="493.88" y="223.5" ></text>
</g>
<g >
<title>runtime.semawakeup (2 samples, 0.01%)</title><rect x="1122.5" y="85" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1125.46" y="95.5" ></text>
</g>
<g >
<title>runtime.semasleep (2 samples, 0.01%)</title><rect x="1085.7" y="101" width="0.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1088.69" y="111.5" ></text>
</g>
<g >
<title>runtime.findObject (4 samples, 0.03%)</title><rect x="1039.9" y="101" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1042.86" y="111.5" ></text>
</g>
<g >
<title>runtime.(*fixalloc).alloc (7 samples, 0.05%)</title><rect x="840.0" y="85" width="0.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="842.99" y="95.5" ></text>
</g>
<g >
<title>runtime.limiterEventStamp.typ (3 samples, 0.02%)</title><rect x="1038.5" y="101" width="0.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1041.48" y="111.5" ></text>
</g>
<g >
<title>runtime.systemstack (10 samples, 0.07%)</title><rect x="934.7" y="181" width="0.8" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="937.66" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mspan).base (11 samples, 0.08%)</title><rect x="851.8" y="69" width="0.9" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="854.82" y="79.5" ></text>
</g>
<g >
<title>runtime.chanrecv (5 samples, 0.03%)</title><rect x="492.7" y="197" width="0.4" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="495.66" y="207.5" ></text>
</g>
<g >
<title>runtime.preemptall (2 samples, 0.01%)</title><rect x="856.9" y="117" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="859.92" y="127.5" ></text>
</g>
<g >
<title>runtime.runqsteal (263 samples, 1.80%)</title><rect x="1013.2" y="149" width="21.3" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1016.21" y="159.5" >r..</text>
</g>
<g >
<title>runtime.stdcall2 (2 samples, 0.01%)</title><rect x="1185.1" y="101" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1188.06" y="111.5" ></text>
</g>
<g >
<title>runtime.getMCache (2 samples, 0.01%)</title><rect x="837.8" y="197" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="840.81" y="207.5" ></text>
</g>
<g >
<title>runtime.lock2 (254 samples, 1.74%)</title><rect x="990.9" y="149" width="20.5" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="993.86" y="159.5" ></text>
</g>
<g >
<title>runtime.stdcall2 (2 samples, 0.01%)</title><rect x="1178.2" y="85" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1181.18" y="95.5" ></text>
</g>
<g >
<title>runtime.notewakeup (3 samples, 0.02%)</title><rect x="990.5" y="149" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="993.46" y="159.5" ></text>
</g>
<g >
<title>runtime.stdcall2 (88 samples, 0.60%)</title><rect x="1148.1" y="117" width="7.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1151.05" y="127.5" ></text>
</g>
<g >
<title>runtime.lock2 (2 samples, 0.01%)</title><rect x="1186.0" y="133" width="0.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1188.95" y="143.5" ></text>
</g>
<g >
<title>runtime.preemptone (126 samples, 0.86%)</title><rect x="1167.0" y="117" width="10.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1170.00" y="127.5" ></text>
</g>
<g >
<title>runtime.stdcall1 (3 samples, 0.02%)</title><rect x="1040.9" y="101" width="0.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1043.91" y="111.5" ></text>
</g>
<g >
<title>runtime.preemptone (11 samples, 0.08%)</title><rect x="1177.2" y="149" width="0.9" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1180.20" y="159.5" ></text>
</g>
<g >
<title>runtime.preemptM (2 samples, 0.01%)</title><rect x="1178.2" y="101" width="0.1" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="1181.18" y="111.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).put (126 samples, 0.86%)</title><rect x="1167.0" y="149" width="10.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1170.00" y="159.5" ></text>
</g>
<g >
<title>runtime.osyield (8 samples, 0.05%)</title><rect x="1040.2" y="117" width="0.6" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1043.18" y="127.5" ></text>
</g>
<g >
<title>runtime.stdcall2 (3 samples, 0.02%)</title><rect x="1189.4" y="133" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1192.35" y="143.5" ></text>
</g>
<g >
<title>runtime.osyield (20 samples, 0.14%)</title><rect x="1011.4" y="149" width="1.7" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1014.43" y="159.5" ></text>
</g>
<g >
<title>runtime.runSafePointFn (4 samples, 0.03%)</title><rect x="1039.9" y="149" width="0.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1042.86" y="159.5" ></text>
</g>
<g >
<title>runtime.stdcall1 (4 samples, 0.03%)</title><rect x="1084.7" y="149" width="0.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1087.72" y="159.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (107 samples, 0.73%)</title><rect x="1111.6" y="117" width="8.7" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1114.61" y="127.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (92 samples, 0.63%)</title><rect x="1167.0" y="101" width="7.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1170.00" y="111.5" ></text>
</g>
<g >
<title>runtime.lock2 (2 samples, 0.01%)</title><rect x="1110.8" y="181" width="0.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1113.80" y="191.5" ></text>
</g>
<g >
<title>runtime.puintptr.ptr (5 samples, 0.03%)</title><rect x="928.1" y="197" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="931.10" y="207.5" ></text>
</g>
<g >
<title>runtime.lock2 (5 samples, 0.03%)</title><rect x="935.1" y="133" width="0.4" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="938.07" y="143.5" ></text>
</g>
<g >
<title>runtime.evacuate_fast32 (2 samples, 0.01%)</title><rect x="595.7" y="181" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="598.75" y="191.5" ></text>
</g>
<g >
<title>runtime.findRunnable (549 samples, 3.77%)</title><rect x="990.2" y="181" width="44.5" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="993.22" y="191.5" >runt..</text>
</g>
<g >
<title>runtime.sweepone (31 samples, 0.21%)</title><rect x="933.9" y="213" width="2.5" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="936.93" y="223.5" ></text>
</g>
<g >
<title>runtime.sysUnused (21 samples, 0.14%)</title><rect x="1109.1" y="197" width="1.7" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1112.10" y="207.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.01%)</title><rect x="596.0" y="197" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="598.99" y="207.5" ></text>
</g>
<g >
<title>runtime.stdcall7 (11 samples, 0.08%)</title><rect x="1155.2" y="117" width="0.9" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1158.18" y="127.5" ></text>
</g>
<g >
<title>runtime.lock2 (12 samples, 0.08%)</title><rect x="1178.3" y="133" width="1.0" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1181.34" y="143.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).find (16 samples, 0.11%)</title><rect x="842.7" y="85" width="1.3" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="845.75" y="95.5" ></text>
</g>
<g >
<title>runtime.stdcall2 (22 samples, 0.15%)</title><rect x="1165.1" y="117" width="1.8" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1168.14" y="127.5" ></text>
</g>
<g >
<title>runtime.chansend (5 samples, 0.03%)</title><rect x="837.2" y="197" width="0.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="840.16" y="207.5" ></text>
</g>
<g >
<title>runtime.(*scavengerState).run (4 samples, 0.03%)</title><rect x="932.8" y="213" width="0.3" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="935.80" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (287 samples, 1.97%)</title><rect x="1085.5" y="213" width="23.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1088.45" y="223.5" >r..</text>
</g>
<g >
<title>runtime.stdcall2 (6 samples, 0.04%)</title><rect x="933.4" y="117" width="0.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="936.37" y="127.5" ></text>
</g>
<g >
<title>runtime.spanOfUnchecked (4 samples, 0.03%)</title><rect x="985.5" y="165" width="0.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="988.52" y="175.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).putFast (6 samples, 0.04%)</title><rect x="960.6" y="149" width="0.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="963.58" y="159.5" ></text>
</g>
<g >
<title>runtime.preemptM (29 samples, 0.20%)</title><rect x="1164.6" y="133" width="2.3" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="1167.57" y="143.5" ></text>
</g>
<g >
<title>runtime.stdcall7 (2 samples, 0.01%)</title><rect x="1183.9" y="133" width="0.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1186.93" y="143.5" ></text>
</g>
<g >
<title>runtime.stdcall2 (14 samples, 0.10%)</title><rect x="1122.7" y="37" width="1.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1125.70" y="47.5" ></text>
</g>
<g >
<title>brc/pkg.ParseIndec (352 samples, 2.42%)</title><rect x="683.4" y="197" width="28.5" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="686.37" y="207.5" >br..</text>
</g>
<g >
<title>runtime.(*gcControllerState).enlistWorker (395 samples, 2.71%)</title><rect x="1124.6" y="165" width="32.0" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1127.57" y="175.5" >ru..</text>
</g>
<g >
<title>runtime.osyield (163 samples, 1.12%)</title><rect x="1092.2" y="181" width="13.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1095.17" y="191.5" ></text>
</g>
<g >
<title>runtime.spanOf (9 samples, 0.06%)</title><rect x="855.3" y="69" width="0.7" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="858.30" y="79.5" ></text>
</g>
<g >
<title>runtime.(*gcBitsArena).tryAlloc (2 samples, 0.01%)</title><rect x="844.4" y="85" width="0.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="847.45" y="95.5" ></text>
</g>
<g >
<title>runtime/pprof.profileWriter (3 samples, 0.02%)</title><rect x="1189.8" y="229" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1192.76" y="239.5" ></text>
</g>
<g >
<title>runtime.stdcall1 (11 samples, 0.08%)</title><rect x="1041.5" y="117" width="0.9" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1044.48" y="127.5" ></text>
</g>
<g >
<title>internal/bytealg.IndexByte (45 samples, 0.31%)</title><rect x="782.6" y="197" width="3.6" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="785.58" y="207.5" ></text>
</g>
<g >
<title>runtime.preemptM (35 samples, 0.24%)</title><rect x="1186.2" y="149" width="2.8" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="1189.19" y="159.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker (626 samples, 4.30%)</title><rect x="936.9" y="229" width="50.7" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="939.93" y="239.5" >runti..</text>
</g>
<g >
<title>runtime.findObject (3 samples, 0.02%)</title><rect x="987.2" y="117" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="990.22" y="127.5" ></text>
</g>
<g >
<title>runtime.schedule (39 samples, 0.27%)</title><rect x="1038.2" y="181" width="3.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1041.16" y="191.5" ></text>
</g>
<g >
<title>runtime.unlock2 (2 samples, 0.01%)</title><rect x="1039.4" y="117" width="0.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1042.37" y="127.5" ></text>
</g>
<g >
<title>runtime.lock2 (231 samples, 1.59%)</title><rect x="1124.6" y="117" width="18.7" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1127.57" y="127.5" ></text>
</g>
<g >
<title>runtime.arenaIndex (4 samples, 0.03%)</title><rect x="941.2" y="165" width="0.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="944.22" y="175.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).enlistWorker (3 samples, 0.02%)</title><rect x="976.9" y="117" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="979.85" y="127.5" ></text>
</g>
<g >
<title>runtime.bulkBarrierPreWrite (304 samples, 2.09%)</title><rect x="903.5" y="197" width="24.6" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="906.48" y="207.5" >r..</text>
</g>
<g >
<title>runtime.unlock2 (6 samples, 0.04%)</title><rect x="1156.1" y="117" width="0.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1159.07" y="127.5" ></text>
</g>
<g >
<title>runtime.sweepone (3 samples, 0.02%)</title><rect x="846.8" y="149" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="849.80" y="159.5" ></text>
</g>
<g >
<title>runtime.unlock2 (5 samples, 0.03%)</title><rect x="1084.6" y="181" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1087.64" y="191.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (8 samples, 0.05%)</title><rect x="986.9" y="133" width="0.6" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="989.90" y="143.5" ></text>
</g>
<g >
<title>runtime.systemstack (151 samples, 1.04%)</title><rect x="890.9" y="165" width="12.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="893.93" y="175.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (309 samples, 2.12%)</title><rect x="857.4" y="181" width="25.0" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="860.40" y="191.5" >r..</text>
</g>
<g >
<title>runtime.forEachPInternal (71 samples, 0.49%)</title><rect x="1178.3" y="197" width="5.8" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1181.34" y="207.5" ></text>
</g>
<g >
<title>runtime.gcstopm (6 samples, 0.04%)</title><rect x="990.4" y="165" width="0.5" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="993.38" y="175.5" ></text>
</g>
<g >
<title>runtime.stdcall2 (26 samples, 0.18%)</title><rect x="1174.9" y="85" width="2.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1177.86" y="95.5" ></text>
</g>
<g >
<title>runtime.stdcall0 (263 samples, 1.80%)</title><rect x="1013.2" y="101" width="21.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1016.21" y="111.5" >r..</text>
</g>
<g >
<title>runtime.typePointers.nextFast (12 samples, 0.08%)</title><rect x="985.8" y="165" width="1.0" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="988.84" y="175.5" ></text>
</g>
<g >
<title>runtime.gopreempt_m (579 samples, 3.97%)</title><rect x="1038.2" y="213" width="46.8" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1041.16" y="223.5" >runt..</text>
</g>
<g >
<title>runtime.(*gcControllerState).enlistWorker (23 samples, 0.16%)</title><rect x="1122.7" y="117" width="1.9" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1125.70" y="127.5" ></text>
</g>
<g >
<title>runtime.(*mSpanStateBox).get (9 samples, 0.06%)</title><rect x="885.7" y="197" width="0.7" height="15.0" fill="rgb(236,147,35)" rx="2" ry="2" />
<text  x="888.67" y="207.5" ></text>
</g>
<g >
<title>runtime.stealWork (265 samples, 1.82%)</title><rect x="1013.1" y="165" width="21.5" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1016.13" y="175.5" >r..</text>
</g>
<g >
<title>runtime.lock2 (80 samples, 0.55%)</title><rect x="1167.0" y="85" width="6.5" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1170.00" y="95.5" ></text>
</g>
<g >
<title>runtime.markroot (129 samples, 0.89%)</title><rect x="1156.6" y="181" width="10.4" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1159.55" y="191.5" ></text>
</g>
<g >
<title>brc/pkg.(*CityData).MergeValue (4,763 samples, 32.69%)</title><rect x="10.0" y="229" width="385.7" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="13.00" y="239.5" >brc/pkg.(*CityData).MergeValue</text>
</g>
<g >
<title>runtime.lockWithRank (31 samples, 0.21%)</title><rect x="1035.4" y="165" width="2.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1038.40" y="175.5" ></text>
</g>
<g >
<title>runtime.stdcall2 (411 samples, 2.82%)</title><rect x="1049.7" y="149" width="33.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1052.74" y="159.5" >ru..</text>
</g>
<g >
<title>runtime.spanOf (35 samples, 0.24%)</title><rect x="900.3" y="117" width="2.9" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="903.32" y="127.5" ></text>
</g>
<g >
<title>runtime.osyield (8 samples, 0.05%)</title><rect x="1111.0" y="181" width="0.6" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1113.96" y="191.5" ></text>
</g>
<g >
<title>runtime.(*pallocBits).findSmallN (4 samples, 0.03%)</title><rect x="843.6" y="53" width="0.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="846.64" y="63.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).enlistWorker (126 samples, 0.86%)</title><rect x="1167.0" y="133" width="10.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1170.00" y="143.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.01%)</title><rect x="932.9" y="165" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="935.88" y="175.5" ></text>
</g>
<g >
<title>runtime.stdcall2 (2 samples, 0.01%)</title><rect x="1124.4" y="69" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1127.40" y="79.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (99 samples, 0.68%)</title><rect x="1156.6" y="133" width="8.0" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1159.55" y="143.5" ></text>
</g>
<g >
<title>runtime.modtimer (6 samples, 0.04%)</title><rect x="933.4" y="197" width="0.5" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="936.37" y="207.5" ></text>
</g>
<g >
<title>runtime.add (51 samples, 0.35%)</title><rect x="486.7" y="213" width="4.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="489.75" y="223.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).push (2 samples, 0.01%)</title><rect x="936.2" y="181" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="939.20" y="191.5" ></text>
</g>
<g >
<title>runtime.preemptone (11 samples, 0.08%)</title><rect x="1185.1" y="165" width="0.9" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1188.06" y="175.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (8 samples, 0.05%)</title><rect x="939.9" y="117" width="0.7" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="942.93" y="127.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).empty (2 samples, 0.01%)</title><rect x="1038.7" y="149" width="0.2" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1041.72" y="159.5" ></text>
</g>
<g >
<title>runtime.semasleep (3 samples, 0.02%)</title><rect x="1189.4" y="149" width="0.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1192.35" y="159.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (116 samples, 0.80%)</title><rect x="847.5" y="101" width="9.4" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="850.52" y="111.5" ></text>
</g>
<g >
<title>runtime.preemptall (38 samples, 0.26%)</title><rect x="1186.0" y="181" width="3.0" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1188.95" y="191.5" ></text>
</g>
<g >
<title>runtime.lock2 (98 samples, 0.67%)</title><rect x="1111.6" y="101" width="7.9" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1114.61" y="111.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (13 samples, 0.09%)</title><rect x="844.8" y="117" width="1.0" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="847.77" y="127.5" ></text>
</g>
<g >
<title>runtime.lock2 (4 samples, 0.03%)</title><rect x="987.6" y="213" width="0.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="990.62" y="223.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).balance (11 samples, 0.08%)</title><rect x="1177.2" y="181" width="0.9" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1180.20" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (3 samples, 0.02%)</title><rect x="1085.5" y="197" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1088.45" y="207.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (2 samples, 0.01%)</title><rect x="1085.7" y="133" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1088.69" y="143.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).balance (136 samples, 0.93%)</title><rect x="1111.6" y="165" width="11.0" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1114.61" y="175.5" ></text>
</g>
<g >
<title>runtime.stdcall2 (12 samples, 0.08%)</title><rect x="1178.3" y="101" width="1.0" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1181.34" y="111.5" ></text>
</g>
<g >
<title>runtime.makeslice (551 samples, 3.78%)</title><rect x="837.8" y="213" width="44.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="840.81" y="223.5" >runt..</text>
</g>
<g >
<title>runtime.stdcall2 (96 samples, 0.66%)</title><rect x="1156.6" y="85" width="7.7" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1159.55" y="95.5" ></text>
</g>
<g >
<title>runtime.gopreempt_m (14 samples, 0.10%)</title><rect x="988.9" y="213" width="1.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="991.92" y="223.5" ></text>
</g>
<g >
<title>runtime.sysUnusedOS (21 samples, 0.14%)</title><rect x="1109.1" y="181" width="1.7" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1112.10" y="191.5" ></text>
</g>
<g >
<title>runtime.procyield (85 samples, 0.58%)</title><rect x="1042.9" y="165" width="6.8" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="1045.85" y="175.5" ></text>
</g>
<g >
<title>runtime.gcDrain (610 samples, 4.19%)</title><rect x="938.1" y="181" width="49.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="941.14" y="191.5" >runt..</text>
</g>
<g >
<title>runtime.osyield (42 samples, 0.29%)</title><rect x="1143.3" y="117" width="3.4" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1146.27" y="127.5" ></text>
</g>
<g >
<title>runtime.procyield (11 samples, 0.08%)</title><rect x="844.9" y="85" width="0.9" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="847.93" y="95.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).enlistWorker (11 samples, 0.08%)</title><rect x="1177.2" y="165" width="0.9" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1180.20" y="175.5" ></text>
</g>
<g >
<title>runtime.newobject (2 samples, 0.01%)</title><rect x="596.0" y="213" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="598.99" y="223.5" ></text>
</g>
<g >
<title>runtime.stdcall2 (8 samples, 0.05%)</title><rect x="1034.8" y="133" width="0.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1037.76" y="143.5" ></text>
</g>
<g >
<title>runtime.stdcall1 (2 samples, 0.01%)</title><rect x="1122.5" y="69" width="0.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1125.46" y="79.5" ></text>
</g>
<g >
<title>runtime.scanobject (105 samples, 0.72%)</title><rect x="847.9" y="85" width="8.5" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="850.93" y="95.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (2 samples, 0.01%)</title><rect x="936.4" y="213" width="0.2" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="939.44" y="223.5" ></text>
</g>
<g >
<title>runtime.pageIndexOf (7 samples, 0.05%)</title><rect x="977.5" y="149" width="0.6" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="980.50" y="159.5" ></text>
</g>
<g >
<title>internal/bytealg.IndexByte (62 samples, 0.43%)</title><rect x="471.7" y="213" width="5.0" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="474.68" y="223.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (160 samples, 1.10%)</title><rect x="1111.6" y="181" width="13.0" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1114.61" y="191.5" ></text>
</g>
<g >
<title>runtime.lock2 (3 samples, 0.02%)</title><rect x="1189.4" y="165" width="0.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1192.35" y="175.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (2 samples, 0.01%)</title><rect x="1189.2" y="181" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1192.19" y="191.5" ></text>
</g>
<g >
<title>runtime.unlock2 (3 samples, 0.02%)</title><rect x="1040.9" y="133" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1043.91" y="143.5" ></text>
</g>
<g >
<title>runtime.mallocgc (549 samples, 3.77%)</title><rect x="838.0" y="197" width="44.4" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="840.97" y="207.5" >runt..</text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (160 samples, 1.10%)</title><rect x="1111.6" y="213" width="13.0" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1114.61" y="223.5" ></text>
</g>
<g >
<title>runtime.goschedImpl (52 samples, 0.36%)</title><rect x="1038.2" y="197" width="4.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1041.16" y="207.5" ></text>
</g>
<g >
<title>runtime.gcDrainMarkWorkerDedicated (650 samples, 4.46%)</title><rect x="1124.6" y="213" width="52.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1127.57" y="223.5" >runti..</text>
</g>
<g >
<title>runtime.lock2 (13 samples, 0.09%)</title><rect x="844.8" y="101" width="1.0" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="847.77" y="111.5" ></text>
</g>
<g >
<title>runtime.semasleep (13 samples, 0.09%)</title><rect x="989.0" y="165" width="1.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="992.00" y="175.5" ></text>
</g>
<g >
<title>runtime.preemptone (136 samples, 0.93%)</title><rect x="1111.6" y="133" width="11.0" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1114.61" y="143.5" ></text>
</g>
<g >
<title>runtime.resetspinning (33 samples, 0.23%)</title><rect x="1035.4" y="181" width="2.7" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1038.40" y="191.5" ></text>
</g>
<g >
<title>runtime.stdcall1 (3 samples, 0.02%)</title><rect x="990.5" y="117" width="0.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="993.46" y="127.5" ></text>
</g>
<g >
<title>runtime.lock2 (4 samples, 0.03%)</title><rect x="1039.5" y="133" width="0.4" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1042.53" y="143.5" ></text>
</g>
<g >
<title>runtime.lock2 (2 samples, 0.01%)</title><rect x="1085.7" y="117" width="0.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1088.69" y="127.5" ></text>
</g>
<g >
<title>runtime.gcStart (3 samples, 0.02%)</title><rect x="856.9" y="181" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="859.92" y="191.5" ></text>
</g>
<g >
<title>runtime.gopark (2 samples, 0.01%)</title><rect x="933.2" y="197" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="936.20" y="207.5" ></text>
</g>
<g >
<title>runtime.stdcall2 (98 samples, 0.67%)</title><rect x="1111.6" y="69" width="7.9" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1114.61" y="79.5" ></text>
</g>
<g >
<title>runtime.bgsweep (38 samples, 0.26%)</title><rect x="933.9" y="229" width="3.0" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="936.85" y="239.5" ></text>
</g>
<g >
<title>runtime.stdcall2 (2 samples, 0.01%)</title><rect x="1186.0" y="101" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1188.95" y="111.5" ></text>
</g>
<g >
<title>runtime.lock2.osyield.func1 (20 samples, 0.14%)</title><rect x="1083.0" y="165" width="1.6" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1086.02" y="175.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (3 samples, 0.02%)</title><rect x="1186.0" y="149" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1188.95" y="159.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep.(*mheap).freeSpan.func4 (2 samples, 0.01%)</title><rect x="1085.7" y="149" width="0.2" height="15.0" fill="rgb(208,13,3)" rx="2" ry="2" />
<text  x="1088.69" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpan (2 samples, 0.01%)</title><rect x="1085.7" y="165" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1088.69" y="175.5" ></text>
</g>
<g >
<title>runtime.unlock2 (2 samples, 0.01%)</title><rect x="493.1" y="181" width="0.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="496.06" y="191.5" ></text>
</g>
<g >
<title>runtime.procyield (3 samples, 0.02%)</title><rect x="1039.5" y="117" width="0.3" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="1042.53" y="127.5" ></text>
</g>
<g >
<title>runtime.goschedImpl (3 samples, 0.02%)</title><rect x="589.6" y="181" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="592.59" y="191.5" ></text>
</g>
<g >
<title>runtime.stdcall1 (5 samples, 0.03%)</title><rect x="1174.5" y="85" width="0.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1177.45" y="95.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (87 samples, 0.60%)</title><rect x="839.1" y="165" width="7.0" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="842.10" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (85 samples, 0.58%)</title><rect x="839.2" y="133" width="6.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="842.18" y="143.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (4 samples, 0.03%)</title><rect x="1039.5" y="149" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1042.53" y="159.5" ></text>
</g>
<g >
<title>runtime.chansend1 (9 samples, 0.06%)</title><rect x="837.1" y="213" width="0.7" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="840.08" y="223.5" ></text>
</g>
<g >
<title>runtime.preemptone (2 samples, 0.01%)</title><rect x="856.9" y="101" width="0.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="859.92" y="111.5" ></text>
</g>
<g >
<title>runtime.findObject (9 samples, 0.06%)</title><rect x="854.3" y="69" width="0.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="857.33" y="79.5" ></text>
</g>
<g >
<title>runtime.preemptone (23 samples, 0.16%)</title><rect x="1122.7" y="101" width="1.9" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1125.70" y="111.5" ></text>
</g>
<g >
<title>runtime.lock2 (77 samples, 0.53%)</title><rect x="1085.9" y="181" width="6.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1088.94" y="191.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).scavenge.func1 (26 samples, 0.18%)</title><rect x="1108.7" y="213" width="2.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1111.69" y="223.5" ></text>
</g>
<g >
<title>runtime.osyield (263 samples, 1.80%)</title><rect x="1013.2" y="133" width="21.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1016.21" y="143.5" >r..</text>
</g>
<g >
<title>runtime.findRunnable (36 samples, 0.25%)</title><rect x="1038.3" y="165" width="2.9" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1041.32" y="175.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (2 samples, 0.01%)</title><rect x="493.1" y="197" width="0.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="496.06" y="207.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.01%)</title><rect x="846.9" y="117" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="849.88" y="127.5" ></text>
</g>
<g >
<title>runtime.stealWork (9 samples, 0.06%)</title><rect x="1040.2" y="149" width="0.7" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1043.18" y="159.5" ></text>
</g>
<g >
<title>runtime.scanobject (3 samples, 0.02%)</title><rect x="1178.1" y="181" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1181.10" y="191.5" ></text>
</g>
<g >
<title>runtime.stdcall2 (44 samples, 0.30%)</title><rect x="1180.4" y="133" width="3.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1183.36" y="143.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).enlistWorker (136 samples, 0.93%)</title><rect x="1111.6" y="149" width="11.0" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1114.61" y="159.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).balance (15 samples, 0.10%)</title><rect x="939.6" y="165" width="1.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="942.60" y="175.5" ></text>
</g>
<g >
<title>runtime.asyncPreempt (2 samples, 0.01%)</title><rect x="669.3" y="197" width="0.1" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="672.28" y="207.5" ></text>
</g>
<g >
<title>runtime.stdcall2 (2 samples, 0.01%)</title><rect x="1189.2" y="133" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1192.19" y="143.5" ></text>
</g>
<g >
<title>runtime.stdcall2 (29 samples, 0.20%)</title><rect x="1035.5" y="117" width="2.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1038.48" y="127.5" ></text>
</g>
<g >
<title>runtime.stdcall2 (77 samples, 0.53%)</title><rect x="1085.9" y="149" width="6.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1088.94" y="159.5" ></text>
</g>
<g >
<title>runtime.systemstack (3 samples, 0.02%)</title><rect x="856.9" y="165" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="859.92" y="175.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone.func1 (4 samples, 0.03%)</title><rect x="1039.9" y="133" width="0.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1042.86" y="143.5" ></text>
</g>
<g >
<title>runtime.runqsteal (8 samples, 0.05%)</title><rect x="1040.2" y="133" width="0.6" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1043.18" y="143.5" ></text>
</g>
<g >
<title>runtime.osyield (5 samples, 0.03%)</title><rect x="1123.8" y="69" width="0.4" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1126.84" y="79.5" ></text>
</g>
<g >
<title>runtime.(*gcBits).bitp (35 samples, 0.24%)</title><rect x="957.7" y="149" width="2.9" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="960.74" y="159.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (4 samples, 0.03%)</title><rect x="1039.9" y="117" width="0.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1042.86" y="127.5" ></text>
</g>
<g >
<title>runtime.stopTheWorldWithSema (38 samples, 0.26%)</title><rect x="1186.0" y="197" width="3.0" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1188.95" y="207.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).put (23 samples, 0.16%)</title><rect x="1122.7" y="133" width="1.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1125.70" y="143.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (2 samples, 0.01%)</title><rect x="1122.5" y="117" width="0.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1125.46" y="127.5" ></text>
</g>
<g >
<title>runtime.runqgrab.osyield.func1 (8 samples, 0.05%)</title><rect x="1040.2" y="101" width="0.6" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1043.18" y="111.5" ></text>
</g>
<g >
<title>runtime.scanobject (126 samples, 0.86%)</title><rect x="1167.0" y="181" width="10.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1170.00" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mspan).typePointersOfUnchecked (18 samples, 0.12%)</title><rect x="852.7" y="69" width="1.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="855.71" y="79.5" ></text>
</g>
<g >
<title>runtime.lock2.osyield.func1 (12 samples, 0.08%)</title><rect x="1173.5" y="69" width="1.0" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1176.48" y="79.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).alloc (32 samples, 0.22%)</title><rect x="841.8" y="101" width="2.6" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="844.77" y="111.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocMSpanLocked (12 samples, 0.08%)</title><rect x="839.6" y="101" width="1.0" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="842.59" y="111.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep.(*mheap).freeSpan.func4 (10 samples, 0.07%)</title><rect x="934.7" y="165" width="0.8" height="15.0" fill="rgb(208,13,3)" rx="2" ry="2" />
<text  x="937.66" y="175.5" ></text>
</g>
<g >
<title>runtime.lock2 (2 samples, 0.01%)</title><rect x="837.6" y="181" width="0.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="840.64" y="191.5" ></text>
</g>
<g >
<title>runtime.memclrHasPointers (2 samples, 0.01%)</title><rect x="595.7" y="165" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="598.75" y="175.5" ></text>
</g>
<g >
<title>runtime.send.goready.func1 (4 samples, 0.03%)</title><rect x="1189.4" y="213" width="0.3" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1192.35" y="223.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (8 samples, 0.05%)</title><rect x="1177.2" y="133" width="0.7" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1180.20" y="143.5" ></text>
</g>
<g >
<title>runtime.(*mspan).base (18 samples, 0.12%)</title><rect x="886.4" y="197" width="1.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="889.40" y="207.5" ></text>
</g>
<g >
<title>runtime.stdcall2 (2 samples, 0.01%)</title><rect x="1085.7" y="85" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1088.69" y="95.5" ></text>
</g>
<g >
<title>runtime.osyield (20 samples, 0.14%)</title><rect x="1083.0" y="181" width="1.6" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1086.02" y="191.5" ></text>
</g>
<g >
<title>runtime.stdcall1 (2 samples, 0.01%)</title><rect x="1041.3" y="133" width="0.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1044.32" y="143.5" ></text>
</g>
<g >
<title>runtime.unlock2 (2 samples, 0.01%)</title><rect x="1041.3" y="165" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1044.32" y="175.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (3 samples, 0.02%)</title><rect x="1185.1" y="149" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1188.06" y="159.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (6 samples, 0.04%)</title><rect x="933.4" y="165" width="0.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="936.37" y="175.5" ></text>
</g>
<g >
<title>runtime.stdcall1 (7 samples, 0.05%)</title><rect x="1120.3" y="101" width="0.5" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1123.27" y="111.5" ></text>
</g>
<g >
<title>runtime.osyield (3 samples, 0.02%)</title><rect x="1164.3" y="117" width="0.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1167.33" y="127.5" ></text>
</g>
<g >
<title>runtime.lock2 (9 samples, 0.06%)</title><rect x="1034.7" y="165" width="0.7" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1037.68" y="175.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (144 samples, 0.99%)</title><rect x="891.5" y="133" width="11.7" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="894.50" y="143.5" ></text>
</g>
<g >
<title>runtime.(*mspan).typePointersOfUnchecked (61 samples, 0.42%)</title><rect x="964.7" y="149" width="4.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="967.71" y="159.5" ></text>
</g>
<g >
<title>runtime.greyobject (3 samples, 0.02%)</title><rect x="1178.1" y="165" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1181.10" y="175.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (149 samples, 1.02%)</title><rect x="891.1" y="149" width="12.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="894.09" y="159.5" ></text>
</g>
<g >
<title>runtime.(*gcBits).bitp (5 samples, 0.03%)</title><rect x="891.1" y="133" width="0.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="894.09" y="143.5" ></text>
</g>
<g >
<title>runtime.semasleep (251 samples, 1.72%)</title><rect x="991.1" y="133" width="20.3" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="994.11" y="143.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).balance (395 samples, 2.71%)</title><rect x="1124.6" y="181" width="32.0" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1127.57" y="191.5" >ru..</text>
</g>
<g >
<title>runtime.lock2 (14 samples, 0.10%)</title><rect x="988.9" y="181" width="1.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="991.92" y="191.5" ></text>
</g>
<g >
<title>bytes.IndexByte (1,000 samples, 6.86%)</title><rect x="395.7" y="229" width="81.0" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="398.72" y="239.5" >bytes.Ind..</text>
</g>
<g >
<title>runtime.stdcall1 (6 samples, 0.04%)</title><rect x="1156.1" y="85" width="0.5" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1159.07" y="95.5" ></text>
</g>
<g >
<title>runtime.gcstopm (3 samples, 0.02%)</title><rect x="1039.3" y="149" width="0.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1042.29" y="159.5" ></text>
</g>
<g >
<title>runtime.stdcall0 (3 samples, 0.02%)</title><rect x="1164.3" y="85" width="0.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1167.33" y="95.5" ></text>
</g>
<g >
<title>runtime.semasleep (80 samples, 0.55%)</title><rect x="1167.0" y="69" width="6.5" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1170.00" y="79.5" ></text>
</g>
<g >
<title>runtime.semasleep (29 samples, 0.20%)</title><rect x="1035.5" y="133" width="2.3" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1038.48" y="143.5" ></text>
</g>
<g >
<title>runtime.semasleep (2 samples, 0.01%)</title><rect x="1085.5" y="133" width="0.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1088.45" y="143.5" ></text>
</g>
<g >
<title>runtime.semasleep (2 samples, 0.01%)</title><rect x="1185.1" y="117" width="0.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1188.06" y="127.5" ></text>
</g>
<g >
<title>runtime.(*wbBuf).get2 (175 samples, 1.20%)</title><rect x="889.0" y="197" width="14.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="891.99" y="207.5" ></text>
</g>
<g >
<title>runtime.scanobject (23 samples, 0.16%)</title><rect x="1122.7" y="165" width="1.9" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1125.70" y="175.5" ></text>
</g>
<g >
<title>runtime.stdcall1 (17 samples, 0.12%)</title><rect x="1146.7" y="117" width="1.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1149.67" y="127.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (14 samples, 0.10%)</title><rect x="1178.3" y="149" width="1.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1181.34" y="159.5" ></text>
</g>
<g >
<title>runtime.stdcall0 (20 samples, 0.14%)</title><rect x="1011.4" y="117" width="1.7" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1014.43" y="127.5" ></text>
</g>
<g >
<title>runtime.stdcall2 (8 samples, 0.05%)</title><rect x="1184.4" y="133" width="0.7" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1187.41" y="143.5" ></text>
</g>
<g >
<title>runtime.deductSweepCredit (4 samples, 0.03%)</title><rect x="846.7" y="165" width="0.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="849.71" y="175.5" ></text>
</g>
<g >
<title>runtime.semasleep (2 samples, 0.01%)</title><rect x="1186.0" y="117" width="0.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1188.95" y="127.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (3 samples, 0.02%)</title><rect x="1040.9" y="149" width="0.3" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1043.91" y="159.5" ></text>
</g>
<g >
<title>runtime.preemptall (11 samples, 0.08%)</title><rect x="1185.1" y="181" width="0.9" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1188.06" y="191.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).update (3 samples, 0.02%)</title><rect x="934.7" y="117" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="937.66" y="127.5" ></text>
</g>
<g >
<title>runtime.systemstack (117 samples, 0.80%)</title><rect x="847.4" y="149" width="9.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="850.44" y="159.5" ></text>
</g>
<g >
<title>runtime.stdcall2 (80 samples, 0.55%)</title><rect x="1167.0" y="53" width="6.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1170.00" y="63.5" ></text>
</g>
<g >
<title>runtime.stdcall0 (12 samples, 0.08%)</title><rect x="1173.5" y="53" width="1.0" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1176.48" y="63.5" ></text>
</g>
<g >
<title>runtime.unlock2 (2 samples, 0.01%)</title><rect x="1122.5" y="101" width="0.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1125.46" y="111.5" ></text>
</g>
<g >
<title>runtime.preemptall (12 samples, 0.08%)</title><rect x="1184.1" y="181" width="1.0" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1187.09" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mheap).initSpan (15 samples, 0.10%)</title><rect x="840.6" y="101" width="1.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="843.56" y="111.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (160 samples, 1.10%)</title><rect x="1111.6" y="197" width="13.0" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1114.61" y="207.5" ></text>
</g>
<g >
<title>runtime.readUintptr (2 samples, 0.01%)</title><rect x="928.5" y="197" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="931.51" y="207.5" ></text>
</g>
<g >
<title>runtime.procyield (4 samples, 0.03%)</title><rect x="935.1" y="117" width="0.4" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="938.15" y="127.5" ></text>
</g>
<g >
<title>internal/bytealg.IndexByte (62 samples, 0.43%)</title><rect x="736.8" y="181" width="5.0" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="739.82" y="191.5" ></text>
</g>
<g >
<title>runtime.stdcall0 (2 samples, 0.01%)</title><rect x="1179.3" y="101" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1182.31" y="111.5" ></text>
</g>
<g >
<title>runtime.(*gcBits).bitp (6 samples, 0.04%)</title><rect x="851.2" y="69" width="0.5" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="854.25" y="79.5" ></text>
</g>
<g >
<title>runtime.arenaIndex (12 samples, 0.08%)</title><rect x="969.7" y="149" width="1.0" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="972.73" y="159.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (9 samples, 0.06%)</title><rect x="1034.7" y="181" width="0.7" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1037.68" y="191.5" ></text>
</g>
<g >
<title>runtime.goparkunlock (2 samples, 0.01%)</title><rect x="933.2" y="213" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="936.20" y="223.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep.(*mheap).freeSpan.func4 (2 samples, 0.01%)</title><rect x="846.9" y="101" width="0.1" height="15.0" fill="rgb(208,13,3)" rx="2" ry="2" />
<text  x="849.88" y="111.5" ></text>
</g>
<g >
<title>runtime.stdcall0 (163 samples, 1.12%)</title><rect x="1092.2" y="149" width="13.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1095.17" y="159.5" ></text>
</g>
<g >
<title>runtime.osyield (2 samples, 0.01%)</title><rect x="1179.3" y="133" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1182.31" y="143.5" ></text>
</g>
<g >
<title>indexbytebody (270 samples, 1.85%)</title><rect x="715.0" y="181" width="21.8" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="717.96" y="191.5" >i..</text>
</g>
<g >
<title>runtime.recv.goready.func1 (2 samples, 0.01%)</title><rect x="1189.2" y="213" width="0.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1192.19" y="223.5" ></text>
</g>
<g >
<title>runtime.typePointers.next (42 samples, 0.29%)</title><rect x="981.5" y="149" width="3.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="984.47" y="159.5" ></text>
</g>
<g >
<title>runtime.semasleep (231 samples, 1.59%)</title><rect x="1124.6" y="101" width="18.7" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1127.57" y="111.5" ></text>
</g>
<g >
<title>runtime.preemptM (2 samples, 0.01%)</title><rect x="940.6" y="117" width="0.1" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="943.57" y="127.5" ></text>
</g>
<g >
<title>runtime.lock2 (96 samples, 0.66%)</title><rect x="1156.6" y="117" width="7.7" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1159.55" y="127.5" ></text>
</g>
<g >
<title>runtime.preemptM (11 samples, 0.08%)</title><rect x="1184.2" y="149" width="0.9" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="1187.17" y="159.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).putBatch (2 samples, 0.01%)</title><rect x="896.1" y="117" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="899.11" y="127.5" ></text>
</g>
<g >
<title>runtime.lock2.osyield.func1 (163 samples, 1.12%)</title><rect x="1092.2" y="165" width="13.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1095.17" y="175.5" ></text>
</g>
<g >
<title>runtime.stdcall0 (5 samples, 0.03%)</title><rect x="1123.8" y="37" width="0.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1126.84" y="47.5" ></text>
</g>
<g >
<title>runtime.deductAssistCredit (118 samples, 0.81%)</title><rect x="847.4" y="181" width="9.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="850.36" y="191.5" ></text>
</g>
<g >
<title>runtime.stdcall7 (3 samples, 0.02%)</title><rect x="1177.0" y="85" width="0.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1179.96" y="95.5" ></text>
</g>
<g >
<title>runtime.lock2 (2 samples, 0.01%)</title><rect x="1108.7" y="181" width="0.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1111.69" y="191.5" ></text>
</g>
<g >
<title>runtime.gopark (2 samples, 0.01%)</title><rect x="837.4" y="181" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="840.40" y="191.5" ></text>
</g>
<g >
<title>runtime.osyield (12 samples, 0.08%)</title><rect x="1173.5" y="85" width="1.0" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1176.48" y="95.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpan (2 samples, 0.01%)</title><rect x="846.9" y="133" width="0.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="849.88" y="143.5" ></text>
</g>
<g >
<title>runtime.preemptM (8 samples, 0.05%)</title><rect x="1185.3" y="149" width="0.7" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="1188.30" y="159.5" ></text>
</g>
<g >
<title>runtime.arenaIndex (2 samples, 0.01%)</title><rect x="854.2" y="69" width="0.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="857.16" y="79.5" ></text>
</g>
<g >
<title>runtime.stdcall1 (2 samples, 0.01%)</title><rect x="1039.4" y="85" width="0.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1042.37" y="95.5" ></text>
</g>
<g >
<title>runtime.spanOf (41 samples, 0.28%)</title><rect x="928.9" y="197" width="3.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="931.91" y="207.5" ></text>
</g>
<g >
<title>runtime.preemptall (71 samples, 0.49%)</title><rect x="1178.3" y="181" width="5.8" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1181.34" y="191.5" ></text>
</g>
<g >
<title>runtime.stdcall3 (21 samples, 0.14%)</title><rect x="1109.1" y="165" width="1.7" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1112.10" y="175.5" ></text>
</g>
<g >
<title>runtime.semasleep (12 samples, 0.08%)</title><rect x="1178.3" y="117" width="1.0" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1181.34" y="127.5" ></text>
</g>
<g >
<title>runtime.stdcall2 (231 samples, 1.59%)</title><rect x="1124.6" y="85" width="18.7" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1127.57" y="95.5" ></text>
</g>
<g >
<title>runtime.ready (4 samples, 0.03%)</title><rect x="1189.4" y="197" width="0.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1192.35" y="207.5" ></text>
</g>
<g >
<title>runtime.preemptone (38 samples, 0.26%)</title><rect x="1186.0" y="165" width="3.0" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1188.95" y="175.5" ></text>
</g>
<g >
<title>runtime.semawakeup (11 samples, 0.08%)</title><rect x="1041.5" y="133" width="0.9" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1044.48" y="143.5" ></text>
</g>
<g >
<title>runtime.newAllocBits (2 samples, 0.01%)</title><rect x="844.4" y="101" width="0.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="847.45" y="111.5" ></text>
</g>
<g >
<title>runtime.gcDrainMarkWorkerDedicated (612 samples, 4.20%)</title><rect x="938.0" y="197" width="49.5" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="940.98" y="207.5" >runti..</text>
</g>
<g >
<title>runtime.addb (2 samples, 0.01%)</title><rect x="969.5" y="133" width="0.1" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="972.48" y="143.5" ></text>
</g>
<g >
<title>runtime.runqgrab.osyield.func1 (263 samples, 1.80%)</title><rect x="1013.2" y="117" width="21.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1016.21" y="127.5" >r..</text>
</g>
<g >
<title>runtime.stdcall2 (7 samples, 0.05%)</title><rect x="1185.4" y="133" width="0.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1188.38" y="143.5" ></text>
</g>
<g >
<title>runtime.stdcall0 (9 samples, 0.06%)</title><rect x="1119.5" y="69" width="0.8" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1122.54" y="79.5" ></text>
</g>
<g >
<title>runtime.semasleep (96 samples, 0.66%)</title><rect x="1156.6" y="101" width="7.7" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1159.55" y="111.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (240 samples, 1.65%)</title><rect x="1085.9" y="197" width="19.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1088.94" y="207.5" ></text>
</g>
<g >
<title>runtime.gcDrain (650 samples, 4.46%)</title><rect x="1124.6" y="197" width="52.6" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1127.57" y="207.5" >runti..</text>
</g>
<g >
<title>runtime.lockWithRank (5 samples, 0.03%)</title><rect x="1108.7" y="197" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1111.69" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mheap).initSpan (3 samples, 0.02%)</title><rect x="1085.5" y="181" width="0.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1088.45" y="191.5" ></text>
</g>
<g >
<title>runtime.semawakeup (2 samples, 0.01%)</title><rect x="1039.4" y="101" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1042.37" y="111.5" ></text>
</g>
<g >
<title>runtime.(*mcache).allocLarge (107 samples, 0.73%)</title><rect x="838.5" y="181" width="8.6" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="841.45" y="191.5" ></text>
</g>
<g >
<title>runtime.stdcall1 (8 samples, 0.05%)</title><rect x="1186.2" y="133" width="0.6" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1189.19" y="143.5" ></text>
</g>
<g >
<title>runtime.stdcall2 (2 samples, 0.01%)</title><rect x="1085.5" y="117" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1088.45" y="127.5" ></text>
</g>
<g >
<title>runtime.markBits.isMarked (3 samples, 0.02%)</title><rect x="977.3" y="149" width="0.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="980.26" y="159.5" ></text>
</g>
<g >
<title>runtime.preemptone (395 samples, 2.71%)</title><rect x="1124.6" y="149" width="32.0" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1127.57" y="159.5" >ru..</text>
</g>
<g >
<title>runtime.schedule (592 samples, 4.06%)</title><rect x="990.1" y="197" width="48.0" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="993.13" y="207.5" >runt..</text>
</g>
<g >
<title>runtime.forEachPInternal (11 samples, 0.08%)</title><rect x="1185.1" y="197" width="0.9" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1188.06" y="207.5" ></text>
</g>
<g >
<title>runtime.lock2 (2 samples, 0.01%)</title><rect x="1189.2" y="165" width="0.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1192.19" y="175.5" ></text>
</g>
<g >
<title>runtime.bucketShift (2 samples, 0.01%)</title><rect x="492.5" y="213" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="495.50" y="223.5" ></text>
</g>
<g >
<title>runtime.stdcall1 (2 samples, 0.01%)</title><rect x="1037.9" y="101" width="0.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1040.91" y="111.5" ></text>
</g>
<g >
<title>runtime.findObject (73 samples, 0.50%)</title><rect x="970.7" y="149" width="5.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="973.70" y="159.5" ></text>
</g>
<g >
<title>runtime.startm (11 samples, 0.08%)</title><rect x="1041.5" y="165" width="0.9" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1044.48" y="175.5" ></text>
</g>
<g >
<title>main.ParseBlocks.func1.1 (4,151 samples, 28.49%)</title><rect x="596.2" y="229" width="336.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="599.15" y="239.5" >main.ParseBlocks.func1.1</text>
</g>
<g >
<title>runtime.lock2 (14 samples, 0.10%)</title><rect x="1122.7" y="69" width="1.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1125.70" y="79.5" ></text>
</g>
<g >
<title>runtime.osyield (3 samples, 0.02%)</title><rect x="1108.9" y="181" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1111.86" y="191.5" ></text>
</g>
<g >
<title>runtime.arenaIndex (4 samples, 0.03%)</title><rect x="896.3" y="117" width="0.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="899.28" y="127.5" ></text>
</g>
<g >
<title>runtime.main (11 samples, 0.08%)</title><rect x="987.9" y="229" width="0.9" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="990.95" y="239.5" ></text>
</g>
<g >
<title>runtime.semasleep (77 samples, 0.53%)</title><rect x="1085.9" y="165" width="6.3" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1088.94" y="175.5" ></text>
</g>
<g >
<title>runtime.greyobject (8 samples, 0.05%)</title><rect x="976.6" y="149" width="0.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="979.61" y="159.5" ></text>
</g>
<g >
<title>runtime.stdcall4 (40 samples, 0.27%)</title><rect x="1105.4" y="165" width="3.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1108.37" y="175.5" ></text>
</g>
<g >
<title>hash/fnv.(*sum32a).Write (626 samples, 4.30%)</title><rect x="786.2" y="213" width="50.7" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="789.22" y="223.5" >hash/..</text>
</g>
<g >
<title>runtime.stdcall2 (7 samples, 0.05%)</title><rect x="1177.2" y="85" width="0.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1180.20" y="95.5" ></text>
</g>
<g >
<title>runtime.lock2 (6 samples, 0.04%)</title><rect x="933.4" y="149" width="0.5" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="936.37" y="159.5" ></text>
</g>
<g >
<title>runtime.startm (2 samples, 0.01%)</title><rect x="1037.9" y="149" width="0.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1040.91" y="159.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (6 samples, 0.04%)</title><rect x="1156.1" y="133" width="0.5" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1159.07" y="143.5" ></text>
</g>
<g >
<title>runtime.lock2 (30 samples, 0.21%)</title><rect x="1035.4" y="149" width="2.4" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1038.40" y="159.5" ></text>
</g>
<g >
<title>runtime.asyncPreempt (27 samples, 0.19%)</title><rect x="393.5" y="213" width="2.2" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="396.53" y="223.5" ></text>
</g>
<g >
<title>runtime.typedmemmove (2 samples, 0.01%)</title><rect x="492.9" y="181" width="0.2" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="495.90" y="191.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (14 samples, 0.10%)</title><rect x="988.9" y="197" width="1.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="991.92" y="207.5" ></text>
</g>
<g >
<title>runtime.asyncPreempt (2 samples, 0.01%)</title><rect x="836.9" y="213" width="0.2" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="839.92" y="223.5" ></text>
</g>
<g >
<title>main.main (5 samples, 0.03%)</title><rect x="988.4" y="213" width="0.4" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="991.43" y="223.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (522 samples, 3.58%)</title><rect x="1042.4" y="197" width="42.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1045.37" y="207.5" >run..</text>
</g>
<g >
<title>runtime.lock2.osyield.func1 (20 samples, 0.14%)</title><rect x="1011.4" y="133" width="1.7" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1014.43" y="143.5" ></text>
</g>
<g >
<title>runtime.typePointers.nextFast (8 samples, 0.05%)</title><rect x="984.9" y="149" width="0.6" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="987.87" y="159.5" ></text>
</g>
<g >
<title>runtime.unlock2 (3 samples, 0.02%)</title><rect x="845.8" y="101" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="848.82" y="111.5" ></text>
</g>
<g >
<title>runtime.gcStart.func1 (2 samples, 0.01%)</title><rect x="856.9" y="149" width="0.2" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="859.92" y="159.5" ></text>
</g>
<g >
<title>runtime.morestack (580 samples, 3.98%)</title><rect x="1038.1" y="229" width="46.9" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1041.08" y="239.5" >runt..</text>
</g>
<g >
<title>runtime.gcMarkDone.func2 (12 samples, 0.08%)</title><rect x="1184.1" y="213" width="1.0" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1187.09" y="223.5" ></text>
</g>
<g >
<title>runtime.stdcall2 (20 samples, 0.14%)</title><rect x="1120.8" y="101" width="1.7" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1123.84" y="111.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpanLocked (5 samples, 0.03%)</title><rect x="934.7" y="149" width="0.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="937.66" y="159.5" ></text>
</g>
<g >
<title>runtime.semasleep (2 samples, 0.01%)</title><rect x="1110.8" y="165" width="0.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1113.80" y="175.5" ></text>
</g>
<g >
<title>runtime.suspendG (129 samples, 0.89%)</title><rect x="1156.6" y="149" width="10.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1159.55" y="159.5" ></text>
</g>
<g >
<title>runtime.stdcall1 (11 samples, 0.08%)</title><rect x="1179.5" y="133" width="0.9" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1182.47" y="143.5" ></text>
</g>
<g >
<title>runtime.semawakeup (2 samples, 0.01%)</title><rect x="1041.3" y="149" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1044.32" y="159.5" ></text>
</g>
<g >
<title>runtime.stdcall0 (8 samples, 0.05%)</title><rect x="1040.2" y="85" width="0.6" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1043.18" y="95.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (117 samples, 0.80%)</title><rect x="847.4" y="133" width="9.5" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="850.44" y="143.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).tryGet (4 samples, 0.03%)</title><rect x="940.8" y="165" width="0.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="943.82" y="175.5" ></text>
</g>
<g >
<title>runtime.semasleep (7 samples, 0.05%)</title><rect x="1177.2" y="101" width="0.6" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1180.20" y="111.5" ></text>
</g>
<g >
<title>brc/pkg.SplitParse (896 samples, 6.15%)</title><rect x="669.4" y="213" width="72.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="672.44" y="223.5" >brc/pkg...</text>
</g>
<g >
<title>runtime.unlockWithRank (5 samples, 0.03%)</title><rect x="1084.6" y="197" width="0.4" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1087.64" y="207.5" ></text>
</g>
<g >
<title>runtime.runtimer (3 samples, 0.02%)</title><rect x="1039.0" y="133" width="0.3" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="1042.05" y="143.5" ></text>
</g>
<g >
<title>all (14,571 samples, 100%)</title><rect x="10.0" y="245" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
</g>
</svg>
